{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/createCard.js","webpack:///./lib/chooseHazard.js","webpack:///./lib/setup.js","webpack:///./lib/fightHazard.js","webpack:///./lib/cards.js","webpack:///./lib/game.js","webpack:///./main.js","webpack:///./lib/ability.js","webpack:///./lib/helpModal.js","webpack:///./lib/endGame.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","createHazard","card","stage","card_node","document","createElement","img","title","body","id","textContent","hazard","style","textAlign","src","height","width","margin","draw","drawIcon","drawText","fight","fightIcon","fightText","position","borderRadius","backgroundColor","padding","innerHTML","outerHTML","className","display","flexDirection","alignItems","createAbility","header","ability","borderBottomRightRadius","borderTopLeftRadius","cost","costIcon","costText","borderBottomLeftRadius","borderTopRightRadius","text","spec","length","createPirate","pirate","__webpack_exports__","chooseHazard","createCard","fightHazard","hazards","game","querySelector","life","gameNode","selectionDiv","confirmDiv","confirmBtn","switcher","checkbox","setAttribute","makeCard","setEvents","num","node","cardBody","level","aside","$","data","addEventListener","e","flipCard","selectCard","check","path","split","checked","newCard","remove","target","box","css","removeClass","addClass","prop","off","on","chooseCard","other","returnHazard","setHazard","setup","age","querySelectorAll","abilities","age_img","appendChild","resolveFight","endGame","fightDiv","drawDiv","hazardDiv","pushDiv","hazardCard","powers","fightDisp","totalFight","drawCnt","resolve","playerFght","green","yellow","red","drawCard","activeAbilities","slice","hover","this","stop","spentAbilities","targetDiv","changeLife","lose","drawAbility","type","push","power_disp","test","forEach","power","dataset","positions","gemBox","pos","activateAbility","key","cursor","old_element","getElementById","new_element","cloneNode","parentNode","replaceChild","end","goals","resolveEnd","win","num_cards","cardsToDelete","gameDiv","modal","createModal","el","marginTop","console","log","getAttribute","selected","border","unmarkForDelete","markForDelete","drawHazards","delete","removeChild","activeHazard","cards","confirm","start","age_young","age_old","pirates","[object Object]","shuffle","spentHazards","markDelete","yage","oage","arr","splice","Math","floor","random","holdAbilities","pop","concat","pile","a","j","Game","helpModal","event","audio","muted","currentTime","play","mainGame","startGame","setupModalAll","temp","nxtCards","place","selector","holder","divEl","returnActiveAbilities","checker","introModal","intro","navigation","basic","returnDiv","basicModal","powersModal","loseGame","winGame"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","export function createHazard(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let body = document.createElement('div');\n  body.id = 'card-body';\n  title.textContent = `${card.hazard.name}`;\n  title.style.textAlign = 'center';\n\n  if (card.hazard.name === 'Explore The Wreck') {\n    img.src = './assets/images/wreck.jpg';\n  } else if (card.hazard.name === 'Wild Animals') {\n    img.src = './assets/images/tiger.jpg';\n  } else if (card.hazard.name === 'Cannibals') {\n    img.src = './assets/images/cannibals.jpg';\n  } else if (card.hazard.name === 'Explore Deep Into The Island') {\n    img.src = './assets/images/jungle.jpg';\n  } else if (card.hazard.name === 'Explore The Island') {\n    img.src = './assets/images/island.jpg';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  let draw = document.createElement('div');\n  let drawIcon = document.createElement('img');\n  let drawText = document.createElement('span');\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  draw.style.position = 'relative';\n  draw.style.borderRadius = '50%';\n  draw.style.backgroundColor = '#602403';\n  draw.style.padding = '7px 7px 2px 7px';\n  fight.style.position = 'relative';\n  fight.style.borderRadius = '50%';\n  fight.style.backgroundColor = '#602403';\n  fight.style.padding = '7px 7px 2px 7px';\n\n  drawIcon.src = './assets/images/card-draw-icon.png';\n  drawText.textContent = `${card.hazard['draw']}`;\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card.hazard[stage]}`;\n\n  draw.innerHTML += drawText.outerHTML;\n  fight.innerHTML += fightText.outerHTML;\n  draw.innerHTML += drawIcon.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  body.innerHTML += draw.outerHTML;\n  body.innerHTML += fight.outerHTML;\n\n  card_node.innerHTML += title.outerHTML;\n  if (card.hazard.name === 'Wild Animals' || card.hazard.name === 'Cannibals') {\n    card_node.innerHTML += document.createElement('br').outerHTML;\n  }\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.id = 'hazard-card';\n  card_node.className = 'card';\n  // card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n\nexport function createAbility(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let header = document.createElement('div');\n  let body = document.createElement('div');\n  header.id = 'card-header';\n  body.id = 'card-body';\n  title.textContent = `${card.ability.name}`;\n  title.style.textAlign = 'center';\n\n  if (card.ability.name === 'Weapon') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Strategy') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Vision') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Experience') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Knowledge') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Repetition') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Trick') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Nutritious Food') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Reader') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Equipement') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Very Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Tired') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Afraid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Stupid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Unconcentrated') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Distracted') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Weak') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Genius') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Focused') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Mimicry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Eat') {\n    img.src = './assets/images/weapon.png';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  // let textBody = document.createElement('div');\n  // textBody.textContent = card.ability.spec.text;\n  // let textFight = document.createElement('div');\n  // textFight.textContent = `Fight: ${card.ability.fight}`;\n  //\n  // header.innerHTML += textBody.outerHTML;\n  // header.innerHTML += textFight.outerHTML;\n\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  fight.style.position = 'relative';\n  fight.style.borderBottomRightRadius = '50%';\n  fight.style.borderTopLeftRadius = '5px';\n  fight.style.backgroundColor = '#15afb2';\n  fight.style.padding = '2px 4px 0px 0px';\n  fight.style.margin = '-2px 0 0 -2px';\n\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card.ability['fight']}`;\n  fight.innerHTML += fightText.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  header.innerHTML += fight.outerHTML;\n\n  let cost = document.createElement('div');\n  let costIcon = document.createElement('img');\n  let costText = document.createElement('span');\n\n  cost.style.position = 'relative';\n  cost.style.borderBottomLeftRadius = '50%';\n  cost.style.borderTopRightRadius = '5px';\n  cost.style.backgroundColor = '#15afb2';\n  cost.style.padding = '2px 4px 0px 0px';\n  cost.style.margin = '-2px -2px 0 0';\n\n  costIcon.src = './assets/images/cost-icon.png';\n  costText.textContent = `${card.ability['cost']}`;\n  cost.innerHTML += costText.outerHTML;\n  cost.innerHTML += costIcon.outerHTML;\n  header.innerHTML += cost.outerHTML;\n  const text = card.ability.spec.text || '...';\n  body.textContent = `${text}`;\n\n  card_node.innerHTML += title.outerHTML;\n  if (card.ability.name.length < 11) {\n    card_node.innerHTML += document.createElement('br').outerHTML;\n  }\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.innerHTML += header.outerHTML;\n\n  card_node.className = 'card';\n  card_node.id = 'ability-card';\n  // card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n\nexport function createPirate(card) {\n  const pirate = document.createElement('div');\n  pirate.className = 'pirate';\n  let draw = document.createElement('div');\n  let drawIcon = document.createElement('img');\n  let drawText = document.createElement('span');\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  draw.style.position = 'relative';\n  draw.style.borderRadius = '50%';\n  draw.style.backgroundColor = '#602403';\n  fight.style.position = 'relative';\n  fight.style.borderRadius = '50%';\n  fight.style.backgroundColor = '#602403';\n\n  drawIcon.src = './assets/images/card-draw-icon.png';\n  drawText.textContent = `${card[0].draw}`;\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card[0].fight}`;\n\n  draw.innerHTML += drawText.outerHTML;\n  fight.innerHTML += fightText.outerHTML;\n  draw.innerHTML += drawIcon.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  pirate.innerHTML += draw.outerHTML;\n  pirate.innerHTML += fight.outerHTML;\n  return pirate;\n}\n","const createCard = require('./createCard.js');\nconst fightHazard = require('./fightHazard.js');\n\nexport const chooseHazard = (hazards, game) => {\n  document.querySelector('#life').textContent = `Life: ${game.life}`;\n  document.querySelector('#hazard').textContent = game.hazards.length;\n  const gameNode = document.querySelector('#main-game');\n  const selectionDiv = document.createElement('div');\n  selectionDiv.id = 'selection-div';\n  const confirmDiv = document.createElement('div');\n  confirmDiv.id = 'confirm-div';\n  const confirmBtn = document.createElement('div');\n  confirmBtn.id = 'confirm-btn';\n  confirmBtn.className = 'confirm-not';\n  confirmBtn.textContent = 'Confirm Selection';\n  confirmDiv.innerHTML += confirmBtn.outerHTML;\n\n  let switcher = document.createElement('img');\n  let checkbox = document.createElement('input');\n  switcher.src = './assets/images/switch.png';\n  checkbox.setAttribute('type', 'checkbox');\n  makeCard(checkbox, switcher, 1, selectionDiv, game, hazards[0]);\n  makeCard(checkbox, switcher, 2, selectionDiv, game, hazards[1]);\n\n  gameNode.innerHTML = selectionDiv.outerHTML;\n  gameNode.innerHTML += confirmDiv.outerHTML;\n  setEvents(hazards, game);\n};\n\nconst makeCard = (checkbox, switcher, num, node, game, hazard) => {\n  let card = document.createElement('div');\n  let cardBody = createCard.createHazard(hazard, game.level);\n  let aside = document.createElement('aside');\n\n  card.className = 'card-holder';\n  card.id = `hazard-side-${num}`;\n  aside.id = `card${num}-aside`;\n\n  switcher.id = `switch-${num}`;\n  checkbox.id = `checkbox-${num}`;\n  aside.innerHTML += switcher.outerHTML;\n  aside.innerHTML += checkbox.outerHTML;\n  card.innerHTML += aside.outerHTML;\n  card.innerHTML += cardBody.outerHTML;\n  node.innerHTML += card.outerHTML;\n};\n\nconst setEvents = (hazards, game) => {\n  $(`#switch-1`).data('card', hazards[0]);\n  $(`#switch-1`).data('level', game.level);\n  $(`#switch-2`).data('card', hazards[1]);\n  $(`#switch-2`).data('level', game.level);\n  document.querySelector(`#switch-1`).addEventListener('click', e => {\n    flipCard(e);\n  });\n  document.querySelector(`#checkbox-1`).addEventListener('click', e => {\n    selectCard(e);\n  });\n  document.querySelector(`#switch-2`).addEventListener('click', e => {\n    flipCard(e);\n  });\n  document.querySelector(`#checkbox-2`).addEventListener('click', e => {\n    selectCard(e);\n  });\n};\nconst flipCard = e => {\n  const check = document.querySelector(\n    `#checkbox-${e.path[0].id.split('-')[1]}`\n  ).checked;\n\n  let newCard = null;\n  const hazard = $(`#switch-${e.path[0].id.split('-')[1]}`).data('card');\n  const level = $(`#switch-${e.path[0].id.split('-')[1]}`).data('level');\n\n  let card_node =\n    document.querySelector(`#hazard-side-${e.path[0].id.split('-')[1]}`) ||\n    document.querySelector(`#ability-side-${e.path[0].id.split('-')[1]}`);\n  $(`#hazard-side-${e.path[0].id.split('-')[1]} div`).remove();\n  $(`#ability-side-${e.path[0].id.split('-')[1]} div`).remove();\n  if (card_node.id.split('-')[0] === 'hazard') {\n    newCard = createCard.createAbility(hazard, level);\n    card_node.id = `ability-side-${e.path[0].id.split('-')[1]}`;\n  } else {\n    newCard = createCard.createHazard(hazard, level);\n    card_node.id = `hazard-side-${e.path[0].id.split('-')[1]}`;\n  }\n  card_node.innerHTML += newCard.outerHTML;\n  const switchx = document.querySelector(\n    `#switch-${e.path[0].id.split('-')[1]}`\n  );\n  $(`#switch-${e.path[0].id.split('-')[1]}`).data('card', hazard);\n  $(`#switch-${e.path[0].id.split('-')[1]}`).data('level', level);\n  if (check === true) {\n    document.querySelector(\n      `#checkbox-${e.path[0].id.split('-')[1]}`\n    ).checked = true;\n  }\n  document\n    .querySelector(`#switch-${e.path[0].id.split('-')[1]}`)\n    .addEventListener('click', e => {\n      flipCard(e);\n    });\n  document\n    .querySelector(`#checkbox-${e.path[0].id.split('-')[1]}`)\n    .addEventListener('click', e => {\n      selectCard(e);\n    });\n};\n\nconst selectCard = e => {\n  if (e.target.checked == true) {\n    let box = 1;\n    if (e.target.id.split('-')[1] == 1) {\n      box = 2;\n    }\n    $(`#game`).data('selected', e.target.id.split('-')[1]);\n    $(`#confirm-btn`).css('color', 'white');\n    $(`#confirm-btn`).removeClass('confirm-not');\n    $(`#confirm-btn`).addClass('confirm-yes');\n    $(`#confirm-btn`).css('cursor', 'pointer');\n    $(`#checkbox-${box}`).prop('checked', false);\n    $(`#checkbox-${e.target.id.split('-')[1]}`).prop('checked', true);\n    $(`#confirm-div`).off();\n    $(`#confirm-div`).on('click', 'div', e => {\n      chooseCard(e);\n    });\n  } else {\n    $(`#game`).data('selected', false);\n    $(`#confirm-btn`).css('color', '#c4c4c4');\n    $(`#confirm-btn`).removeClass('confirm-yes');\n    $(`#confirm-btn`).addClass('confirm-not');\n    $(`#confirm-btn`).css('cursor', 'not-allowed');\n    $(`#confirm-div`).off();\n  }\n};\n\nconst chooseCard = e => {\n  let other = 1;\n  if ($(`#game`).data('selected') == 1) {\n    other = 2;\n  }\n  const game = $(`#game`).data('game');\n  game.returnHazard($(`#switch-${other}`).data('card'));\n  game.setHazard($(`#switch-${$('#game').data('selected')}`).data('card'));\n  fightHazard.fightHazard(\n    $(`#switch-${$('#game').data('selected')}`).data('card'),\n    game\n  );\n};\n","export function setup(game) {\n  const life = document.querySelector('#life');\n  const age = document.querySelector('#age-aside');\n  const hazard_stages = document.querySelectorAll('#hazard-stage');\n  const stage = document.querySelector('#stage');\n  const game_node = document.querySelector('#main-game');\n\n  document.querySelector('#abilities').textContent = game.abilities.length;\n\n  if (game.level === 3) {\n    $('#stage').removeClass('yellow');\n    $('#stage').addClass('red');\n  } else if (game.level === 2) {\n    $('#stage').removeClass('green');\n    $('#stage').addClass('yellow');\n  } else {\n    $('#stage').addClass('green');\n  }\n\n  life.textContent = `Life: ${game.life}`;\n  const age_img = document.createElement('img');\n  if (game.age() === 'young') {\n    age_img.src = './assets/images/young.png';\n    age.appendChild(age_img);\n  } else {\n    age_img.src = './assets/images/old.png';\n    age.appendChild(age_img);\n  }\n}\n","const createCard = require('./createCard.js');\nconst chooseHazard = require('./chooseHazard.js');\nconst ability = require('./ability.js');\nconst endGame = require('./endGame.js');\n\nexport const fightHazard = (hazard, game) => {\n  const gameNode = document.querySelector('#main-game');\n  const fightDiv = document.createElement('div');\n  fightDiv.id = 'fight-div';\n  const drawDiv = document.createElement('div');\n  drawDiv.id = 'draw-div';\n  const hazardDiv = document.createElement('div');\n  hazardDiv.id = 'hazard-div';\n  const pushDiv = document.createElement('div');\n  pushDiv.id = 'push-div';\n\n  const hazardCard = createCard.createHazard(hazard, game.level);\n  hazardDiv.innerHTML += hazardCard.outerHTML;\n\n  const powers = document.createElement('div');\n  powers.id = 'powers-disp';\n  hazardDiv.innerHTML += powers.outerHTML;\n\n  const fightDisp = document.createElement('div');\n  fightDisp.id = 'fight-disp';\n\n  const totalFight = document.createElement('div');\n  totalFight.id = 'total-fight';\n  totalFight.textContent = `Total Fight: 0`;\n  const drawCnt = document.createElement('div');\n  drawCnt.id = 'draw-cnt';\n  drawCnt.textContent = `Free draws: ${hazard.hazard.draw}`;\n  const resolve = document.createElement('div');\n  resolve.textContent = 'Resolve Fight';\n  resolve.id = 'resolve-fight';\n  fightDisp.innerHTML += totalFight.outerHTML;\n  fightDisp.innerHTML += drawCnt.outerHTML;\n  fightDisp.innerHTML += resolve.outerHTML;\n  hazardDiv.innerHTML += fightDisp.outerHTML;\n\n  game.playerFght = 0;\n  $('#game').data('drawCnt', hazard.hazard.draw);\n\n  if (game.level === 1) {\n    $('#game').data('drawFght', hazard.hazard.green);\n  } else if (game.level === 2) {\n    $('#game').data('drawFght', hazard.hazard.yellow);\n  } else {\n    $('#game').data('drawFght', hazard.hazard.red);\n  }\n\n  fightDiv.innerHTML += drawDiv.outerHTML;\n  fightDiv.innerHTML += hazardDiv.outerHTML;\n  fightDiv.innerHTML += pushDiv.outerHTML;\n  gameNode.innerHTML = fightDiv.outerHTML;\n  setEvents(game);\n};\n\nexport const setEvents = game => {\n  document.querySelector(`#abilities`).addEventListener('click', e => {\n    drawCard(e);\n  });\n  document.querySelector(`#resolve-fight`).addEventListener('click', e => {\n    $('#game').data('active', game.activeAbilities.slice(0));\n    resolveFight(e);\n  });\n  $('#abilities').hover(\n    function() {\n      $(this).css('border', '2px solid #4a82db');\n    },\n    function() {\n      $(this).css('border', 'none');\n    }\n  );\n};\n\nexport const drawCard = e => {\n  const game = $('#game').data('game');\n  if (\n    game.stop !== 'stop' &&\n    (game.abilities.length > 0 || game.spentAbilities.length > 0)\n  ) {\n    let targetDiv = document.querySelector('#draw-div');\n    const life = document.querySelector('#life');\n    if ($('#game').data('drawCnt') <= 0) {\n      game.changeLife(-1);\n      life.textContent = `Life: ${game.life}`;\n      targetDiv = document.querySelector('#push-div');\n    }\n    if (game.life < 1) {\n      endGame.lose();\n    } else {\n      const newCard = document.createElement('div');\n      const draw = game.drawAbility();\n      game.playerFght += draw.ability.fight;\n      document.querySelector('#abilities').textContent = game.abilities.length;\n      if (draw.ability.spec.type === 'life') {\n        game.changeLife(draw.ability.spec.value);\n        life.textContent = `Life: ${game.life}`;\n      } else if (draw.ability.spec.type === 'card') {\n        $('#game').data(\n          'drawCnt',\n          $('#game').data('drawCnt') + draw.ability.spec.value\n        );\n      } else if (draw.ability.spec.type === 'stop') {\n        if ($('#game').data('drawCnt') > 0) {\n          $('#game').data('drawCnt', 1);\n        } else {\n          game.stop = 'stop';\n        }\n      }\n      if (game.life < 1) {\n        endGame.lose();\n      } else if (\n        draw.ability.spec !== false &&\n        draw.ability.spec.type !== 'draw' &&\n        draw.ability.spec.type !== 'life'\n      ) {\n        game.powers.push(draw);\n        const power_disp = document.querySelector('#powers-disp');\n        const powers = document.querySelectorAll('#powers-disp > *');\n        let test = false;\n        if (powers !== null) {\n          powers.forEach((power, i) => {\n            if (power.dataset.type === draw.ability.spec.type) {\n              test = i + 1;\n            }\n          });\n        }\n        if (test == false) {\n          const power = document.createElement('div');\n          power.id = draw.ability.spec.type + '-power';\n          power.dataset.type = draw.ability.spec.type;\n          power.dataset.positions = 1;\n          const title = document.createElement('div');\n          title.id = 'power-title';\n          title.textContent = draw.ability.spec.type;\n          power.innerHTML += title.outerHTML;\n          const box = document.createElement('div');\n          const gemBox = document.createElement('div');\n          gemBox.id = 'power-box-gem';\n          gemBox.dataset.value = draw.ability.spec.type;\n          gemBox.dataset.pos = 1;\n          gemBox.textContent = draw.ability.spec.value;\n          power.innerHTML += gemBox.outerHTML;\n          box.id = 'power-box';\n          box.textContent = '';\n          power.innerHTML += box.outerHTML;\n          power.innerHTML += box.outerHTML;\n          power_disp.innerHTML += power.outerHTML;\n\n          document.querySelectorAll('#power-box-gem').forEach(box => {\n            box.addEventListener('click', e => {\n              ability.activateAbility(e);\n            });\n          });\n        } else {\n          const power = document.querySelector(\n            '#' + draw.ability.spec.type + '-power'\n          );\n          power.dataset.positions += 1;\n          const key = power.dataset.positions;\n          const box = power.querySelector('#power-box');\n          box.id = 'power-box-gem';\n          box.dataset.value = draw.ability.spec.type;\n          box.dataset.pos = key;\n          box.textContent = draw.ability.spec.value;\n\n          document\n            .querySelector(`#${draw.ability.spec.type + '-power'}`)\n            .querySelectorAll('#power-box-gem')\n            [key - 1].addEventListener('click', e => {\n              ability.activateAbility(e);\n            });\n        }\n      }\n      if (game.life > 1) {\n        newCard.innerHTML = createCard.createAbility(draw).outerHTML;\n        $('#total-fight').text(`Total Fight: ${game.playerFght}`);\n        newCard.style.margin = '-75px 0';\n        targetDiv.innerHTML += newCard.outerHTML;\n        $('#game').data('drawCnt', $('#game').data('drawCnt') - 1);\n        if ($('#game').data('drawCnt') > 0) {\n          $('#draw-cnt').text(`Free draws: ${$('#game').data('drawCnt')}`);\n        } else {\n          $('#draw-cnt').text('Free draws: 0');\n        }\n      }\n    }\n  } else {\n    document.querySelector('#abilities').style.cursor = 'not-allowed';\n  }\n};\n\nexport const resolveFight = e => {\n  const game = $('#game').data('game');\n  var old_element = document.getElementById('abilities');\n  var new_element = old_element.cloneNode(true);\n  old_element.parentNode.replaceChild(new_element, old_element);\n  let playerFght = game.playerFght;\n  if (game.end === true) {\n    if (playerFght < $('#game').data('drawFght')) {\n      endGame.lose();\n    } else if (game.goals.length === 2) {\n      game.goals = [game.goals[1]];\n      endGame.resolveEnd(game);\n    } else {\n      endGame.win();\n    }\n  } else if (\n    playerFght < $('#game').data('drawFght') &&\n    game.activeAbilities.length > 0\n  ) {\n    let num_cards = $('#game').data('drawFght') - playerFght;\n    game.changeLife(-1 * num_cards);\n    if (game.life < 1) {\n      endGame.lose();\n    } else {\n      game.cardsToDelete = num_cards;\n      $('#life').text(`Life: ${game.life}`);\n      const gameDiv = document.querySelector('#game');\n      const modal = createModal(game);\n      gameDiv.innerHTML += modal.outerHTML;\n      document.querySelectorAll('.card-delete #card-header').forEach(el => {\n        el.style.width = '163px';\n        el.style.marginTop = '2px';\n      });\n      document.querySelectorAll('.card-delete').forEach(el => {\n        el.addEventListener('click', e => {\n          console.log(e.path);\n          const key = e.path[e.path.length - 11].getAttribute('key');\n          const selected = e.path[e.path.length - 11].getAttribute('selected');\n          const game = $('#game').data('game');\n          if (selected === 'true') {\n            game.cardsToDelete += $('#game').data('active')[key].ability.cost;\n            e.path[e.path.length - 11].setAttribute('selected', 'false');\n            e.path[e.path.length - 11].style.border =\n              '2px solid rgb(0, 0, 0, 0.1)';\n            game.unmarkForDelete($('#game').data('active')[key]);\n          } else if (\n            selected === 'false' &&\n            game.cardsToDelete - $('#game').data('active')[key].ability.cost >=\n              0\n          ) {\n            console.log($('#game').data('active')[key].ability.cost);\n            console.log(game.cardsToDelete);\n            game.cardsToDelete -= $('#game').data('active')[key].ability.cost;\n            e.path[e.path.length - 11].setAttribute('selected', 'true');\n            e.path[e.path.length - 11].style.border = '2px solid #4a82db';\n            game.markForDelete($('#game').data('active')[key]);\n          }\n        });\n      });\n      document.querySelector('#modal-confirm').addEventListener('click', e => {\n        const game = $('#game').data('game');\n        const hazards = game.drawHazards();\n        if (game.level === 3) {\n          $('#stage').removeClass('yellow');\n          $('#stage').addClass('red');\n        } else if (game.level === 2) {\n          $('#stage').removeClass('green');\n          $('#stage').addClass('yellow');\n        }\n        game.delete();\n        const modal = document.querySelector('#modal');\n        modal.parentNode.removeChild(modal);\n        chooseHazard.chooseHazard(hazards, game);\n      });\n    }\n  } else {\n    if (playerFght < $('#game').data('drawFght')) {\n      game.changeLife(playerFght - $('#game').data('drawFght'));\n    } else {\n      console.log(game.spentAbilities);\n      game.spentAbilities.push(game.activeHazard);\n      console.log(game.spentAbilities);\n      console.log(game.activeHazard);\n    }\n    if (game.life > 1) {\n      const hazards = game.drawHazards();\n      if (game.level === 3) {\n        $('#stage').removeClass('yellow');\n        $('#stage').addClass('red');\n      } else if (game.level === 2) {\n        $('#stage').removeClass('green');\n        $('#stage').addClass('yellow');\n      } else if (game.level === 4) {\n        game.delete();\n        endGame.resolveEnd(game);\n      }\n      if (game.level !== 4) {\n        game.delete();\n        chooseHazard.chooseHazard(hazards, game);\n      }\n    } else {\n      endGame.lose();\n    }\n  }\n};\n\nconst createModal = game => {\n  const modal = document.createElement('div');\n  modal.id = 'modal';\n\n  const title = document.createElement('h4');\n  let dfight = $('#game').data('drawFght');\n  let pfight = game.playerFght;\n\n  title.textContent = `Please select up to ${\n    game.cardsToDelete\n  } cards worth of life to remove`;\n  modal.innerHTML += title.outerHTML;\n\n  let cards = document.createElement('div');\n  cards.id = 'card-selection';\n  let newCard = null;\n  game.activeAbilities.forEach((el, i) => {\n    if (i % 7 === 6) {\n      modal.innerHTML += cards.outerHTML;\n      cards = document.createElement('div');\n      cards.id = 'card-selection';\n    }\n    newCard = createCard.createAbility(el, game.level);\n    newCard.className = 'card-delete';\n    newCard.setAttribute('key', i);\n    newCard.setAttribute('selected', 'false');\n    cards.innerHTML += newCard.outerHTML;\n  });\n  modal.innerHTML += cards.outerHTML;\n\n  const confirm = document.createElement('div');\n  confirm.id = 'modal-confirm';\n  confirm.textContent = 'Confirm Selection';\n  modal.innerHTML += confirm.outerHTML;\n\n  return modal;\n};\n","const start = [\n  {\n    ability: {\n      fight: 2,\n      name: 'Genius',\n      cost: 1,\n      spec: false,\n    },\n  },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  {\n    ability: {\n      fight: 0,\n      name: 'Eat',\n      cost: 1,\n      spec: { type: 'life', value: 2, text: 'Heal 2 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n];\n\nconst age_young = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -1, text: 'Lose 1 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  // { ability: { fight: -3, name: 'very stupid', cost: 2, spec: false } },\n  {\n    ability: {\n      fight: -1,\n      name: 'Afraid',\n      cost: 2,\n      spec: {\n        type: 'negate top card',\n        value: false,\n        text: 'Strongest cards fight is now 0',\n      },\n    },\n  },\n  {\n    ability: {\n      fight: -1,\n      name: 'Tired',\n      cost: 2,\n      spec: { type: 'stop', value: false, text: 'Stop turn' },\n    },\n  },\n];\n\nconst age_old = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Very Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -2, text: 'Lose 2 life' },\n    },\n  },\n  { ability: { fight: -5, name: 'self homicidal', cost: 2, spec: false } },\n  { ability: { fight: -4, name: 'idiot', cost: 2, spec: false } },\n];\n\nconst hazards = [\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Strategy',\n      cost: 1,\n      spec: {\n        type: 'exchange',\n        value: 1,\n        text: 'Exchange 1 card',\n      },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3, text: 'Sort 3 cards' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'Draw 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 1, text: 'Exchange 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3, text: 'Sort 3 cards' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'Draw 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: {\n        type: 'below pile',\n        value: 1,\n        text: 'Move 1 card to bottom of pile',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  // {\n  //   ability: {\n  //     fight: 2,\n  //     name: 'Mimicry',\n  //     cost: 1,\n  //     spec: {\n  //       type: 'copy',\n  //       value: 1,\n  //       text: 'Copy ability of another card',\n  //     },\n  //   },\n  //   hazard: {\n  //     draw: 2,\n  //     green: 1,\n  //     yellow: 3,\n  //     red: 6,\n  //     name: 'Explore The Island',\n  //   },\n  // },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'Draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'Draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  // {\n  //   ability: {\n  //     fight: 2,\n  //     name: 'Mimicry',\n  //     cost: 1,\n  //     spec: {\n  //       type: 'copy',\n  //       value: 1,\n  //       text: 'Copy the ability of another card',\n  //     },\n  //   },\n  //   hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  // },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: {\n        type: 'below pile',\n        value: 1,\n        text: 'Move 1 card to bottom of pile',\n      },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Reader',\n      cost: 1,\n      spec: { type: 'step', value: -1, text: 'Reduce hazard level by 1' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n];\n\nconst pirates = [\n  { draw: 6, fight: 20, spec: false },\n  { draw: 7, fight: 25, spec: false },\n  { draw: 8, fight: 30, spec: false },\n  { draw: 9, fight: 35, spec: false },\n  { draw: 10, fight: 40, spec: false },\n  // { draw: 0, fight: 0, spec: 'hazard' },\n  // { draw: 5, fight: 0, spec: 'double' },\n  // { draw: 7, fight: 16, spec: 'double life' },\n  // { draw: 9, fight: 22, spec: 'half' },\n  // { draw: 10, fight: 52, spec: 'point' },\n];\n\nmodule.exports = {\n  start,\n  age_young,\n  age_old,\n  hazards,\n  pirates,\n};\n","var cards = require('./cards.js');\n\nclass Game {\n  constructor() {\n    this.level = 1;\n    this.life = 20;\n    this.hazards = this.shuffle(cards.hazards);\n    this.activeHazard = null;\n    this.spentHazards = [];\n    this.markDelete = [];\n    this.yage = this.shuffle(cards.age_young);\n    this.oage = this.shuffle(cards.age_old);\n    let arr = cards.pirates;\n    this.goals = [\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n    ];\n    this.abilities = this.shuffle(cards.start);\n    this.activeAbilities = [];\n    this.holdAbilities = [];\n    this.spentAbilities = [];\n    this.cardsToDelete = 0;\n    this.powers = [];\n    this.selected = [];\n    this.end = false;\n  }\n\n  returnActiveAbilities() {\n    return this.activeAbilities;\n  }\n\n  age() {\n    if (this.yage.length > 0) {\n      return 'young';\n    } else {\n      return 'old';\n    }\n  }\n\n  drawHazards() {\n    let arr = [];\n    if (this.hazards.length > 1) {\n      arr.push(this.hazards.pop());\n      arr.push(this.hazards.pop());\n      return [arr[0], arr[1]];\n    } else {\n      console.log(this.hazards);\n      this.hazards = this.shuffle(this.hazards.concat(this.spentHazards));\n      console.log(this.hazards);\n      this.level += 1;\n      if (this.level === 4) {\n        return null;\n      } else {\n        arr.push(this.hazards.pop());\n        arr.push(this.hazards.pop());\n        console.log(arr);\n        return [arr[0], arr[1]];\n      }\n    }\n  }\n\n  returnHazard(hazard) {\n    this.spentHazards.push(hazard);\n  }\n\n  addToTop(abilities) {\n    abilities.concat(this.pile);\n  }\n  addToBottom(abilities) {\n    this.pile.concat(abilities);\n  }\n\n  drawAbility() {\n    if (this.abilities.length === 0) {\n      this.abilities = this.spentAbilities;\n      if (this.yage.length > 0) {\n        this.abilities.push(this.yage.pop());\n      } else {\n        this.abilities.push(this.oage.pop());\n      }\n      this.abilities = this.shuffle(this.abilities);\n    }\n    const draw = this.abilities.pop();\n    this.activeAbilities.push(draw);\n    return draw;\n  }\n\n  changeLife(num) {\n    this.life += num;\n  }\n\n  setHazard(hazard) {\n    this.activeHazard = hazard;\n  }\n\n  setHold() {\n    this.holdAbilities = this.activeAbilities;\n  }\n\n  markForDelete(hazard) {\n    let test = true;\n    this.activeAbilities.forEach((el, i) => {\n      if (el === hazard && test) {\n        this.markDelete.push(this.activeAbilities.splice(i, 1)[0]);\n        test = false;\n      }\n    });\n  }\n\n  unmarkForDelete(hazard) {\n    const arr = [];\n    let test = false;\n    arr.forEach(el => {\n      if (el !== hazard && test) {\n        arr.push(hazard);\n      } else {\n        this.activeAbilities.push(hazard);\n        test = true;\n      }\n    });\n    this.markDelete = arr;\n  }\n\n  delete() {\n    this.spentAbilities = this.spentAbilities.concat(this.activeAbilities);\n    this.markDelete = [];\n    this.activeAbilities = [];\n    this.powers = [];\n    this.stop = '';\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\nmodule.exports = Game;\n","const Game = require('./lib/game.js');\nconst createCard = require('./lib/createCard.js');\nconst chooseHazard = require('./lib/chooseHazard.js');\nconst setup = require('./lib/setup.js');\nconst helpModal = require('./lib/helpModal.js');\n\ndocument.addEventListener('DOMContentLoaded', function(event) {\n  const audio = document.querySelector('audio');\n  audio.muted = true;\n  audio.addEventListener(\n    'ended',\n    () => {\n      this.currentTime = 0;\n      this.play();\n    },\n    false\n  );\n  // helpModal.helpModal();\n  const mainGame = document.querySelector('#main-game');\n  let startGame = document.createElement('h2');\n  startGame.id = 'startGame';\n  startGame.textContent = 'Start Game?';\n  mainGame.innerHTML += startGame.outerHTML;\n  document.querySelector('#help').addEventListener('click', e => {\n    helpModal.helpModal();\n  });\n  document.querySelector('#music').addEventListener('click', e => {\n    if (document.querySelector('audio').muted) {\n      document.querySelector('audio').muted = false;\n      document.querySelector('#music').className = 'musicOn';\n    } else {\n      document.querySelector('audio').muted = true;\n      document.querySelector('#music').className = 'musicOff';\n    }\n  });\n  document.querySelector('#startGame').addEventListener('click', e => {\n    const game = new Game();\n    $('#game').data('game', game);\n    setup.setup(game);\n    let pirate = createCard.createPirate(game.goals[0]);\n    document.querySelector('#goal').innerHTML = pirate.outerHTML;\n    pirate = createCard.createPirate(game.goals[1]);\n    document.querySelector('#goal').innerHTML += pirate.outerHTML;\n    const hazards = game.drawHazards();\n    chooseHazard.chooseHazard(hazards, game);\n  });\n});\n","const createCard = require('./createCard.js');\nconst fightHazard = require('./fightHazard.js');\n\nexport const activateAbility = e => {\n  // console.log(e.path[e.path.length - 13].dataset.positions);\n  // console.log(e.target.dataset.value);\n  // console.log(e.target.textContent);\n  // document.querySelector('#game').dataset.selected = [];\n  // document.querySelector('#game').dataset.select_num = e.target.textContent;\n\n  const game = $('#game').data('game');\n  if (e.target.dataset.value === 'destroy') {\n    setupModalAll(`Select a card to remove from the game`, e, game);\n  } else if (e.target.dataset.value === 'copy') {\n  } else if (e.target.dataset.value === 'below pile') {\n    setupModalAll(`Select a card to move to bottom of abilities pile`, e, game);\n  } else if (e.target.dataset.value === 'step') {\n    const temp = game.activeHazard;\n    if (game.level === 2) {\n      temp.hazard.yellow = temp.hazard.green;\n    } else if (\n      game.level === 3 &&\n      game.activeHazard.hazard.yellow !== game.activeHazard.hazard.red\n    ) {\n      temp.hazard.red = temp.hazard.yellow;\n    } else {\n      temp.hazard.red = temp.hazard.yellow;\n    }\n    game.activeHazard = temp;\n  } else if (e.target.dataset.value === 'exchange') {\n    if (e.target.textContent === '1') {\n      setupModalAll(\n        `Select a card to discard and exchange for another`,\n        e,\n        game\n      );\n    } else {\n      setupModalAll(`Select up to 2 cards to discard and exchange`, e, game);\n    }\n  } else if (e.target.dataset.value === 'double') {\n    setupModalAll(`Select a card to double fighting strength`, e, game);\n  } else if (e.target.dataset.value === 'sort') {\n    const modal = document.createElement('div');\n    const nxtCards = game.abilities.splice(game.abilities.length - 4, 3);\n    modal.id = 'modal';\n    const title = document.createElement('h4');\n    title.textContent = 'Choose 1 card to delete';\n    modal.innerHTML += title.outerHTML;\n    const cards = document.createElement('div');\n    cards.id = 'card-selection';\n    let card = null;\n    $('#game').data('active', nxtCards);\n    $('#game').data('selected', []);\n    $('#game').data('total', 1);\n    $('#game').data('type', e.target.dataset.value);\n    console.log(nxtCards[0].ability);\n    nxtCards.forEach((ability, i) => {\n      card = createCard.createAbility(ability, game.level);\n      card.dataset.place = i;\n      cards.innerHTML += card.outerHTML;\n    });\n    modal.innerHTML += cards.outerHTML;\n    const confirm = document.createElement('div');\n    confirm.id = 'modal-confirm-btn';\n    confirm.textContent = 'confirm';\n    modal.innerHTML += confirm.outerHTML;\n    document.querySelector('#game').innerHTML += modal.outerHTML;\n\n    document\n      .querySelector('#card-selection')\n      .querySelectorAll('.card')\n      .forEach(card => {\n        card.addEventListener('click', e => {\n          selector(e);\n        });\n      });\n  }\n  document.querySelector('#modal-confirm-btn').style.cursor = 'pointer';\n  document.querySelector('#modal-confirm-btn').addEventListener('click', e => {\n    confirm(e);\n  });\n  const holder = e.path[e.path.length - 13].querySelectorAll('#power-box-gem');\n  if (holder.length > 1) {\n    for (let i = e.target.dataset.pos; i < holder.length; i++) {\n      if (i === holder.length - 1) {\n        holder[i].textContent = '';\n        holder[i].id = 'power-box';\n      } else {\n        holder[i].outerHTML = holder[i + 1].outerHTML;\n        holder[i].dataset.value = holder[i + 1].dataset.value;\n        holder[i].dataset.pos = holder[i + 1].dataset.pos - 1;\n      }\n    }\n  } else {\n    const divEl = document.querySelector('#' + e.path[e.path.length - 13].id);\n    divEl.parentNode.removeChild(divEl);\n  }\n};\n\nconst setupModalAll = (text, e, game) => {\n  const modal = document.createElement('div');\n  modal.id = 'modal';\n  const title = document.createElement('h4');\n  title.textContent = text;\n  modal.innerHTML += title.outerHTML;\n  const cards = document.createElement('div');\n  cards.id = 'card-selection';\n  let card = null;\n  $('#game').data('active', game.returnActiveAbilities());\n  $('#game').data('selected', []);\n  $('#game').data('total', e.target.textContent);\n  $('#game').data('type', e.target.dataset.value);\n  game.activeAbilities.forEach((ability, i) => {\n    card = createCard.createAbility(ability, game.level);\n    card.dataset.place = i;\n    cards.innerHTML += card.outerHTML;\n  });\n  modal.innerHTML += cards.outerHTML;\n  const confirm = document.createElement('div');\n  confirm.id = 'modal-confirm-btn';\n  confirm.textContent = 'confirm';\n  modal.innerHTML += confirm.outerHTML;\n  document.querySelector('#game').innerHTML += modal.outerHTML;\n\n  document\n    .querySelector('#card-selection')\n    .querySelectorAll('.card')\n    .forEach(card => {\n      card.addEventListener('click', e => {\n        selector(e);\n      });\n    });\n};\n\n// const setupModalCopy = (e, game) => {\n//   const modal = document.createElement('div');\n//   modal.id = 'modal';\n//   const title = document.createElement('h4');\n//   title.textContent = `Select a card whose abilities you would like to copy`;\n//   modal.innerHTML += title.outerHTML;\n//   const cards = document.createElement('div');\n//   cards.id = 'card-selection';\n//   let card = null;\n//   $('#game').data('active', game.powers;\n//   $('#game').data('selected', []);\n//   $('#game').data('total', e.target.textContent);\n//   $('#game').data('type', e.target.dataset.value);\n//   game.powers.forEach((ability, i) => {\n//     card = createCard.createAbility(ability, game.level);\n//     card.dataset.place = i;\n//     cards.innerHTML += card.outerHTML;\n//   });\n//   modal.innerHTML += cards.outerHTML;\n//   const confirm = document.createElement('div');\n//   confirm.id = 'modal-confirm-btn';\n//   confirm.textContent = 'confirm';\n//   modal.innerHTML += confirm.outerHTML;\n//   document.querySelector('#game').innerHTML += modal.outerHTML;\n//\n//   document\n//     .querySelector('#card-selection')\n//     .querySelectorAll('.card')\n//     .forEach(card => {\n//       card.addEventListener('click', e => {\n//         selector(e);\n//       });\n//     });\n// };\n\nconst selector = e => {\n  const game = $('#game').data('game');\n  const position = e.path[e.path.length - 11].dataset.place - 1;\n\n  let test = true;\n  $('#game')\n    .data('selected')\n    .forEach((el, i) => {\n      if (el === $('#game').data('active')[position] && test) {\n        test = false;\n        $('#game')\n          .data('selected')\n          .splice(i, 1);\n        e.path[e.path.length - 11].style.border = '2px solid transparent';\n        $('#game').data('total', $('#game').data('total') + 1);\n      }\n    });\n  if (test && $('#game').data('total') > 0) {\n    $('#game').data('selected', [$('#game').data('active')[position]]);\n    console.log($('#game').data('active'));\n    console.log($('#game').data('selected'));\n    e.path[e.path.length - 11].style.border = '2px solid blue';\n    $('#game').data('total', $('#game').data('total') - 1);\n  }\n};\n\nconst confirm = e => {\n  const game = $('#game').data('game');\n  if ($('#game').data('type') === 'double') {\n    $('#game')\n      .data('selected')\n      .forEach(ability => {\n        game.playerFght += ability.ability.fight;\n      });\n    $('#total-fight').text(`Total Fight: ${game.playerFght}`);\n  } else if ($('#game').data('type') === 'destroy') {\n    $('#game')\n      .data('selected')\n      .forEach(ability => {\n        let cards = document\n          .querySelector('#fight-div')\n          .querySelectorAll('#ability-card');\n        console.log(ability.ability.name);\n        console.log(cards[0].querySelector('h4').textContent);\n        for (let i = 0; i < cards.length; i++) {\n          if (\n            cards[i].querySelector('h4').textContent === ability.ability.name\n          ) {\n            cards[i].parentNode.removeChild(cards[i]);\n            game.playerFght -= game.activeAbilities[i].ability.fight;\n            $('#total-fight').text(`Total Fight: ${game.playerFght}`);\n            game.activeAbilities.splice(i, 1);\n            i = cards.length;\n          }\n        }\n      });\n  } else if ($('#game').data('type') === 'exchange') {\n    $('#game')\n      .data('selected')\n      .forEach(ability => {\n        let cards = document\n          .querySelector('#fight-div')\n          .querySelectorAll('#ability-card');\n        for (let i = 0; i < cards.length; i++) {\n          if (\n            cards[i].querySelector('h4').textContent === ability.ability.name\n          ) {\n            cards[i].parentNode.removeChild(cards[i]);\n            game.playerFght -= game.activeAbilities[i].ability.fight;\n            $('#total-fight').text(`Total Fight: ${game.playerFght}`);\n            game.spentAbilities.push(game.activeAbilities.splice(i, 1));\n            i = cards.length;\n            if ($('#game').data('drawCnt') < 0) {\n              $('#game').data('drawCnt', 1);\n              $('#draw-cnt').text(`Free draws: ${$('#game').data('drawCnt')}`);\n            } else {\n              $('#game').data('drawCnt', $('#game').data('drawCnt') + 1);\n              $('#draw-cnt').text(`Free draws: ${$('#game').data('drawCnt')}`);\n            }\n          }\n        }\n      });\n  } else if ($('#game').data('type') === 'below pile') {\n    $('#game')\n      .data('selected')\n      .forEach(ability => {\n        let cards = document\n          .querySelector('#fight-div')\n          .querySelectorAll('#ability-card');\n        for (let i = 0; i < cards.length; i++) {\n          if (\n            cards[i].querySelector('h4').textContent === ability.ability.name\n          ) {\n            cards[i].parentNode.removeChild(cards[i]);\n            game.abilities = game.activeAbilities\n              .splice(i, 1)\n              .concat(game.abilities);\n            i = cards.length;\n            if ($('#game').data('drawCnt') < 0) {\n              $('#game').data('drawCnt', 1);\n              $('#draw-cnt').text(`Free draws: ${$('#game').data('drawCnt')}`);\n            } else {\n              $('#game').data('drawCnt', $('#game').data('drawCnt') + 1);\n              $('#draw-cnt').text(`Free draws: ${$('#game').data('drawCnt')}`);\n            }\n          }\n        }\n      });\n  } else if ($('#game').data('type') === 'sort') {\n    $('#game').data('type', 'sort-next');\n    $('#game').data('total', 1);\n    document.querySelector('#modal').querySelector('h4').textContent =\n      'Select next card to return to pile';\n    $('#game')\n      .data('selected')\n      .forEach(ability => {\n        let cards = document\n          .querySelector('#card-selection')\n          .querySelectorAll('#ability-card');\n        console.log(cards);\n        console.log(ability);\n        for (let i = 0; i < cards.length; i++) {\n          if (\n            cards[i].querySelector('h4').textContent === ability.ability.name\n          ) {\n            cards[i].parentNode.removeChild(cards[i]);\n            $('#game').data('selected', []);\n            let test = $('#game').data('active');\n            test.splice(i, 1);\n            $('#game').data('active', test);\n            i = cards.length;\n          }\n        }\n      });\n  } else if ($('#game').data('type') === 'sort-next') {\n    $('#game').data('total', 1);\n    console.log($('#game').data('active'));\n    let cards = document\n      .querySelector('#card-selection')\n      .querySelectorAll('#ability-card');\n    console.log(cards);\n    console.log($('#game').data('selected'));\n    let selected = $('#game').data('selected');\n    let checker = true;\n    for (let i = 0; i < cards.length; i++) {\n      if (checker) {\n        cards[i].dataset.place = i;\n      } else {\n        cards[i].dataset.place = i - 1;\n      }\n      if (\n        cards[i].querySelector('h4').textContent === selected[0].ability.name &&\n        checker\n      ) {\n        checker = false;\n        cards[i].parentNode.removeChild(cards[i]);\n        game.abilities.push($('#game').data('selected')[0]);\n        let test = $('#game').data('active');\n        test.splice(i, 1);\n        console.log(test);\n        $('#game').data('active', test);\n        $('#game').data('selected', []);\n        i = cards.length;\n      }\n    }\n\n    if (\n      document\n        .querySelector('#card-selection')\n        .querySelectorAll('#ability-card').length === 0\n    ) {\n      $('#game').data('type', 'null');\n    }\n  }\n  if (\n    $('#game').data('type') !== 'sort-next' &&\n    $('#game').data('type') !== 'sort'\n  ) {\n    const modal = document.querySelector('#modal');\n    modal.parentNode.removeChild(modal);\n    document.querySelector(`#resolve-fight`).addEventListener('click', e => {\n      $('#game').data('active', game.activeAbilities.slice(0));\n      fightHazard.resolveFight(e);\n    });\n    document.querySelector(`#abilities`).addEventListener('click', e => {\n      drawCard(e);\n    });\n  }\n};\n","const Game = require('./game.js');\nconst setup = require('./setup.js');\nconst createCard = require('./createCard.js');\nconst chooseHazard = require('./chooseHazard.js');\n\nexport const helpModal = () => {\n  const gameDiv = document.querySelector('#modal-hook');\n  const modal = document.createElement('div');\n  modal.id = 'modal';\n  const helpModal = document.createElement('div');\n  helpModal.id = 'helpModal';\n  modal.innerHTML += helpModal.outerHTML;\n  gameDiv.innerHTML += modal.outerHTML;\n  introModal();\n};\n\nconst introModal = () => {\n  const helpModal = document.querySelector('#helpModal');\n  const title = document.createElement('h1');\n  title.textContent = 'Castaway';\n  helpModal.innerHTML = title.outerHTML;\n  const intro = document.createElement('div');\n  intro.innerHTML =\n    'Thanks for playing Castaway, my version of the card game Friday by Friedemann Friese!' +\n    '<br>' +\n    '<br>' +\n    ' You are Friday and spend your time on a deserted Island. After Robinson suddenly capsizes with his ship and runs ashore at your beach, your peaceful times are disturbed. To give Robinson a chance to leave the Island again, you start to teach him to improve his survival abilities against the hazards of the Island. If Robinson beats two Pirates at the end of the game, he successfully leaves the island and you will have your beloved peace back';\n  helpModal.innerHTML += intro.outerHTML;\n  const navigation = document.createElement('div');\n  navigation.id = 'helpModal-nav';\n  const basic = document.createElement('div');\n  basic.id = 'helpModal-basic';\n  basic.textContent = 'Basic Instructions';\n  const powers = document.createElement('div');\n  powers.id = 'helpModal-powers';\n  powers.textContent = 'Power Details';\n  navigation.innerHTML += basic.outerHTML;\n  navigation.innerHTML += powers.outerHTML;\n  helpModal.innerHTML += navigation.outerHTML;\n\n  const returnDiv = document.createElement('div');\n  returnDiv.id = 'helpModal-returnDiv';\n  helpModal.innerHTML += returnDiv.outerHTML;\n  document\n    .querySelector('#helpModal-returnDiv')\n    .addEventListener('click', e => {\n      const modal = document.querySelector('#modal');\n      modal.parentNode.removeChild(modal);\n      document.querySelector('#startGame').addEventListener('click', e => {\n        const game = new Game();\n        $('#game').data('game', game);\n        setup.setup(game);\n        let pirate = createCard.createPirate(game.goals[0]);\n        document.querySelector('#goal').innerHTML = pirate.outerHTML;\n        pirate = createCard.createPirate(game.goals[1]);\n        document.querySelector('#goal').innerHTML += pirate.outerHTML;\n        const hazards = game.drawHazards();\n        chooseHazard.chooseHazard(hazards, game);\n      });\n    });\n\n  document.querySelector('#helpModal-basic').addEventListener('click', e => {\n    basicModal();\n  });\n\n  document.querySelector('#helpModal-powers').addEventListener('click', e => {\n    powersModal();\n  });\n};\n\nconst basicModal = () => {\n  const helpModal = document.querySelector('#helpModal');\n  const title = document.createElement('h1');\n  title.textContent = 'Basic Instructions';\n  helpModal.innerHTML = title.outerHTML;\n  const basic = document.createElement('div');\n  basic.innerHTML =\n    'While playing you are trying to guide Robinson through the game. He must win against two pirates without dying to finally leave the island again. <br><br> At the start of the game Robinson is not very cunning. In this game the pile of fighting cards (represented on the bottom right corner of the screen by the card pile) represents his abilities. By comparison Robinson‘s health is in good shape and he starts with many life points. You have two possibilities to help Robinson. You can either cleverly beat the hazards of the island (represented on the bottom left corner of the screen by the card pile) and receive additional cards to improve Robinson‘s fighting abilities, or you deliberately lose against certain hazards and pay with Robinson‘s life points to remove unwanted fighting cards from play. <br><br> During the game you will improve the quality and quantity of your fighting cards thanks to both possibilities and help Robinson with his newly gained abilities and knowledge to win against even more difficult hazards. However, life on the island is energy-sapping for Robinson so he is forced to always add aging cards (represented on the top left corner of the screen by the card pile) to his fighting cards pile. These cards are all cumbersome, so you‘d better remember to keep them in mind when planning your next steps. <br><br> It is up to you. Use Robinson‘s life points cleverly and choose the correct hazards to keep Robinson healthy and strong for the final fights against both pirates.';\n  helpModal.innerHTML += basic.outerHTML;\n  const returnDiv = document.createElement('div');\n  returnDiv.id = 'helpModal-returnDiv';\n  helpModal.innerHTML += returnDiv.outerHTML;\n  document\n    .querySelector('#helpModal-returnDiv')\n    .addEventListener('click', e => {\n      introModal();\n    });\n};\n\nconst powersModal = () => {\n  const helpModal = document.querySelector('#helpModal');\n  const title = document.createElement('h1');\n  title.textContent = 'Special Card Powers';\n  helpModal.innerHTML = title.outerHTML;\n  const basic = document.createElement('div');\n  basic.innerHTML =\n    '<strong>1x destroy:</strong> Not all fighting cards in the Robinson stack are helpful for you. With this special ability you can destroy one fighting card and remove it from the game.<br><br> <strong>1x double:</strong> You can double the fighting value of 1 of your drawn fighting cards. This ability is not cumulative!<br><br><strong>step -1:</strong> If you fight against a hazard in the »yellow Step« or the »red Step«, you can reduce the hazard value by one Step. This special ability is useless against »green Step« hazards and pirates. <br><br> <strong>sort 3 cards:</strong> You can draw up to 3 cards one after the other from the Robinson stack and look at them. Afterwards you can discard up to 1 of these cards on the Robinson discard pile and place the remaining cards face-down back on the Robinson stack in the order you choose. <br><br> <strong>1x exchange:</strong> You place 1 of the other drawn face-up fighting cards on the Robinson discard pile (you can choose one card you already used for the special ability) and draw a new card as replacement. If the new card has a special ability, you can use it now or later during the fight.<br><br> <strong>1x below the stack:</strong> You place 1 of the other drawn drawn fighting cards back below the Robinson stack. If you choose one of the free cards from the left side of the hazard card, you can draw an exchange card.';\n  // <strong>1x copy:</strong> You can copy the special ability of 1 of the other drawn fighting cards, to use it again. You can copy the same ability with several »copy« abilities. <br><br>\n  helpModal.innerHTML += basic.outerHTML;\n  const returnDiv = document.createElement('div');\n  returnDiv.id = 'helpModal-returnDiv';\n  helpModal.innerHTML += returnDiv.outerHTML;\n  document\n    .querySelector('#helpModal-returnDiv')\n    .addEventListener('click', e => {\n      introModal();\n    });\n};\n","const createCard = require('./createCard.js');\nconst fightHazard = require('./fightHazard.js');\n\nexport const resolveEnd = game => {\n  game.end = true;\n  const gameNode = document.querySelector('#main-game');\n  const fightDiv = document.createElement('div');\n  fightDiv.id = 'fight-div';\n  const drawDiv = document.createElement('div');\n  drawDiv.id = 'draw-div';\n  const hazardDiv = document.createElement('div');\n  hazardDiv.id = 'hazard-div';\n  const pushDiv = document.createElement('div');\n  pushDiv.id = 'push-div';\n\n  const hazardCard = createCard.createPirate(game.goals[0]);\n  hazardDiv.innerHTML += hazardCard.outerHTML;\n\n  const powers = document.createElement('div');\n  powers.id = 'powers-disp';\n  hazardDiv.innerHTML += powers.outerHTML;\n\n  const fightDisp = document.createElement('div');\n  fightDisp.id = 'fight-disp';\n\n  const totalFight = document.createElement('div');\n  totalFight.id = 'total-fight';\n  totalFight.textContent = `Total Fight: 0`;\n  const drawCnt = document.createElement('div');\n  drawCnt.id = 'draw-cnt';\n  drawCnt.textContent = `Free draws: ${game.goals[0][0].draw}`;\n  const resolve = document.createElement('div');\n  resolve.textContent = 'Resolve Fight';\n  resolve.id = 'resolve-fight';\n  fightDisp.innerHTML += totalFight.outerHTML;\n  fightDisp.innerHTML += drawCnt.outerHTML;\n  fightDisp.innerHTML += resolve.outerHTML;\n  hazardDiv.innerHTML += fightDisp.outerHTML;\n\n  game.playerFght = 0;\n  $('#game').data('drawCnt', game.goals[0][0].draw);\n  console.log(game.goals[0][0]);\n  $('#game').data('drawFght', game.goals[0][0].fight);\n  fightDiv.innerHTML += drawDiv.outerHTML;\n  fightDiv.innerHTML += hazardDiv.outerHTML;\n  fightDiv.innerHTML += pushDiv.outerHTML;\n  gameNode.innerHTML = fightDiv.outerHTML;\n  fightHazard.setEvents(game);\n};\n\nexport const lose = () => {\n  const gameNode = document.querySelector('#main-game');\n  const loseGame = document.createElement('div');\n  loseGame.id = 'loseGame';\n  loseGame.textContent = 'You lost the game';\n  gameNode.innerHTML = loseGame.outerHTML;\n};\n\nexport const win = () => {\n  const gameNode = document.querySelector('#main-game');\n  const winGame = document.createElement('div');\n  winGame.id = 'winGame';\n  winGame.textContent = 'You won the game';\n  gameNode.innerHTML = winGame.outerHTML;\n};\n"],"sourceRoot":""}