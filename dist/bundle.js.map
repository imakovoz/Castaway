{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/createCard.js","webpack:///./lib/fightHazard.js","webpack:///./lib/chooseHazard.js","webpack:///./lib/setup.js","webpack:///./lib/game.js","webpack:///./lib/helpModal.js","webpack:///./lib/endGame.js","webpack:///./lib/ability.js","webpack:///./lib/cards.js","webpack:///./main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","createHazard","card","stage","card_node","document","createElement","img","title","body","id","textContent","hazard","style","textAlign","src","height","width","margin","draw","drawIcon","drawText","fight","fightIcon","fightText","position","borderRadius","backgroundColor","padding","innerHTML","outerHTML","className","display","flexDirection","alignItems","createAbility","header","ability","borderBottomRightRadius","borderTopLeftRadius","cost","costIcon","costText","borderBottomLeftRadius","borderTopRightRadius","text","spec","length","createPirate","pirate","__webpack_exports__","resolveFight","createCard","chooseHazard","endGame","fightHazard","game","gameNode","querySelector","fightDiv","drawDiv","hazardDiv","pushDiv","hazardCard","level","powers","fightDisp","totalFight","drawCnt","resolve","playerFght","$","data","green","yellow","red","setEvents","addEventListener","e","drawCard","activeAbilities","slice","hover","this","css","stop","abilities","spentAbilities","targetDiv","life","changeLife","lose","newCard","drawAbility","type","push","power_disp","querySelectorAll","test","forEach","power","dataset","positions","box","gemBox","pos","activateAbility","key","cursor","console","log","old_element","getElementById","new_element","cloneNode","parentNode","replaceChild","end","goals","resolveEnd","win","num_cards","cardsToDelete","gameDiv","modal","createModal","el","marginTop","currentTarget","getAttribute","selected","setAttribute","border","unmarkForDelete","markForDelete","hazards","drawHazards","removeClass","addClass","delete","removeChild","activeHazard","cards","confirm","selectionDiv","confirmDiv","confirmBtn","switcher","checkbox","makeCard","num","node","cardBody","aside","flipCard","selectCard","check","split","checked","remove","target","prop","off","on","chooseCard","other","returnHazard","setHazard","setup","age","age_img","appendChild","[object Object]","shuffle","spentHazards","markDelete","yage","age_young","oage","age_old","arr","pirates","splice","Math","floor","random","start","holdAbilities","pop","concat","pile","a","j","helpModal","Game","introModal","intro","navigation","basic","tutorial","returnDiv","basicModal","tutorialGuide","powersModal","instructions","click","justifyContent","tutorial1","setTimeout","tutorial2","tutorial3","removeEventListener","arr1","arr2","tutorial4","tutorial5","tutorial6","tutorial7","tutorial8","loseGame","winGame","setupModalAll","temp","nxtCards","place","selector","holder","divEl","returnActiveAbilities","checker","event","audio","muted","currentTime","play","mainGame","startGame"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","export function createHazard(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let body = document.createElement('div');\n  body.id = 'card-body';\n  title.textContent = `${card.hazard.name}`;\n  title.style.textAlign = 'center';\n\n  if (card.hazard.name === 'Explore The Wreck') {\n    img.src = './assets/images/wreck.jpg';\n  } else if (card.hazard.name === 'Wild Animals') {\n    img.src = './assets/images/tiger.jpg';\n  } else if (card.hazard.name === 'Cannibals') {\n    img.src = './assets/images/cannibals.jpg';\n  } else if (card.hazard.name === 'Explore Deep Into The Island') {\n    img.src = './assets/images/jungle.jpg';\n  } else if (card.hazard.name === 'Explore The Island') {\n    img.src = './assets/images/island.jpg';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  let draw = document.createElement('div');\n  let drawIcon = document.createElement('img');\n  let drawText = document.createElement('span');\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  draw.style.position = 'relative';\n  draw.style.borderRadius = '50%';\n  draw.style.backgroundColor = '#602403';\n  draw.style.padding = '7px 7px 2px 7px';\n  fight.style.position = 'relative';\n  fight.style.borderRadius = '50%';\n  fight.style.backgroundColor = '#602403';\n  fight.style.padding = '7px 7px 2px 7px';\n\n  drawIcon.src = './assets/images/card-draw-icon.png';\n  drawText.textContent = `${card.hazard['draw']}`;\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card.hazard[stage]}`;\n\n  draw.innerHTML += drawText.outerHTML;\n  fight.innerHTML += fightText.outerHTML;\n  draw.innerHTML += drawIcon.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  body.innerHTML += draw.outerHTML;\n  body.innerHTML += fight.outerHTML;\n\n  card_node.innerHTML += title.outerHTML;\n  if (card.hazard.name === 'Wild Animals' || card.hazard.name === 'Cannibals') {\n    card_node.innerHTML += document.createElement('br').outerHTML;\n  }\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.id = 'hazard-card';\n  card_node.className = 'card';\n  // card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n\nexport function createAbility(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let header = document.createElement('div');\n  let body = document.createElement('div');\n  header.id = 'card-header';\n  body.id = 'card-body';\n  title.textContent = `${card.ability.name}`;\n  title.style.textAlign = 'center';\n\n  if (card.ability.name === 'Weapon') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Strategy') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Vision') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Experience') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Knowledge') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Repetition') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Trick') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Nutritious Food') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Reader') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Equipement') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Very Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Tired') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Afraid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Stupid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Unconcentrated') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Distracted') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Weak') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Genius') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Focused') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Mimicry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Eat') {\n    img.src = './assets/images/weapon.png';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  // let textBody = document.createElement('div');\n  // textBody.textContent = card.ability.spec.text;\n  // let textFight = document.createElement('div');\n  // textFight.textContent = `Fight: ${card.ability.fight}`;\n  //\n  // header.innerHTML += textBody.outerHTML;\n  // header.innerHTML += textFight.outerHTML;\n\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  fight.style.position = 'relative';\n  fight.style.borderBottomRightRadius = '50%';\n  fight.style.borderTopLeftRadius = '5px';\n  fight.style.backgroundColor = '#15afb2';\n  fight.style.padding = '2px 4px 0px 0px';\n  fight.style.margin = '-2px 0 0 -2px';\n\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card.ability['fight']}`;\n  fight.innerHTML += fightText.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  header.innerHTML += fight.outerHTML;\n\n  let cost = document.createElement('div');\n  let costIcon = document.createElement('img');\n  let costText = document.createElement('span');\n\n  cost.style.position = 'relative';\n  cost.style.borderBottomLeftRadius = '50%';\n  cost.style.borderTopRightRadius = '5px';\n  cost.style.backgroundColor = '#15afb2';\n  cost.style.padding = '2px 4px 0px 0px';\n  cost.style.margin = '-2px -2px 0 0';\n\n  costIcon.src = './assets/images/cost-icon.png';\n  costText.textContent = `${card.ability['cost']}`;\n  cost.innerHTML += costText.outerHTML;\n  cost.innerHTML += costIcon.outerHTML;\n  header.innerHTML += cost.outerHTML;\n  const text = card.ability.spec.text || '...';\n  body.textContent = `${text}`;\n\n  card_node.innerHTML += title.outerHTML;\n  if (card.ability.name.length < 11) {\n    card_node.innerHTML += document.createElement('br').outerHTML;\n  }\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.innerHTML += header.outerHTML;\n\n  card_node.className = 'card';\n  card_node.id = 'ability-card';\n  // card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n\nexport function createPirate(card) {\n  const pirate = document.createElement('div');\n  pirate.className = 'pirate';\n  let draw = document.createElement('div');\n  let drawIcon = document.createElement('img');\n  let drawText = document.createElement('span');\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  draw.style.position = 'relative';\n  draw.style.borderRadius = '50%';\n  draw.style.backgroundColor = '#602403';\n  fight.style.position = 'relative';\n  fight.style.borderRadius = '50%';\n  fight.style.backgroundColor = '#602403';\n\n  drawIcon.src = './assets/images/card-draw-icon.png';\n  drawText.textContent = `${card[0].draw}`;\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card[0].fight}`;\n\n  draw.innerHTML += drawText.outerHTML;\n  fight.innerHTML += fightText.outerHTML;\n  draw.innerHTML += drawIcon.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  pirate.innerHTML += draw.outerHTML;\n  pirate.innerHTML += fight.outerHTML;\n  return pirate;\n}\n","const createCard = require('./createCard.js');\nconst chooseHazard = require('./chooseHazard.js');\nconst ability = require('./ability.js');\nconst endGame = require('./endGame.js');\n\nexport const fightHazard = (hazard, game) => {\n  const gameNode = document.querySelector('#main-game');\n  const fightDiv = document.createElement('div');\n  fightDiv.id = 'fight-div';\n  const drawDiv = document.createElement('div');\n  drawDiv.id = 'draw-div';\n  const hazardDiv = document.createElement('div');\n  hazardDiv.id = 'hazard-div';\n  const pushDiv = document.createElement('div');\n  pushDiv.id = 'push-div';\n\n  const hazardCard = createCard.createHazard(hazard, game.level);\n  hazardDiv.innerHTML += hazardCard.outerHTML;\n\n  const powers = document.createElement('div');\n  powers.id = 'powers-disp';\n  hazardDiv.innerHTML += powers.outerHTML;\n\n  const fightDisp = document.createElement('div');\n  fightDisp.id = 'fight-disp';\n\n  const totalFight = document.createElement('div');\n  totalFight.id = 'total-fight';\n  totalFight.textContent = `Total Fight: 0`;\n  const drawCnt = document.createElement('div');\n  drawCnt.id = 'draw-cnt';\n  drawCnt.textContent = `Free draws: ${hazard.hazard.draw}`;\n  const resolve = document.createElement('div');\n  resolve.textContent = 'Resolve Fight';\n  resolve.id = 'resolve-fight';\n  fightDisp.innerHTML += totalFight.outerHTML;\n  fightDisp.innerHTML += drawCnt.outerHTML;\n  fightDisp.innerHTML += resolve.outerHTML;\n  hazardDiv.innerHTML += fightDisp.outerHTML;\n\n  game.playerFght = 0;\n  $('#game').data('drawCnt', hazard.hazard.draw);\n\n  if (game.level === 1) {\n    $('#game').data('drawFght', hazard.hazard.green);\n  } else if (game.level === 2) {\n    $('#game').data('drawFght', hazard.hazard.yellow);\n  } else {\n    $('#game').data('drawFght', hazard.hazard.red);\n  }\n\n  fightDiv.innerHTML += drawDiv.outerHTML;\n  fightDiv.innerHTML += hazardDiv.outerHTML;\n  fightDiv.innerHTML += pushDiv.outerHTML;\n  gameNode.innerHTML = fightDiv.outerHTML;\n  setEvents(game);\n};\n\nexport const setEvents = game => {\n  document.querySelector(`#abilities`).addEventListener('click', e => {\n    drawCard(e);\n  });\n  document.querySelector(`#resolve-fight`).addEventListener('click', e => {\n    $('#game').data('active', game.activeAbilities.slice(0));\n    resolveFight(e);\n  });\n  $('#abilities').hover(\n    function() {\n      $(this).css('border', '2px solid #4a82db');\n    },\n    function() {\n      $(this).css('border', 'none');\n    }\n  );\n};\n\nexport const drawCard = e => {\n  const game = $('#game').data('game');\n  if (\n    game.stop !== 'stop' &&\n    (game.abilities.length > 0 || game.spentAbilities.length > 0)\n  ) {\n    let targetDiv = document.querySelector('#draw-div');\n    const life = document.querySelector('#life');\n    if ($('#game').data('drawCnt') <= 0) {\n      game.changeLife(-1);\n      life.textContent = `Life: ${game.life}`;\n      targetDiv = document.querySelector('#push-div');\n    }\n    if (game.life < 1) {\n      endGame.lose();\n    } else {\n      const newCard = document.createElement('div');\n      const draw = game.drawAbility();\n      game.playerFght += draw.ability.fight;\n      document.querySelector('#abilities').textContent = game.abilities.length;\n      if (draw.ability.spec.type === 'life') {\n        game.changeLife(draw.ability.spec.value);\n        life.textContent = `Life: ${game.life}`;\n      } else if (draw.ability.spec.type === 'card') {\n        $('#game').data(\n          'drawCnt',\n          $('#game').data('drawCnt') + draw.ability.spec.value\n        );\n      } else if (draw.ability.spec.type === 'stop') {\n        if ($('#game').data('drawCnt') > 0) {\n          $('#game').data('drawCnt', 1);\n        } else {\n          game.stop = 'stop';\n        }\n      }\n      if (game.life < 1) {\n        endGame.lose();\n      } else if (\n        draw.ability.spec !== false &&\n        draw.ability.spec.type !== 'draw' &&\n        draw.ability.spec.type !== 'life'\n      ) {\n        game.powers.push(draw);\n        const power_disp = document.querySelector('#powers-disp');\n        const powers = document.querySelectorAll('#powers-disp > *');\n        let test = false;\n        if (powers !== null) {\n          powers.forEach((power, i) => {\n            if (power.dataset.type === draw.ability.spec.type) {\n              test = i + 1;\n            }\n          });\n        }\n        if (test == false) {\n          const power = document.createElement('div');\n          power.id = draw.ability.spec.type + '-power';\n          power.dataset.type = draw.ability.spec.type;\n          power.dataset.positions = 1;\n          const title = document.createElement('div');\n          title.id = 'power-title';\n          title.textContent = draw.ability.spec.type;\n          power.innerHTML += title.outerHTML;\n          const box = document.createElement('div');\n          const gemBox = document.createElement('div');\n          gemBox.id = 'power-box-gem';\n          gemBox.dataset.value = draw.ability.spec.type;\n          gemBox.dataset.pos = 1;\n          gemBox.textContent = draw.ability.spec.value;\n          power.innerHTML += gemBox.outerHTML;\n          box.id = 'power-box';\n          box.textContent = '';\n          power.innerHTML += box.outerHTML;\n          power.innerHTML += box.outerHTML;\n          power_disp.innerHTML += power.outerHTML;\n\n          document.querySelectorAll('#power-box-gem').forEach(box => {\n            box.addEventListener('click', e => {\n              ability.activateAbility(e);\n            });\n          });\n        } else {\n          const power = document.querySelector(\n            '#' + draw.ability.spec.type + '-power'\n          );\n          power.dataset.positions += 1;\n          const key = power.dataset.positions;\n          const box = power.querySelector('#power-box');\n          box.id = 'power-box-gem';\n          box.dataset.value = draw.ability.spec.type;\n          box.dataset.pos = key;\n          box.textContent = draw.ability.spec.value;\n\n          document\n            .querySelector(`#${draw.ability.spec.type + '-power'}`)\n            .querySelectorAll('#power-box-gem')\n            [key - 1].addEventListener('click', e => {\n              ability.activateAbility(e);\n            });\n        }\n      }\n      if (game.life > 1) {\n        newCard.innerHTML = createCard.createAbility(draw).outerHTML;\n        $('#total-fight').text(`Total Fight: ${game.playerFght}`);\n        newCard.style.margin = '-75px 0';\n        targetDiv.innerHTML += newCard.outerHTML;\n        $('#game').data('drawCnt', $('#game').data('drawCnt') - 1);\n        if ($('#game').data('drawCnt') > 0) {\n          $('#draw-cnt').text(`Free draws: ${$('#game').data('drawCnt')}`);\n        } else {\n          $('#draw-cnt').text('Free draws: 0');\n        }\n      }\n    }\n  } else {\n    document.querySelector('#abilities').style.cursor = 'not-allowed';\n  }\n};\n\nexport const resolveFight = e => {\n  const game = $('#game').data('game');\n  console.log(game.playerFght);\n  console.log(game.activeAbilities);\n  var old_element = document.getElementById('abilities');\n  var new_element = old_element.cloneNode(true);\n  old_element.parentNode.replaceChild(new_element, old_element);\n  let playerFght = game.playerFght;\n  if (game.end === true) {\n    if (playerFght < $('#game').data('drawFght')) {\n      endGame.lose();\n    } else if (game.goals.length === 2) {\n      game.goals = [game.goals[1]];\n      endGame.resolveEnd(game);\n    } else {\n      endGame.win();\n    }\n  } else if (\n    playerFght < $('#game').data('drawFght') &&\n    game.activeAbilities.length > 0\n  ) {\n    let num_cards = $('#game').data('drawFght') - playerFght;\n    game.changeLife(-1 * num_cards);\n    if (game.life < 1) {\n      endGame.lose();\n    } else {\n      game.cardsToDelete = num_cards;\n      $('#life').text(`Life: ${game.life}`);\n      const gameDiv = document.querySelector('#game');\n      const modal = createModal(game);\n      gameDiv.innerHTML += modal.outerHTML;\n      document.querySelectorAll('.card-delete #card-header').forEach(el => {\n        el.style.width = '163px';\n        el.style.marginTop = '2px';\n      });\n      document.querySelectorAll('.card-delete').forEach(el => {\n        el.addEventListener('click', e => {\n          console.log(e.currentTarget);\n          const key = e.currentTarget.getAttribute('key');\n          const selected = e.currentTarget.getAttribute('selected');\n          const game = $('#game').data('game');\n          if (selected === 'true') {\n            game.cardsToDelete += $('#game').data('active')[key].ability.cost;\n            e.currentTarget.setAttribute('selected', 'false');\n            e.currentTarget.style.border = '2px solid rgb(0, 0, 0, 0.1)';\n            game.unmarkForDelete($('#game').data('active')[key]);\n          } else if (\n            selected === 'false' &&\n            game.cardsToDelete - $('#game').data('active')[key].ability.cost >=\n              0\n          ) {\n            console.log($('#game').data('active')[key].ability.cost);\n            console.log(game.cardsToDelete);\n            game.cardsToDelete -= $('#game').data('active')[key].ability.cost;\n            e.currentTarget.setAttribute('selected', 'true');\n            e.currentTarget.style.border = '2px solid #4a82db';\n            game.markForDelete($('#game').data('active')[key]);\n          }\n        });\n      });\n      document.querySelector('#modal-confirm').addEventListener('click', e => {\n        const game = $('#game').data('game');\n        const hazards = game.drawHazards();\n        if (game.level === 3) {\n          $('#stage').removeClass('yellow');\n          $('#stage').addClass('red');\n        } else if (game.level === 2) {\n          $('#stage').removeClass('green');\n          $('#stage').addClass('yellow');\n        }\n        game.delete();\n        const modal = document.querySelector('#modal');\n        modal.parentNode.removeChild(modal);\n        chooseHazard.chooseHazard(hazards, game);\n      });\n    }\n  } else {\n    if (playerFght < $('#game').data('drawFght')) {\n      game.changeLife(playerFght - $('#game').data('drawFght'));\n    } else {\n      console.log(game.spentAbilities);\n      game.spentAbilities.push(game.activeHazard);\n      console.log(game.spentAbilities);\n      console.log(game.activeHazard);\n    }\n    if (game.life > 1) {\n      const hazards = game.drawHazards();\n      if (game.level === 3) {\n        $('#stage').removeClass('yellow');\n        $('#stage').addClass('red');\n      } else if (game.level === 2) {\n        $('#stage').removeClass('green');\n        $('#stage').addClass('yellow');\n      } else if (game.level === 4) {\n        game.delete();\n        endGame.resolveEnd(game);\n      }\n      if (game.level !== 4) {\n        game.delete();\n        chooseHazard.chooseHazard(hazards, game);\n      }\n    } else {\n      endGame.lose();\n    }\n  }\n};\n\nconst createModal = game => {\n  const modal = document.createElement('div');\n  modal.id = 'modal';\n\n  const title = document.createElement('h4');\n  let dfight = $('#game').data('drawFght');\n  let pfight = game.playerFght;\n\n  title.textContent = `Please select up to ${\n    game.cardsToDelete\n  } cards worth of life to remove`;\n  modal.innerHTML += title.outerHTML;\n\n  let cards = document.createElement('div');\n  cards.id = 'card-selection';\n  let newCard = null;\n  game.activeAbilities.forEach((el, i) => {\n    if (i % 7 === 6) {\n      modal.innerHTML += cards.outerHTML;\n      cards = document.createElement('div');\n      cards.id = 'card-selection';\n    }\n    newCard = createCard.createAbility(el, game.level);\n    newCard.className = 'card-delete';\n    newCard.setAttribute('key', i);\n    newCard.setAttribute('selected', 'false');\n    cards.innerHTML += newCard.outerHTML;\n  });\n  modal.innerHTML += cards.outerHTML;\n\n  const confirm = document.createElement('div');\n  confirm.id = 'modal-confirm';\n  confirm.textContent = 'Confirm Selection';\n  modal.innerHTML += confirm.outerHTML;\n\n  return modal;\n};\n","const createCard = require('./createCard.js');\nconst fightHazard = require('./fightHazard.js');\n\nexport const chooseHazard = (hazards, game) => {\n  document.querySelector('#life').textContent = `Life: ${game.life}`;\n  document.querySelector('#hazard').textContent = game.hazards.length;\n  const gameNode = document.querySelector('#main-game');\n  const selectionDiv = document.createElement('div');\n  selectionDiv.id = 'selection-div';\n  const confirmDiv = document.createElement('div');\n  confirmDiv.id = 'confirm-div';\n  const confirmBtn = document.createElement('div');\n  confirmBtn.id = 'confirm-btn';\n  confirmBtn.className = 'confirm-not';\n  confirmBtn.textContent = 'Confirm Selection';\n  confirmDiv.innerHTML += confirmBtn.outerHTML;\n\n  let switcher = document.createElement('img');\n  let checkbox = document.createElement('input');\n  switcher.src = './assets/images/switch.png';\n  checkbox.setAttribute('type', 'checkbox');\n  makeCard(checkbox, switcher, 1, selectionDiv, game, hazards[0]);\n  makeCard(checkbox, switcher, 2, selectionDiv, game, hazards[1]);\n\n  gameNode.innerHTML = selectionDiv.outerHTML;\n  gameNode.innerHTML += confirmDiv.outerHTML;\n  setEvents(hazards, game);\n};\n\nconst makeCard = (checkbox, switcher, num, node, game, hazard) => {\n  let card = document.createElement('div');\n  let cardBody = createCard.createHazard(hazard, game.level);\n  let aside = document.createElement('aside');\n\n  card.className = 'card-holder';\n  card.id = `hazard-side-${num}`;\n  aside.id = `card${num}-aside`;\n\n  switcher.id = `switch-${num}`;\n  checkbox.id = `checkbox-${num}`;\n  aside.innerHTML += switcher.outerHTML;\n  aside.innerHTML += checkbox.outerHTML;\n  card.innerHTML += aside.outerHTML;\n  card.innerHTML += cardBody.outerHTML;\n  node.innerHTML += card.outerHTML;\n};\n\nconst setEvents = (hazards, game) => {\n  $(`#switch-1`).data('card', hazards[0]);\n  $(`#switch-1`).data('level', game.level);\n  $(`#switch-2`).data('card', hazards[1]);\n  $(`#switch-2`).data('level', game.level);\n  document.querySelector(`#switch-1`).addEventListener('click', e => {\n    flipCard(e);\n  });\n  document.querySelector(`#checkbox-1`).addEventListener('click', e => {\n    selectCard(e);\n  });\n  document.querySelector(`#switch-2`).addEventListener('click', e => {\n    flipCard(e);\n  });\n  document.querySelector(`#checkbox-2`).addEventListener('click', e => {\n    selectCard(e);\n  });\n};\nconst flipCard = e => {\n  const check = document.querySelector(\n    `#checkbox-${e.currentTarget.id.split('-')[1]}`\n  ).checked;\n\n  let newCard = null;\n  const hazard = $(`#switch-${e.currentTarget.id.split('-')[1]}`).data('card');\n  const level = $(`#switch-${e.currentTarget.id.split('-')[1]}`).data('level');\n\n  let card_node =\n    document.querySelector(\n      `#hazard-side-${e.currentTarget.id.split('-')[1]}`\n    ) ||\n    document.querySelector(`#ability-side-${e.currentTarget.id.split('-')[1]}`);\n  $(`#hazard-side-${e.currentTarget.id.split('-')[1]} div`).remove();\n  $(`#ability-side-${e.currentTarget.id.split('-')[1]} div`).remove();\n  if (card_node.id.split('-')[0] === 'hazard') {\n    newCard = createCard.createAbility(hazard, level);\n    card_node.id = `ability-side-${e.currentTarget.id.split('-')[1]}`;\n  } else {\n    newCard = createCard.createHazard(hazard, level);\n    card_node.id = `hazard-side-${e.currentTarget.id.split('-')[1]}`;\n  }\n  card_node.innerHTML += newCard.outerHTML;\n  const switchx = document.querySelector(\n    `#switch-${e.currentTarget.id.split('-')[1]}`\n  );\n  $(`#switch-${e.currentTarget.id.split('-')[1]}`).data('card', hazard);\n  $(`#switch-${e.currentTarget.id.split('-')[1]}`).data('level', level);\n  if (check === true) {\n    document.querySelector(\n      `#checkbox-${e.currentTarget.id.split('-')[1]}`\n    ).checked = true;\n  }\n  document\n    .querySelector(`#switch-${e.currentTarget.id.split('-')[1]}`)\n    .addEventListener('click', e => {\n      flipCard(e);\n    });\n  document\n    .querySelector(`#checkbox-${e.currentTarget.id.split('-')[1]}`)\n    .addEventListener('click', e => {\n      selectCard(e);\n    });\n};\n\nconst selectCard = e => {\n  if (e.target.checked == true) {\n    let box = 1;\n    if (e.target.id.split('-')[1] == 1) {\n      box = 2;\n    }\n    $(`#game`).data('selected', e.target.id.split('-')[1]);\n    $(`#confirm-btn`).css('color', 'white');\n    $(`#confirm-btn`).removeClass('confirm-not');\n    $(`#confirm-btn`).addClass('confirm-yes');\n    $(`#confirm-btn`).css('cursor', 'pointer');\n    $(`#checkbox-${box}`).prop('checked', false);\n    $(`#checkbox-${e.target.id.split('-')[1]}`).prop('checked', true);\n    $(`#confirm-div`).off();\n    $(`#confirm-div`).on('click', 'div', e => {\n      chooseCard(e);\n    });\n  } else {\n    $(`#game`).data('selected', false);\n    $(`#confirm-btn`).css('color', '#c4c4c4');\n    $(`#confirm-btn`).removeClass('confirm-yes');\n    $(`#confirm-btn`).addClass('confirm-not');\n    $(`#confirm-btn`).css('cursor', 'not-allowed');\n    $(`#confirm-div`).off();\n  }\n};\n\nconst chooseCard = e => {\n  let other = 1;\n  if ($(`#game`).data('selected') == 1) {\n    other = 2;\n  }\n  const game = $(`#game`).data('game');\n  game.returnHazard($(`#switch-${other}`).data('card'));\n  game.setHazard($(`#switch-${$('#game').data('selected')}`).data('card'));\n  fightHazard.fightHazard(\n    $(`#switch-${$('#game').data('selected')}`).data('card'),\n    game\n  );\n};\n","export function setup(game) {\n  const life = document.querySelector('#life');\n  const age = document.querySelector('#age-aside');\n  const hazard_stages = document.querySelectorAll('#hazard-stage');\n  const stage = document.querySelector('#stage');\n  const game_node = document.querySelector('#main-game');\n\n  document.querySelector('#abilities').textContent = game.abilities.length;\n\n  if (game.level === 3) {\n    $('#stage').removeClass('yellow');\n    $('#stage').addClass('red');\n  } else if (game.level === 2) {\n    $('#stage').removeClass('green');\n    $('#stage').addClass('yellow');\n  } else {\n    $('#stage').addClass('green');\n  }\n\n  life.textContent = `Life: ${game.life}`;\n  const age_img = document.createElement('img');\n  if (game.age() === 'young') {\n    age_img.src = './assets/images/young.png';\n    age.appendChild(age_img);\n  } else {\n    age_img.src = './assets/images/old.png';\n    age.appendChild(age_img);\n  }\n}\n","var cards = require('./cards.js');\n\nclass Game {\n  constructor() {\n    this.level = 1;\n    this.life = 20;\n    this.hazards = this.shuffle(cards.hazards);\n    this.activeHazard = null;\n    this.spentHazards = [];\n    this.markDelete = [];\n    this.yage = this.shuffle(cards.age_young);\n    this.oage = this.shuffle(cards.age_old);\n    let arr = cards.pirates;\n    this.goals = [\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n    ];\n    this.abilities = this.shuffle(cards.start);\n    this.activeAbilities = [];\n    this.holdAbilities = [];\n    this.spentAbilities = [];\n    this.cardsToDelete = 0;\n    this.powers = [];\n    this.selected = [];\n    this.end = false;\n  }\n\n  returnActiveAbilities() {\n    return this.activeAbilities;\n  }\n\n  age() {\n    if (this.yage.length > 0) {\n      return 'young';\n    } else {\n      return 'old';\n    }\n  }\n\n  drawHazards() {\n    let arr = [];\n    if (this.hazards.length > 1) {\n      arr.push(this.hazards.pop());\n      arr.push(this.hazards.pop());\n      return [arr[0], arr[1]];\n    } else {\n      console.log(this.hazards);\n      this.hazards = this.shuffle(this.hazards.concat(this.spentHazards));\n      console.log(this.hazards);\n      this.level += 1;\n      if (this.level === 4) {\n        return null;\n      } else {\n        arr.push(this.hazards.pop());\n        arr.push(this.hazards.pop());\n        console.log(arr);\n        return [arr[0], arr[1]];\n      }\n    }\n  }\n\n  returnHazard(hazard) {\n    this.spentHazards.push(hazard);\n  }\n\n  addToTop(abilities) {\n    abilities.concat(this.pile);\n  }\n  addToBottom(abilities) {\n    this.pile.concat(abilities);\n  }\n\n  drawAbility() {\n    if (this.abilities.length === 0) {\n      this.abilities = this.spentAbilities;\n      if (this.yage.length > 0) {\n        this.abilities.push(this.yage.pop());\n      } else {\n        this.abilities.push(this.oage.pop());\n      }\n      this.abilities = this.shuffle(this.abilities);\n    }\n    const draw = this.abilities.pop();\n    this.activeAbilities.push(draw);\n    return draw;\n  }\n\n  changeLife(num) {\n    this.life += num;\n  }\n\n  setHazard(hazard) {\n    this.activeHazard = hazard;\n  }\n\n  setHold() {\n    this.holdAbilities = this.activeAbilities;\n  }\n\n  markForDelete(hazard) {\n    let test = true;\n    this.activeAbilities.forEach((el, i) => {\n      if (el === hazard && test) {\n        this.markDelete.push(this.activeAbilities.splice(i, 1)[0]);\n        test = false;\n      }\n    });\n  }\n\n  unmarkForDelete(hazard) {\n    const arr = [];\n    let test = false;\n    arr.forEach(el => {\n      if (el !== hazard && test) {\n        arr.push(hazard);\n      } else {\n        this.activeAbilities.push(hazard);\n        test = true;\n      }\n    });\n    this.markDelete = arr;\n  }\n\n  delete() {\n    this.spentAbilities = this.spentAbilities.concat(this.activeAbilities);\n    this.markDelete = [];\n    this.activeAbilities = [];\n    this.powers = [];\n    this.stop = '';\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\nmodule.exports = Game;\n","const Game = require('./game.js');\nconst setup = require('./setup.js');\nconst createCard = require('./createCard.js');\nconst chooseHazard = require('./chooseHazard.js');\n\nexport const helpModal = () => {\n  const gameDiv = document.querySelector('#modal-hook');\n  const modal = document.createElement('div');\n  modal.id = 'modal';\n  const helpModal = document.createElement('div');\n  helpModal.id = 'helpModal';\n  modal.innerHTML += helpModal.outerHTML;\n  gameDiv.innerHTML += modal.outerHTML;\n  introModal();\n};\n\nconst introModal = () => {\n  const helpModal = document.querySelector('#helpModal');\n  const title = document.createElement('h1');\n  title.textContent = 'Castaway';\n  helpModal.innerHTML = title.outerHTML;\n  const intro = document.createElement('div');\n  intro.innerHTML =\n    'Thanks for playing Castaway, my version of the card game Friday by Friedemann Friese!' +\n    '<br>' +\n    '<br>' +\n    ' You are Friday and spend your time on a deserted Island. After Robinson suddenly capsizes with his ship and runs ashore at your beach, your peaceful times are disturbed. To give Robinson a chance to leave the Island again, you start to teach him to improve his survival abilities against the hazards of the Island. If Robinson beats two Pirates at the end of the game, he successfully leaves the island and you will have your beloved peace back';\n  helpModal.innerHTML += intro.outerHTML;\n  const navigation = document.createElement('div');\n  navigation.id = 'helpModal-nav';\n  const basic = document.createElement('div');\n  basic.id = 'helpModal-basic';\n  basic.textContent = 'Basic Instructions';\n  const tutorial = document.createElement('div');\n  tutorial.id = 'helpModal-tutorial';\n  tutorial.textContent = 'Tutorial';\n  const powers = document.createElement('div');\n  powers.id = 'helpModal-powers';\n  powers.textContent = 'Power Details';\n  navigation.innerHTML += basic.outerHTML;\n  navigation.innerHTML += tutorial.outerHTML;\n  navigation.innerHTML += powers.outerHTML;\n  helpModal.innerHTML += navigation.outerHTML;\n\n  const returnDiv = document.createElement('div');\n  returnDiv.id = 'helpModal-returnDiv';\n  helpModal.innerHTML += returnDiv.outerHTML;\n  document\n    .querySelector('#helpModal-returnDiv')\n    .addEventListener('click', e => {\n      const modal = document.querySelector('#modal');\n      modal.parentNode.removeChild(modal);\n      document.querySelector('#startGame').addEventListener('click', e => {\n        const game = new Game();\n        $('#game').data('game', game);\n        setup.setup(game);\n        let pirate = createCard.createPirate(game.goals[0]);\n        document.querySelector('#goal').innerHTML = pirate.outerHTML;\n        pirate = createCard.createPirate(game.goals[1]);\n        document.querySelector('#goal').innerHTML += pirate.outerHTML;\n        const hazards = game.drawHazards();\n        chooseHazard.chooseHazard(hazards, game);\n      });\n    });\n\n  document.querySelector('#helpModal-basic').addEventListener('click', e => {\n    basicModal();\n  });\n\n  document.querySelector('#helpModal-tutorial').addEventListener('click', e => {\n    tutorialGuide();\n  });\n\n  document.querySelector('#helpModal-powers').addEventListener('click', e => {\n    powersModal();\n  });\n};\n\nconst basicModal = () => {\n  const helpModal = document.querySelector('#helpModal');\n  const title = document.createElement('h1');\n  title.textContent = 'Basic Instructions';\n  helpModal.innerHTML = title.outerHTML;\n  const basic = document.createElement('div');\n  basic.innerHTML =\n    'While playing you are trying to guide Robinson through the game. He must win against two pirates without dying to finally leave the island again. <br><br> At the start of the game Robinson is not very cunning. In this game the pile of fighting cards (represented on the bottom right corner of the screen by the card pile) represents his abilities. By comparison Robinson‘s health is in good shape and he starts with many life points. You have two possibilities to help Robinson. You can either cleverly beat the hazards of the island (represented on the bottom left corner of the screen by the card pile) and receive additional cards to improve Robinson‘s fighting abilities, or you deliberately lose against certain hazards and pay with Robinson‘s life points to remove unwanted fighting cards from play. <br><br> During the game you will improve the quality and quantity of your fighting cards thanks to both possibilities and help Robinson with his newly gained abilities and knowledge to win against even more difficult hazards. However, life on the island is energy-sapping for Robinson so he is forced to always add aging cards (represented on the top left corner of the screen by the card pile) to his fighting cards pile. These cards are all cumbersome, so you‘d better remember to keep them in mind when planning your next steps. <br><br> It is up to you. Use Robinson‘s life points cleverly and choose the correct hazards to keep Robinson healthy and strong for the final fights against both pirates.';\n  helpModal.innerHTML += basic.outerHTML;\n  const returnDiv = document.createElement('div');\n  returnDiv.id = 'helpModal-returnDiv';\n  helpModal.innerHTML += returnDiv.outerHTML;\n  document\n    .querySelector('#helpModal-returnDiv')\n    .addEventListener('click', e => {\n      introModal();\n    });\n};\n\nconst powersModal = () => {\n  const helpModal = document.querySelector('#helpModal');\n  const title = document.createElement('h1');\n  title.textContent = 'Special Card Powers';\n  helpModal.innerHTML = title.outerHTML;\n  const basic = document.createElement('div');\n  basic.innerHTML =\n    '<strong>1x destroy:</strong> Not all fighting cards in the Robinson stack are helpful for you. With this special ability you can destroy one fighting card and remove it from the game.<br><br> <strong>1x double:</strong> You can double the fighting value of 1 of your drawn fighting cards. This ability is not cumulative!<br><br><strong>step -1:</strong> If you fight against a hazard in the »yellow Step« or the »red Step«, you can reduce the hazard value by one Step. This special ability is useless against »green Step« hazards and pirates. <br><br> <strong>sort 3 cards:</strong> You can draw up to 3 cards one after the other from the Robinson stack and look at them. Afterwards you can discard up to 1 of these cards on the Robinson discard pile and place the remaining cards face-down back on the Robinson stack in the order you choose. <br><br> <strong>1x exchange:</strong> You place 1 of the other drawn face-up fighting cards on the Robinson discard pile (you can choose one card you already used for the special ability) and draw a new card as replacement. If the new card has a special ability, you can use it now or later during the fight.<br><br> <strong>1x below the stack:</strong> You place 1 of the other drawn drawn fighting cards back below the Robinson stack. If you choose one of the free cards from the left side of the hazard card, you can draw an exchange card.';\n  // <strong>1x copy:</strong> You can copy the special ability of 1 of the other drawn fighting cards, to use it again. You can copy the same ability with several »copy« abilities. <br><br>\n  helpModal.innerHTML += basic.outerHTML;\n  const returnDiv = document.createElement('div');\n  returnDiv.id = 'helpModal-returnDiv';\n  helpModal.innerHTML += returnDiv.outerHTML;\n  document\n    .querySelector('#helpModal-returnDiv')\n    .addEventListener('click', e => {\n      introModal();\n    });\n};\n\nconst tutorialGuide = () => {\n  const modal = document.querySelector('#modal');\n  const instructions = document.createElement('div');\n  instructions.id = 'instructions';\n  const helpModal = document.querySelector('#helpModal');\n  document.getElementById('startGame').click();\n  helpModal.parentNode.removeChild(helpModal);\n  modal.style.backgroundColor = 'rgb(0, 0, 0, 0)';\n  modal.style.justifyContent = 'flex-end';\n  modal.innerHTML += instructions.outerHTML;\n  tutorial1();\n};\n\nconst tutorial1 = () => {\n  const modal = document.getElementById('modal');\n  const instruction = document.getElementById('instructions');\n  instructions.innerHTML =\n    'These three piles represent your abilities, hazards on the island, and your aging <br> On the top left is the aging pile, below that is the hazards pile, and on the right are your starting abilities <br><br> ***Click anywhere to continue***';\n  document.querySelectorAll('.card-holder').forEach((card, i) => {\n    if ((i !== 2) & (i !== 3)) {\n      card.style.border = '5px solid blue';\n    }\n  });\n  setTimeout(() => {\n    modal.addEventListener('click', e => {\n      tutorial2();\n    });\n  }, 500);\n};\n\nconst tutorial2 = () => {\n  document.querySelectorAll('.card-holder').forEach(card => {\n    card.style.border = 'none';\n  });\n  const modal = document.getElementById('modal');\n  const instruction = document.getElementById('instructions');\n  instructions.innerHTML =\n    'These two cards represent pirates and your final challenges on the island  <br><br> ***Click anywhere to continue***';\n  document.getElementById('goal').style.border = '5px solid blue';\n  setTimeout(() => {\n    modal.addEventListener('click', e => {\n      tutorial3();\n    });\n    modal.removeEventListener('click', e => {\n      tutorial2();\n    });\n  }, 500);\n};\n\nconst tutorial3 = () => {\n  document.getElementById('goal').style.border = 'none';\n  const modal = document.getElementById('modal');\n  const instruction = document.getElementById('instructions');\n  const arr1 = [];\n  document.querySelectorAll('#card-body').forEach(el => {\n    arr1.push(el.querySelectorAll('div')[0]);\n  });\n  document.querySelectorAll('.pirate').forEach(el => {\n    arr1.push(el.querySelectorAll('div')[0]);\n  });\n  const arr2 = [];\n  document.querySelectorAll('#card-body').forEach(el => {\n    arr2.push(el.querySelectorAll('div')[1]);\n  });\n  document.querySelectorAll('.pirate').forEach(el => {\n    arr2.push(el.querySelectorAll('div')[1]);\n  });\n  arr1.forEach(el => {\n    el.style.border = '3px solid blue';\n  });\n  arr2.forEach(el => {\n    el.style.border = '3px solid green';\n  });\n  instructions.innerHTML =\n    'All hazards and pirates have draw and fight values associated with them<br>Values highlighted in blue represent the number of cards you may draw before you must pay life<br>The values in green are the fight score that you must beat to defeat the challenge<br><br> ***Click anywhere to continue***';\n  setTimeout(() => {\n    modal.addEventListener('click', e => {\n      tutorial4();\n    });\n    modal.removeEventListener('click', e => {\n      tutorial3();\n    });\n  }, 500);\n};\n\nconst tutorial4 = () => {\n  const modal = document.getElementById('modal');\n  const instruction = document.getElementById('instructions');\n  const arr1 = [];\n  document.querySelectorAll('#card-body').forEach(el => {\n    arr1.push(el.querySelectorAll('div')[0]);\n  });\n  document.querySelectorAll('.pirate').forEach(el => {\n    arr1.push(el.querySelectorAll('div')[0]);\n  });\n  const arr2 = [];\n  document.querySelectorAll('#card-body').forEach(el => {\n    arr2.push(el.querySelectorAll('div')[1]);\n  });\n  document.querySelectorAll('.pirate').forEach(el => {\n    arr2.push(el.querySelectorAll('div')[1]);\n  });\n  arr1.forEach(el => {\n    el.style.border = 'none';\n  });\n  arr2.forEach(el => {\n    el.style.border = 'none';\n  });\n  document\n    .getElementById('card1-aside')\n    .querySelector('img')\n    .click();\n  document.getElementById('ability-side-1').style.border = '5px solid blue';\n  instructions.innerHTML =\n    'Each hazard card has a corresponding ability card that is added to your spent abilities pile if the hazard is beat<br><br> ***Click anywhere to continue***';\n  setTimeout(() => {\n    modal.addEventListener('click', e => {\n      tutorial5();\n    });\n    modal.removeEventListener('click', e => {\n      tutorial4();\n    });\n  }, 500);\n};\n\nconst tutorial5 = () => {\n  const modal = document.getElementById('modal');\n  const instruction = document.getElementById('instructions');\n  document.getElementById('ability-side-1').style.border = 'none';\n  document\n    .getElementById('card-header')\n    .querySelectorAll('div')[0].style.border =\n    '3px solid orange';\n  document\n    .getElementById('card-header')\n    .querySelectorAll('div')[1].style.border =\n    '3px solid yellow';\n  document\n    .getElementById('ability-card')\n    .querySelector('#card-body').style.border =\n    '3px solid red';\n  instructions.innerHTML =\n    'Each ability card has a fight value that it contributes to your total fight for that round marked in orange<br>Each card also has a cost which refers to the number of life points it can be removed from the game for after a lost round marked in yellow<br>Finally each card can have a power outlined in the section marked in red<br><br> ***Click anywhere to continue***';\n  setTimeout(() => {\n    modal.addEventListener('click', e => {\n      tutorial6();\n    });\n    modal.removeEventListener('click', e => {\n      tutorial5();\n    });\n  }, 500);\n};\n\nconst tutorial6 = () => {\n  const modal = document.getElementById('modal');\n  const instruction = document.getElementById('instructions');\n  document.getElementById('ability-side-1').style.border = 'none';\n  document\n    .getElementById('card-header')\n    .querySelectorAll('div')[0].style.border =\n    'none';\n  document\n    .getElementById('card-header')\n    .querySelectorAll('div')[1].style.border =\n    'none';\n  document\n    .getElementById('ability-card')\n    .querySelector('#card-body').style.border =\n    'none';\n  document\n    .getElementById('card1-aside')\n    .querySelector('input')\n    .click();\n  document.getElementById('confirm-btn').style.border = '5px solid blue';\n  instructions.innerHTML =\n    'A card can be easily selected by pressing the checkbox located to the left of each card and then confirming by selecting the chest highlighted in blue<br><br> ***Click anywhere to continue***';\n  setTimeout(() => {\n    modal.addEventListener('click', e => {\n      tutorial7();\n    });\n    modal.removeEventListener('click', e => {\n      tutorial6();\n    });\n  }, 500);\n};\n\nconst tutorial7 = () => {\n  const modal = document.getElementById('modal');\n  const instruction = document.getElementById('instructions');\n  document\n    .getElementById('right-game')\n    .querySelector('.card-holder').style.border =\n    '5px solid blue';\n  instructions.innerHTML =\n    'Once selected the hazard will appear in the middle of the screen and you can draw a card by clicking the abilities deck highlighted in blue<br><br> ***Click anywhere to continue***';\n  setTimeout(() => {\n    modal.addEventListener('click', e => {\n      tutorial8();\n    });\n    modal.removeEventListener('click', e => {\n      tutorial7();\n    });\n  }, 500);\n};\n\nconst tutorial8 = () => {\n  const modal = document.getElementById('modal');\n  const instruction = document.getElementById('instructions');\n  document\n    .getElementById('right-game')\n    .querySelector('.card-holder').style.border =\n    'none';\n  document.getElementById('abilities').click();\n  document.getElementById('resolve-fight').style.border = 'none';\n  instructions.innerHTML =\n    'You may keep drawing cards as long as there are cards to be drawn<br>Once you are ready you can resolve the fight by clicking the button outlined in blue<br>Best of luck in your adventures escaping the island<br><br> ***Click anywhere to continue***';\n  setTimeout(() => {\n    modal.addEventListener('click', e => {\n      const modal = document.getElementById('modal');\n      const helpModal = document.createElement('div');\n      helpModal.id = 'helpModal';\n      modal.innerHTML = helpModal.outerHTML;\n      introModal();\n      // const instructions = document.getElementById('instructions');\n      // instructions.parentNode.removeChild(instructions);\n    });\n  }, 500);\n};\n","const createCard = require('./createCard.js');\nconst fightHazard = require('./fightHazard.js');\n\nexport const resolveEnd = game => {\n  game.end = true;\n  const gameNode = document.querySelector('#main-game');\n  const fightDiv = document.createElement('div');\n  fightDiv.id = 'fight-div';\n  const drawDiv = document.createElement('div');\n  drawDiv.id = 'draw-div';\n  const hazardDiv = document.createElement('div');\n  hazardDiv.id = 'hazard-div';\n  const pushDiv = document.createElement('div');\n  pushDiv.id = 'push-div';\n\n  const hazardCard = createCard.createPirate(game.goals[0]);\n  hazardDiv.innerHTML += hazardCard.outerHTML;\n\n  const powers = document.createElement('div');\n  powers.id = 'powers-disp';\n  hazardDiv.innerHTML += powers.outerHTML;\n\n  const fightDisp = document.createElement('div');\n  fightDisp.id = 'fight-disp';\n\n  const totalFight = document.createElement('div');\n  totalFight.id = 'total-fight';\n  totalFight.textContent = `Total Fight: 0`;\n  const drawCnt = document.createElement('div');\n  drawCnt.id = 'draw-cnt';\n  drawCnt.textContent = `Free draws: ${game.goals[0][0].draw}`;\n  const resolve = document.createElement('div');\n  resolve.textContent = 'Resolve Fight';\n  resolve.id = 'resolve-fight';\n  fightDisp.innerHTML += totalFight.outerHTML;\n  fightDisp.innerHTML += drawCnt.outerHTML;\n  fightDisp.innerHTML += resolve.outerHTML;\n  hazardDiv.innerHTML += fightDisp.outerHTML;\n\n  game.playerFght = 0;\n  $('#game').data('drawCnt', game.goals[0][0].draw);\n  console.log(game.goals[0][0]);\n  $('#game').data('drawFght', game.goals[0][0].fight);\n  fightDiv.innerHTML += drawDiv.outerHTML;\n  fightDiv.innerHTML += hazardDiv.outerHTML;\n  fightDiv.innerHTML += pushDiv.outerHTML;\n  gameNode.innerHTML = fightDiv.outerHTML;\n  fightHazard.setEvents(game);\n};\n\nexport const lose = () => {\n  const gameNode = document.querySelector('#main-game');\n  const loseGame = document.createElement('div');\n  loseGame.id = 'loseGame';\n  loseGame.textContent = 'You lost the game';\n  gameNode.innerHTML = loseGame.outerHTML;\n};\n\nexport const win = () => {\n  const gameNode = document.querySelector('#main-game');\n  const winGame = document.createElement('div');\n  winGame.id = 'winGame';\n  winGame.textContent = 'You won the game';\n  gameNode.innerHTML = winGame.outerHTML;\n};\n","const createCard = require('./createCard.js');\nconst fightHazard = require('./fightHazard.js');\n\nexport const activateAbility = e => {\n  // console.log(e.currentTarget.dataset.positions);\n  // console.log(e.target.dataset.value);\n  // console.log(e.target.textContent);\n  // document.querySelector('#game').dataset.selected = [];\n  // document.querySelector('#game').dataset.select_num = e.target.textContent;\n\n  const game = $('#game').data('game');\n  if (e.target.dataset.value === 'destroy') {\n    setupModalAll(`Select a card to remove from the game`, e, game);\n  } else if (e.target.dataset.value === 'copy') {\n  } else if (e.target.dataset.value === 'below pile') {\n    setupModalAll(`Select a card to move to bottom of abilities pile`, e, game);\n  } else if (e.target.dataset.value === 'step') {\n    const temp = game.activeHazard;\n    if (game.level === 2) {\n      temp.hazard.yellow = temp.hazard.green;\n    } else if (\n      game.level === 3 &&\n      game.activeHazard.hazard.yellow !== game.activeHazard.hazard.red\n    ) {\n      temp.hazard.red = temp.hazard.yellow;\n    } else {\n      temp.hazard.red = temp.hazard.yellow;\n    }\n    game.activeHazard = temp;\n  } else if (e.target.dataset.value === 'exchange') {\n    if (e.target.textContent === '1') {\n      setupModalAll(\n        `Select a card to discard and exchange for another`,\n        e,\n        game\n      );\n    } else {\n      setupModalAll(`Select up to 2 cards to discard and exchange`, e, game);\n    }\n  } else if (e.target.dataset.value === 'double') {\n    setupModalAll(`Select a card to double fighting strength`, e, game);\n  } else if (e.target.dataset.value === 'sort') {\n    const modal = document.createElement('div');\n    const nxtCards = game.abilities.splice(game.abilities.length - 4, 3);\n    modal.id = 'modal';\n    const title = document.createElement('h4');\n    title.textContent = 'Choose 1 card to delete';\n    modal.innerHTML += title.outerHTML;\n    const cards = document.createElement('div');\n    cards.id = 'card-selection';\n    let card = null;\n    $('#game').data('active', nxtCards);\n    $('#game').data('selected', []);\n    $('#game').data('total', 1);\n    $('#game').data('type', e.target.dataset.value);\n    console.log(nxtCards[0].ability);\n    nxtCards.forEach((ability, i) => {\n      card = createCard.createAbility(ability, game.level);\n      card.dataset.place = i;\n      cards.innerHTML += card.outerHTML;\n    });\n    modal.innerHTML += cards.outerHTML;\n    const confirm = document.createElement('div');\n    confirm.id = 'modal-confirm-btn';\n    confirm.textContent = 'confirm';\n    modal.innerHTML += confirm.outerHTML;\n    document.querySelector('#game').innerHTML += modal.outerHTML;\n\n    document\n      .querySelector('#card-selection')\n      .querySelectorAll('.card')\n      .forEach(card => {\n        card.addEventListener('click', e => {\n          selector(e);\n        });\n      });\n  }\n  document.querySelector('#modal-confirm-btn').style.cursor = 'pointer';\n  document.querySelector('#modal-confirm-btn').addEventListener('click', e => {\n    confirm(e);\n  });\n  const holder = e.currentTarget.querySelectorAll('#power-box-gem');\n  if (holder.length > 1) {\n    for (let i = e.target.dataset.pos; i < holder.length; i++) {\n      if (i === holder.length - 1) {\n        holder[i].textContent = '';\n        holder[i].id = 'power-box';\n      } else {\n        holder[i].outerHTML = holder[i + 1].outerHTML;\n        holder[i].dataset.value = holder[i + 1].dataset.value;\n        holder[i].dataset.pos = holder[i + 1].dataset.pos - 1;\n      }\n    }\n  } else {\n    const divEl = document.querySelector('#' + e.currentTarget.id);\n    divEl.parentNode.removeChild(divEl);\n  }\n};\n\nconst setupModalAll = (text, e, game) => {\n  const modal = document.createElement('div');\n  modal.id = 'modal';\n  const title = document.createElement('h4');\n  title.textContent = text;\n  modal.innerHTML += title.outerHTML;\n  const cards = document.createElement('div');\n  cards.id = 'card-selection';\n  let card = null;\n  $('#game').data('active', game.returnActiveAbilities());\n  $('#game').data('selected', []);\n  $('#game').data('total', e.target.textContent);\n  $('#game').data('type', e.target.dataset.value);\n  game.activeAbilities.forEach((ability, i) => {\n    card = createCard.createAbility(ability, game.level);\n    card.dataset.place = i;\n    cards.innerHTML += card.outerHTML;\n  });\n  modal.innerHTML += cards.outerHTML;\n  const confirm = document.createElement('div');\n  confirm.id = 'modal-confirm-btn';\n  confirm.textContent = 'confirm';\n  modal.innerHTML += confirm.outerHTML;\n  document.querySelector('#game').innerHTML += modal.outerHTML;\n\n  document\n    .querySelector('#card-selection')\n    .querySelectorAll('.card')\n    .forEach(card => {\n      card.addEventListener('click', e => {\n        selector(e);\n      });\n    });\n};\n\n// const setupModalCopy = (e, game) => {\n//   const modal = document.createElement('div');\n//   modal.id = 'modal';\n//   const title = document.createElement('h4');\n//   title.textContent = `Select a card whose abilities you would like to copy`;\n//   modal.innerHTML += title.outerHTML;\n//   const cards = document.createElement('div');\n//   cards.id = 'card-selection';\n//   let card = null;\n//   $('#game').data('active', game.powers;\n//   $('#game').data('selected', []);\n//   $('#game').data('total', e.target.textContent);\n//   $('#game').data('type', e.target.dataset.value);\n//   game.powers.forEach((ability, i) => {\n//     card = createCard.createAbility(ability, game.level);\n//     card.dataset.place = i;\n//     cards.innerHTML += card.outerHTML;\n//   });\n//   modal.innerHTML += cards.outerHTML;\n//   const confirm = document.createElement('div');\n//   confirm.id = 'modal-confirm-btn';\n//   confirm.textContent = 'confirm';\n//   modal.innerHTML += confirm.outerHTML;\n//   document.querySelector('#game').innerHTML += modal.outerHTML;\n//\n//   document\n//     .querySelector('#card-selection')\n//     .querySelectorAll('.card')\n//     .forEach(card => {\n//       card.addEventListener('click', e => {\n//         selector(e);\n//       });\n//     });\n// };\n\nconst selector = e => {\n  const game = $('#game').data('game');\n  const position = e.currentTarget.dataset.place - 1;\n\n  let test = true;\n  $('#game')\n    .data('selected')\n    .forEach((el, i) => {\n      if (el === $('#game').data('active')[position] && test) {\n        test = false;\n        $('#game')\n          .data('selected')\n          .splice(i, 1);\n        e.currentTarget.style.border = '2px solid transparent';\n        $('#game').data('total', $('#game').data('total') + 1);\n      }\n    });\n  if (test && $('#game').data('total') > 0) {\n    $('#game').data('selected', [$('#game').data('active')[position]]);\n    console.log($('#game').data('active'));\n    console.log($('#game').data('selected'));\n    e.currentTarget.style.border = '2px solid blue';\n    $('#game').data('total', $('#game').data('total') - 1);\n  }\n};\n\nconst confirm = e => {\n  const game = $('#game').data('game');\n  if ($('#game').data('type') === 'double') {\n    $('#game')\n      .data('selected')\n      .forEach(ability => {\n        game.playerFght += ability.ability.fight;\n      });\n    $('#total-fight').text(`Total Fight: ${game.playerFght}`);\n  } else if ($('#game').data('type') === 'destroy') {\n    $('#game')\n      .data('selected')\n      .forEach(ability => {\n        let cards = document\n          .querySelector('#fight-div')\n          .querySelectorAll('#ability-card');\n        console.log(ability.ability.name);\n        console.log(cards[0].querySelector('h4').textContent);\n        for (let i = 0; i < cards.length; i++) {\n          if (\n            cards[i].querySelector('h4').textContent === ability.ability.name\n          ) {\n            cards[i].parentNode.removeChild(cards[i]);\n            game.playerFght -= game.activeAbilities[i].ability.fight;\n            $('#total-fight').text(`Total Fight: ${game.playerFght}`);\n            game.activeAbilities.splice(i, 1);\n            i = cards.length;\n          }\n        }\n      });\n  } else if ($('#game').data('type') === 'exchange') {\n    $('#game')\n      .data('selected')\n      .forEach(ability => {\n        let cards = document\n          .querySelector('#fight-div')\n          .querySelectorAll('#ability-card');\n        for (let i = 0; i < cards.length; i++) {\n          if (\n            cards[i].querySelector('h4').textContent === ability.ability.name\n          ) {\n            cards[i].parentNode.removeChild(cards[i]);\n            game.playerFght -= game.activeAbilities[i].ability.fight;\n            $('#total-fight').text(`Total Fight: ${game.playerFght}`);\n            game.spentAbilities.push(game.activeAbilities.splice(i, 1));\n            i = cards.length;\n            if ($('#game').data('drawCnt') < 0) {\n              $('#game').data('drawCnt', 1);\n              $('#draw-cnt').text(`Free draws: ${$('#game').data('drawCnt')}`);\n            } else {\n              $('#game').data('drawCnt', $('#game').data('drawCnt') + 1);\n              $('#draw-cnt').text(`Free draws: ${$('#game').data('drawCnt')}`);\n            }\n          }\n        }\n      });\n  } else if ($('#game').data('type') === 'below pile') {\n    $('#game')\n      .data('selected')\n      .forEach(ability => {\n        let cards = document\n          .querySelector('#fight-div')\n          .querySelectorAll('#ability-card');\n        for (let i = 0; i < cards.length; i++) {\n          if (\n            cards[i].querySelector('h4').textContent === ability.ability.name\n          ) {\n            cards[i].parentNode.removeChild(cards[i]);\n            game.abilities = game.activeAbilities\n              .splice(i, 1)\n              .concat(game.abilities);\n            i = cards.length;\n            if ($('#game').data('drawCnt') < 0) {\n              $('#game').data('drawCnt', 1);\n              $('#draw-cnt').text(`Free draws: ${$('#game').data('drawCnt')}`);\n            } else {\n              $('#game').data('drawCnt', $('#game').data('drawCnt') + 1);\n              $('#draw-cnt').text(`Free draws: ${$('#game').data('drawCnt')}`);\n            }\n          }\n        }\n      });\n  } else if ($('#game').data('type') === 'sort') {\n    $('#game').data('type', 'sort-next');\n    $('#game').data('total', 1);\n    document.querySelector('#modal').querySelector('h4').textContent =\n      'Select next card to return to pile';\n    $('#game')\n      .data('selected')\n      .forEach(ability => {\n        let cards = document\n          .querySelector('#card-selection')\n          .querySelectorAll('#ability-card');\n        console.log(cards);\n        console.log(ability);\n        for (let i = 0; i < cards.length; i++) {\n          if (\n            cards[i].querySelector('h4').textContent === ability.ability.name\n          ) {\n            cards[i].parentNode.removeChild(cards[i]);\n            $('#game').data('selected', []);\n            let test = $('#game').data('active');\n            test.splice(i, 1);\n            $('#game').data('active', test);\n            i = cards.length;\n          }\n        }\n      });\n  } else if ($('#game').data('type') === 'sort-next') {\n    $('#game').data('total', 1);\n    console.log($('#game').data('active'));\n    let cards = document\n      .querySelector('#card-selection')\n      .querySelectorAll('#ability-card');\n    console.log(cards);\n    console.log($('#game').data('selected'));\n    let selected = $('#game').data('selected');\n    let checker = true;\n    for (let i = 0; i < cards.length; i++) {\n      if (checker) {\n        cards[i].dataset.place = i;\n      } else {\n        cards[i].dataset.place = i - 1;\n      }\n      if (\n        cards[i].querySelector('h4').textContent === selected[0].ability.name &&\n        checker\n      ) {\n        checker = false;\n        cards[i].parentNode.removeChild(cards[i]);\n        game.abilities.push($('#game').data('selected')[0]);\n        let test = $('#game').data('active');\n        test.splice(i, 1);\n        console.log(test);\n        $('#game').data('active', test);\n        $('#game').data('selected', []);\n        i = cards.length;\n      }\n    }\n\n    if (\n      document\n        .querySelector('#card-selection')\n        .querySelectorAll('#ability-card').length === 0\n    ) {\n      $('#game').data('type', 'null');\n    }\n  }\n  if (\n    $('#game').data('type') !== 'sort-next' &&\n    $('#game').data('type') !== 'sort'\n  ) {\n    const modal = document.querySelector('#modal');\n    modal.parentNode.removeChild(modal);\n    document.querySelector(`#resolve-fight`).addEventListener('click', e => {\n      $('#game').data('active', game.activeAbilities.slice(0));\n      fightHazard.resolveFight(e);\n    });\n    document.querySelector(`#abilities`).addEventListener('click', e => {\n      drawCard(e);\n    });\n  }\n};\n","const start = [\n  {\n    ability: {\n      fight: 2,\n      name: 'Genius',\n      cost: 1,\n      spec: false,\n    },\n  },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  {\n    ability: {\n      fight: 0,\n      name: 'Eat',\n      cost: 1,\n      spec: { type: 'life', value: 2, text: 'Heal 2 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n];\n\nconst age_young = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -1, text: 'Lose 1 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  // { ability: { fight: -3, name: 'very stupid', cost: 2, spec: false } },\n  {\n    ability: {\n      fight: -1,\n      name: 'Afraid',\n      cost: 2,\n      spec: {\n        type: 'negate top card',\n        value: false,\n        text: 'Strongest cards fight is now 0',\n      },\n    },\n  },\n  {\n    ability: {\n      fight: -1,\n      name: 'Tired',\n      cost: 2,\n      spec: { type: 'stop', value: false, text: 'Stop turn' },\n    },\n  },\n];\n\nconst age_old = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Very Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -2, text: 'Lose 2 life' },\n    },\n  },\n  { ability: { fight: -5, name: 'self homicidal', cost: 2, spec: false } },\n  { ability: { fight: -4, name: 'idiot', cost: 2, spec: false } },\n];\n\nconst hazards = [\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Strategy',\n      cost: 1,\n      spec: {\n        type: 'exchange',\n        value: 1,\n        text: 'Exchange 1 card',\n      },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3, text: 'Sort 3 cards' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'Draw 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 1, text: 'Exchange 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3, text: 'Sort 3 cards' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'Draw 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: {\n        type: 'below pile',\n        value: 1,\n        text: 'Move 1 card to bottom of pile',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  // {\n  //   ability: {\n  //     fight: 2,\n  //     name: 'Mimicry',\n  //     cost: 1,\n  //     spec: {\n  //       type: 'copy',\n  //       value: 1,\n  //       text: 'Copy ability of another card',\n  //     },\n  //   },\n  //   hazard: {\n  //     draw: 2,\n  //     green: 1,\n  //     yellow: 3,\n  //     red: 6,\n  //     name: 'Explore The Island',\n  //   },\n  // },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'Draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'Draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  // {\n  //   ability: {\n  //     fight: 2,\n  //     name: 'Mimicry',\n  //     cost: 1,\n  //     spec: {\n  //       type: 'copy',\n  //       value: 1,\n  //       text: 'Copy the ability of another card',\n  //     },\n  //   },\n  //   hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  // },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: {\n        type: 'below pile',\n        value: 1,\n        text: 'Move 1 card to bottom of pile',\n      },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Reader',\n      cost: 1,\n      spec: { type: 'step', value: -1, text: 'Reduce hazard level by 1' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n];\n\nconst pirates = [\n  { draw: 6, fight: 20, spec: false },\n  { draw: 7, fight: 25, spec: false },\n  { draw: 8, fight: 30, spec: false },\n  { draw: 9, fight: 35, spec: false },\n  { draw: 10, fight: 40, spec: false },\n  // { draw: 0, fight: 0, spec: 'hazard' },\n  // { draw: 5, fight: 0, spec: 'double' },\n  // { draw: 7, fight: 16, spec: 'double life' },\n  // { draw: 9, fight: 22, spec: 'half' },\n  // { draw: 10, fight: 52, spec: 'point' },\n];\n\nmodule.exports = {\n  start,\n  age_young,\n  age_old,\n  hazards,\n  pirates,\n};\n","const Game = require('./lib/game.js');\nconst createCard = require('./lib/createCard.js');\nconst chooseHazard = require('./lib/chooseHazard.js');\nconst setup = require('./lib/setup.js');\nconst helpModal = require('./lib/helpModal.js');\n\ndocument.addEventListener('DOMContentLoaded', function(event) {\n  const audio = document.querySelector('audio');\n  audio.muted = true;\n  audio.addEventListener(\n    'ended',\n    () => {\n      this.currentTime = 0;\n      this.play();\n    },\n    false\n  );\n  // helpModal.helpModal();\n  const mainGame = document.querySelector('#main-game');\n  let startGame = document.createElement('h2');\n  startGame.id = 'startGame';\n  startGame.textContent = 'Start Game?';\n  mainGame.innerHTML += startGame.outerHTML;\n  document.querySelector('#help').addEventListener('click', e => {\n    helpModal.helpModal();\n  });\n  document.querySelector('#music').addEventListener('click', e => {\n    if (document.querySelector('audio').muted) {\n      document.querySelector('audio').muted = false;\n      document.querySelector('#music').className = 'musicOn';\n    } else {\n      document.querySelector('audio').muted = true;\n      document.querySelector('#music').className = 'musicOff';\n    }\n  });\n  document.querySelector('#startGame').addEventListener('click', e => {\n    const game = new Game();\n    $('#game').data('game', game);\n    setup.setup(game);\n    let pirate = createCard.createPirate(game.goals[0]);\n    document.querySelector('#goal').innerHTML = pirate.outerHTML;\n    pirate = createCard.createPirate(game.goals[1]);\n    document.querySelector('#goal').innerHTML += pirate.outerHTML;\n    const hazards = game.drawHazards();\n    chooseHazard.chooseHazard(hazards, game);\n  });\n});\n"],"sourceRoot":""}