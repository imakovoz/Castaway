{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/cards.js","webpack:///./main.js","webpack:///./lib/createCard.js","webpack:///./lib/game.js","webpack:///./lib/chooseHazard.js","webpack:///./lib/setup.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","start","ability","fight","cost","spec","type","text","age_young","age_old","hazards","hazard","draw","green","yellow","red","pirates","Game","chooseHazard","setup","document","addEventListener","event","game","$","data","drawHazards","createHazard","card","stage","card_node","createElement","img","title","body","id","textContent","style","textAlign","fontSize","src","height","width","margin","drawIcon","drawText","fightIcon","fightText","position","borderRadius","backgroundColor","padding","innerHTML","outerHTML","className","display","flexDirection","alignItems","createAbility","textBody","textFight","cards","[object Object]","this","level","life","activeHazard","spentHazards","yage","oage","arr","goals","splice","Math","floor","random","length","abilities","spent_abilities","push","num","__webpack_exports__","createCard","gameNode","querySelector","selectionDiv","confirmDiv","confirmBtn","switcher","checkbox","setAttribute","makeCard","setEvents","node","cardBody","aside","e","flipCard","selectCard","check","path","split","checked","newCard","console","log","remove","target","box","css","prop","off","on","chooseCard","other","returnHazard","setHazard","hazard_aside","hazard_stage","age","hazard_stages","querySelectorAll","age_img","appendChild","border"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const start = [\n  { ability: { fight: 2, name: 'Genius', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  {\n    ability: {\n      fight: 0,\n      name: 'eat',\n      cost: 1,\n      spec: { type: 'life', value: 2, text: 'Heal 2 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n];\n\nconst age_young = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -1, text: 'Lose 1 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  // { ability: { fight: -3, name: 'very stupid', cost: 2, spec: false } },\n  {\n    ability: {\n      fight: -1,\n      name: 'Afraid',\n      cost: 2,\n      spec: {\n        type: 'negate top card',\n        value: false,\n        text: 'Strongest cards fight is now 0',\n      },\n    },\n  },\n  {\n    ability: {\n      fight: -1,\n      name: 'Tired',\n      cost: 2,\n      spec: { type: 'stop', value: false, text: 'Stop turn' },\n    },\n  },\n];\n\nconst age_old = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Very Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -2, text: 'Lose 2 life' },\n    },\n  },\n  { ability: { fight: -5, name: 'self homicidal', cost: 2, spec: false } },\n  { ability: { fight: -4, name: 'idiot', cost: 2, spec: false } },\n];\n\nconst hazards = [\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Strategy',\n      cost: 1,\n      spec: {\n        type: 'exchange',\n        value: 1,\n        text: 'Exchange 1 card',\n      },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3, text: 'Sort 3 cards' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'draw 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 1, text: 'Exchange 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3 },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'draw 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: { type: 'below pile', value: 1 },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Mimicry',\n      cost: 1,\n      spec: {\n        type: 'copy',\n        value: 1,\n        text: 'Copy the ability of another card',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Mimicry',\n      cost: 1,\n      spec: {\n        type: 'copy',\n        value: 1,\n        text: 'Copy the ability of another card',\n      },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: {\n        type: 'below pile',\n        value: 1,\n        text: 'You may place 1 card at the bottom of your pile',\n      },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Reader',\n      cost: 1,\n      spec: { type: 'step', value: -1, text: 'Reduce hazard level by 1' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n];\n\nconst pirates = [\n  { draw: 6, fight: 20, spec: false },\n  { draw: 7, fight: 25, spec: false },\n  { draw: 8, fight: 30, spec: false },\n  { draw: 9, fight: 35, spec: false },\n  { draw: 10, fight: 40, spec: false },\n  { draw: 0, fight: 0, spec: 'hazard' },\n  { draw: 5, fight: 0, spec: 'double' },\n  { draw: 7, fight: 16, spec: 'double life' },\n  { draw: 9, fight: 22, spec: 'half' },\n  { draw: 10, fight: 52, spec: 'point' },\n];\n\nmodule.exports = {\n  start,\n  age_young,\n  age_old,\n  hazards,\n  pirates,\n};\n","const Game = require('./lib/game.js');\nconst createCard = require('./lib/createCard.js');\nconst chooseHazard = require('./lib/chooseHazard.js');\nconst setup = require('./lib/setup.js');\n\ndocument.addEventListener('DOMContentLoaded', function(event) {\n  const game = new Game();\n  $('#game').data('game', game);\n  setup.setup(game);\n  const hazards = game.drawHazards();\n  chooseHazard.chooseHazard(hazards, game);\n});\n","export function createHazard(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let body = document.createElement('div');\n  body.id = 'card-body';\n  title.textContent = `${card.hazard.name}`;\n  title.style.textAlign = 'center';\n  title.style.fontSize = 'smaller';\n\n  if (card.hazard.name === 'Explore The Wreck') {\n    img.src = './assets/images/wreck.jpg';\n  } else if (card.hazard.name === 'Wild Animals') {\n    img.src = './assets/images/tiger.jpg';\n  } else if (card.hazard.name === 'Cannibals') {\n    img.src = './assets/images/cannibals.jpg';\n  } else if (card.hazard.name === 'Explore Deep Into The Island') {\n    img.src = './assets/images/jungle.jpg';\n  } else if (card.hazard.name === 'Explore The Island') {\n    img.src = './assets/images/island.jpg';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  let draw = document.createElement('div');\n  let drawIcon = document.createElement('img');\n  let drawText = document.createElement('span');\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  draw.style.position = 'relative';\n  draw.style.borderRadius = '50%';\n  draw.style.backgroundColor = 'blue';\n  draw.style.padding = '7px 7px 2px 7px';\n  fight.style.position = 'relative';\n  fight.style.borderRadius = '50%';\n  fight.style.backgroundColor = 'blue';\n  fight.style.padding = '7px 7px 2px 7px';\n\n  drawIcon.src = './assets/images/card-draw-icon.png';\n  drawText.textContent = `${card.hazard['draw']}`;\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card.hazard[stage]}`;\n\n  draw.innerHTML += drawText.outerHTML;\n  fight.innerHTML += fightText.outerHTML;\n  draw.innerHTML += drawIcon.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  body.innerHTML += draw.outerHTML;\n  body.innerHTML += fight.outerHTML;\n\n  card_node.innerHTML += title.outerHTML;\n  if (card.hazard.name === 'Wild Animals' || card.hazard.name === 'Cannibals') {\n    card_node.innerHTML += document.createElement('br').outerHTML;\n  }\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.className = 'card';\n  card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n\nexport function createAbility(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let body = document.createElement('div');\n  body.id = 'card-body';\n  title.textContent = `${card.ability.name}`;\n  title.style.textAlign = 'center';\n  title.style.fontSize = 'smaller';\n\n  if (card.ability.name === 'Weapon') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Strategy') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Vision') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Experience') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Knowledge') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Repetition') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Trick') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Nutritious Food') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Reader') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Equipement') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Very Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Tired') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Afraid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Stupid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Unconcentrated') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Distracted') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Weak') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Genius') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Focused') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Mimicry') {\n    img.src = './assets/images/weapon.png';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  let textBody = document.createElement('div');\n  textBody.textContent = card.ability.spec.text;\n  let textFight = document.createElement('div');\n  textFight.textContent = `Fight: ${card.ability.fight}`;\n\n  body.innerHTML += textBody.outerHTML;\n  body.innerHTML += textFight.outerHTML;\n\n  card_node.innerHTML += title.outerHTML;\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.className = 'card';\n  card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n","var cards = require('./cards.js');\n\nclass Game {\n  constructor() {\n    this.level = 1;\n    this.life = 20;\n    this.hazards = cards.hazards;\n    this.activeHazard = null;\n    this.spentHazards = [];\n    this.yage = cards.age_young;\n    this.oage = cards.age_old;\n    let arr = cards.pirates;\n    this.goals = [\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n    ];\n    this.abilities = cards.start;\n    this.spent_abilities = [];\n  }\n\n  age() {\n    if (this.yage.length > 0) {\n      return 'young';\n    } else {\n      return 'old';\n    }\n  }\n\n  drawHazards() {\n    let arr = [];\n    if (this.hazards.length > 2) {\n      arr.push(\n        this.hazards.splice(\n          Math.floor(Math.random() * this.hazards.length),\n          1\n        )[0]\n      );\n      arr.push(\n        this.hazards.splice(\n          Math.floor(Math.random() * this.hazards.length),\n          1\n        )[0]\n      );\n      return [arr[0], arr[1]];\n    }\n  }\n\n  returnHazard(hazard) {\n    this.spentHazards.push(hazard);\n  }\n\n  addAbility(ability) {\n    this.abilities.push(ability);\n  }\n\n  drawAbility(num) {\n    return this.abilities.splice(0, num);\n  }\n\n  changeLife(num) {\n    this.life += num;\n  }\n\n  setHazard(hazard) {\n    this.activeHazard = hazard;\n  }\n\n  seeHazard() {\n    return this.activeHazard;\n  }\n}\n\nmodule.exports = Game;\n","const createCard = require('./createCard.js');\n\nexport const chooseHazard = (hazards, game) => {\n  const gameNode = document.querySelector('#main-game');\n  const selectionDiv = document.createElement('div');\n  selectionDiv.id = 'selection-div';\n  const confirmDiv = document.createElement('div');\n  confirmDiv.id = 'confirm-div';\n  const confirmBtn = document.createElement('div');\n  confirmBtn.id = 'confirm-btn';\n  confirmBtn.textContent = 'Confirm Selection';\n  confirmDiv.innerHTML += confirmBtn.outerHTML;\n\n  let switcher = document.createElement('img');\n  let checkbox = document.createElement('input');\n  switcher.src = './assets/images/switch.png';\n  checkbox.setAttribute('type', 'checkbox');\n  makeCard(checkbox, switcher, 1, selectionDiv, game, hazards[0]);\n  makeCard(checkbox, switcher, 2, selectionDiv, game, hazards[1]);\n\n  gameNode.innerHTML = selectionDiv.outerHTML;\n  gameNode.innerHTML += confirmDiv.outerHTML;\n  setEvents(hazards, game);\n};\n\nconst makeCard = (checkbox, switcher, num, node, game, hazard) => {\n  let card = document.createElement('div');\n  let cardBody = createCard.createHazard(hazard, game.level);\n  let aside = document.createElement('aside');\n\n  card.className = 'card-holder';\n  card.id = `hazard-side-${num}`;\n  aside.id = `card${num}-aside`;\n\n  switcher.id = `switch-${num}`;\n  checkbox.id = `checkbox-${num}`;\n  aside.innerHTML += switcher.outerHTML;\n  aside.innerHTML += checkbox.outerHTML;\n  card.innerHTML += aside.outerHTML;\n  card.innerHTML += cardBody.outerHTML;\n  node.innerHTML += card.outerHTML;\n};\n\nconst setEvents = (hazards, game) => {\n  $(`#switch-1`).data('card', hazards[0]);\n  $(`#switch-1`).data('level', game.level);\n  $(`#switch-2`).data('card', hazards[1]);\n  $(`#switch-2`).data('level', game.level);\n  document.querySelector(`#switch-1`).addEventListener('click', e => {\n    flipCard(e);\n  });\n  document.querySelector(`#checkbox-1`).addEventListener('click', e => {\n    selectCard(e);\n  });\n  document.querySelector(`#switch-2`).addEventListener('click', e => {\n    flipCard(e);\n  });\n  document.querySelector(`#checkbox-2`).addEventListener('click', e => {\n    selectCard(e);\n  });\n};\nconst flipCard = e => {\n  const check = document.querySelector(\n    `#checkbox-${e.path[0].id.split('-')[1]}`\n  ).checked;\n\n  let newCard = null;\n  const hazard = $(`#switch-${e.path[0].id.split('-')[1]}`).data('card');\n  const level = $(`#switch-${e.path[0].id.split('-')[1]}`).data('level');\n  console.log(hazard);\n  let card_node =\n    document.querySelector(`#hazard-side-${e.path[0].id.split('-')[1]}`) ||\n    document.querySelector(`#ability-side-${e.path[0].id.split('-')[1]}`);\n  $(`#hazard-side-${e.path[0].id.split('-')[1]} div`).remove();\n  $(`#ability-side-${e.path[0].id.split('-')[1]} div`).remove();\n  if (card_node.id.split('-')[0] === 'hazard') {\n    newCard = createCard.createAbility(hazard, level);\n    card_node.id = `ability-side-${e.path[0].id.split('-')[1]}`;\n  } else {\n    newCard = createCard.createHazard(hazard, level);\n    card_node.id = `hazard-side-${e.path[0].id.split('-')[1]}`;\n  }\n  card_node.innerHTML += newCard.outerHTML;\n  const switchx = document.querySelector(\n    `#switch-${e.path[0].id.split('-')[1]}`\n  );\n  $(`#switch-${e.path[0].id.split('-')[1]}`).data('card', hazard);\n  $(`#switch-${e.path[0].id.split('-')[1]}`).data('level', level);\n  if (check === true) {\n    document.querySelector(\n      `#checkbox-${e.path[0].id.split('-')[1]}`\n    ).checked = true;\n  }\n  document\n    .querySelector(`#switch-${e.path[0].id.split('-')[1]}`)\n    .addEventListener('click', e => {\n      flipCard(e);\n    });\n  document\n    .querySelector(`#checkbox-${e.path[0].id.split('-')[1]}`)\n    .addEventListener('click', e => {\n      selectCard(e);\n    });\n};\n\nconst selectCard = e => {\n  if (e.target.checked == true) {\n    let box = 1;\n    if (e.target.id.split('-')[1] == 1) {\n      box = 2;\n    }\n    $(`#game`).data('selected', e.target.id.split('-')[1]);\n    $(`#confirm-btn`).css('color', 'black');\n    $(`#confirm-btn`).css('cursor', 'pointer');\n    $(`#checkbox-${box}`).prop('checked', false);\n    $(`#checkbox-${e.target.id.split('-')[1]}`).prop('checked', true);\n    $(`#confirm-div`).off();\n    $(`#confirm-div`).on('click', 'div', e => {\n      chooseCard(e);\n    });\n  } else {\n    $(`#game`).data('selected', false);\n    $(`#confirm-btn`).css('color', '#4c4c4c');\n    $(`#confirm-btn`).css('cursor', 'not-allowed');\n    $(`#confirm-div`).off();\n  }\n};\n\nconst chooseCard = e => {\n  let other = 1;\n  if ($(`#game`).data('selected') == 1) {\n    other = 2;\n  }\n  const game = $(`#game`).data('game');\n  game.returnHazard($(`#switch-${other}`).data('card'));\n  game.setHazard($(`#switch-${$('#game').data('selected')}`).data('card'));\n};\n","export function setup(game) {\n  const hazard_aside = document.querySelector('#hazard-aside');\n  let hazard_stage = document.createElement('span');\n  hazard_stage.style.backgroundColor = 'green';\n  hazard_stage.id = 'hazard-stage';\n  hazard_aside.innerHTML += hazard_stage.outerHTML;\n  hazard_stage.style.backgroundColor = 'yellow';\n  hazard_stage.id = 'hazard-stage';\n  hazard_aside.innerHTML += hazard_stage.outerHTML;\n  hazard_stage.style.backgroundColor = 'red';\n  hazard_stage.id = 'hazard-stage';\n  hazard_aside.innerHTML += hazard_stage.outerHTML;\n\n  const life = document.querySelector('#life');\n  const age = document.querySelector('#age-aside');\n  const hazard_stages = document.querySelectorAll('#hazard-stage');\n  const stage = document.querySelector('#stage');\n  const game_node = document.querySelector('#main-game');\n\n  if (game.level === 3) {\n    stage.style.backgroundColor = 'red';\n  } else if (game.level === 2) {\n    stage.style.backgroundColor = 'yellow';\n  } else {\n    stage.style.backgroundColor = 'green';\n  }\n\n  life.textContent = `Life: ${game.life}`;\n  const age_img = document.createElement('img');\n  if (game.age() === 'young') {\n    age_img.src = './assets/images/young.png';\n    age.appendChild(age_img);\n  } else {\n    age_img.src = './assets/images/old.png';\n    age.appendChild(age_img);\n  }\n\n  hazard_stages[game.level - 1].style.border = '1px solid white';\n}\n"],"sourceRoot":""}