{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/createCard.js","webpack:///./lib/chooseHazard.js","webpack:///./lib/setup.js","webpack:///./lib/fightHazard.js","webpack:///./lib/cards.js","webpack:///./lib/game.js","webpack:///./main.js","webpack:///./lib/ability.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","createHazard","card","stage","card_node","document","createElement","img","title","body","id","textContent","hazard","style","textAlign","src","height","width","margin","draw","drawIcon","drawText","fight","fightIcon","fightText","position","borderRadius","backgroundColor","padding","innerHTML","outerHTML","className","display","flexDirection","alignItems","createAbility","header","ability","borderBottomRightRadius","borderTopLeftRadius","cost","costIcon","costText","borderBottomLeftRadius","borderTopRightRadius","text","spec","length","__webpack_exports__","chooseHazard","createCard","fightHazard","hazards","game","querySelector","gameNode","selectionDiv","confirmDiv","confirmBtn","switcher","checkbox","setAttribute","makeCard","setEvents","num","node","cardBody","level","aside","$","data","addEventListener","e","flipCard","selectCard","check","path","split","checked","newCard","remove","target","box","css","removeClass","addClass","prop","off","on","chooseCard","other","returnHazard","setHazard","setup","life","age","querySelectorAll","abilities","age_img","appendChild","fightDiv","drawDiv","hazardDiv","pushDiv","hazardCard","powers","fightDisp","totalFight","drawCnt","resolve","playerFght","green","yellow","red","drawCard","activeAbilities","slice","resolveFight","hover","this","stop","spentAbilities","targetDiv","changeLife","drawAbility","type","cursor","old_element","getElementById","new_element","cloneNode","parentNode","replaceChild","num_cards","cardsToDelete","gameDiv","modal","createModal","forEach","el","marginTop","key","getAttribute","selected","border","unmarkForDelete","markForDelete","drawHazards","delete","removeChild","color","cards","confirm","start","age_young","age_old","pirates","[object Object]","shuffle","activeHazard","spentHazards","markDelete","yage","oage","arr","goals","splice","Math","floor","random","holdAbilities","push","pop","console","log","concat","pile","test","a","j","Game","event","activateAbility","dataset","positions","temp"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","export function createHazard(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let body = document.createElement('div');\n  body.id = 'card-body';\n  title.textContent = `${card.hazard.name}`;\n  title.style.textAlign = 'center';\n\n  if (card.hazard.name === 'Explore The Wreck') {\n    img.src = './assets/images/wreck.jpg';\n  } else if (card.hazard.name === 'Wild Animals') {\n    img.src = './assets/images/tiger.jpg';\n  } else if (card.hazard.name === 'Cannibals') {\n    img.src = './assets/images/cannibals.jpg';\n  } else if (card.hazard.name === 'Explore Deep Into The Island') {\n    img.src = './assets/images/jungle.jpg';\n  } else if (card.hazard.name === 'Explore The Island') {\n    img.src = './assets/images/island.jpg';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  let draw = document.createElement('div');\n  let drawIcon = document.createElement('img');\n  let drawText = document.createElement('span');\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  draw.style.position = 'relative';\n  draw.style.borderRadius = '50%';\n  draw.style.backgroundColor = '#602403';\n  draw.style.padding = '7px 7px 2px 7px';\n  fight.style.position = 'relative';\n  fight.style.borderRadius = '50%';\n  fight.style.backgroundColor = '#602403';\n  fight.style.padding = '7px 7px 2px 7px';\n\n  drawIcon.src = './assets/images/card-draw-icon.png';\n  drawText.textContent = `${card.hazard['draw']}`;\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card.hazard[stage]}`;\n\n  draw.innerHTML += drawText.outerHTML;\n  fight.innerHTML += fightText.outerHTML;\n  draw.innerHTML += drawIcon.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  body.innerHTML += draw.outerHTML;\n  body.innerHTML += fight.outerHTML;\n\n  card_node.innerHTML += title.outerHTML;\n  if (card.hazard.name === 'Wild Animals' || card.hazard.name === 'Cannibals') {\n    card_node.innerHTML += document.createElement('br').outerHTML;\n  }\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.id = 'hazard-card';\n  card_node.className = 'card';\n  // card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n\nexport function createAbility(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let header = document.createElement('div');\n  let body = document.createElement('div');\n  header.id = 'card-header';\n  body.id = 'card-body';\n  title.textContent = `${card.ability.name}`;\n  title.style.textAlign = 'center';\n\n  if (card.ability.name === 'Weapon') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Strategy') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Vision') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Experience') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Knowledge') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Repetition') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Trick') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Nutritious Food') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Reader') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Equipement') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Very Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Tired') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Afraid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Stupid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Unconcentrated') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Distracted') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Weak') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Genius') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Focused') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Mimicry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Eat') {\n    img.src = './assets/images/weapon.png';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  // let textBody = document.createElement('div');\n  // textBody.textContent = card.ability.spec.text;\n  // let textFight = document.createElement('div');\n  // textFight.textContent = `Fight: ${card.ability.fight}`;\n  //\n  // header.innerHTML += textBody.outerHTML;\n  // header.innerHTML += textFight.outerHTML;\n\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  fight.style.position = 'relative';\n  fight.style.borderBottomRightRadius = '50%';\n  fight.style.borderTopLeftRadius = '5px';\n  fight.style.backgroundColor = '#15afb2';\n  fight.style.padding = '2px 4px 0px 0px';\n  fight.style.margin = '-2px 0 0 -2px';\n\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card.ability['fight']}`;\n  fight.innerHTML += fightText.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  header.innerHTML += fight.outerHTML;\n\n  let cost = document.createElement('div');\n  let costIcon = document.createElement('img');\n  let costText = document.createElement('span');\n\n  cost.style.position = 'relative';\n  cost.style.borderBottomLeftRadius = '50%';\n  cost.style.borderTopRightRadius = '5px';\n  cost.style.backgroundColor = '#15afb2';\n  cost.style.padding = '2px 4px 0px 0px';\n  cost.style.margin = '-2px -2px 0 0';\n\n  costIcon.src = './assets/images/cost-icon.png';\n  costText.textContent = `${card.ability['cost']}`;\n  cost.innerHTML += costText.outerHTML;\n  cost.innerHTML += costIcon.outerHTML;\n  header.innerHTML += cost.outerHTML;\n  const text = card.ability.spec.text || '...';\n  body.textContent = `${text}`;\n\n  card_node.innerHTML += title.outerHTML;\n  if (card.ability.name.length < 11) {\n    card_node.innerHTML += document.createElement('br').outerHTML;\n  }\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.innerHTML += header.outerHTML;\n\n  card_node.className = 'card';\n  card_node.id = 'ability-card';\n  // card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n","const createCard = require('./createCard.js');\nconst fightHazard = require('./fightHazard.js');\n\nexport const chooseHazard = (hazards, game) => {\n  document.querySelector('#hazard').textContent = game.hazards.length;\n  const gameNode = document.querySelector('#main-game');\n  const selectionDiv = document.createElement('div');\n  selectionDiv.id = 'selection-div';\n  const confirmDiv = document.createElement('div');\n  confirmDiv.id = 'confirm-div';\n  const confirmBtn = document.createElement('div');\n  confirmBtn.id = 'confirm-btn';\n  confirmBtn.className = 'confirm-not';\n  confirmBtn.textContent = 'Confirm Selection';\n  confirmDiv.innerHTML += confirmBtn.outerHTML;\n\n  let switcher = document.createElement('img');\n  let checkbox = document.createElement('input');\n  switcher.src = './assets/images/switch.png';\n  checkbox.setAttribute('type', 'checkbox');\n  makeCard(checkbox, switcher, 1, selectionDiv, game, hazards[0]);\n  makeCard(checkbox, switcher, 2, selectionDiv, game, hazards[1]);\n\n  gameNode.innerHTML = selectionDiv.outerHTML;\n  gameNode.innerHTML += confirmDiv.outerHTML;\n  setEvents(hazards, game);\n};\n\nconst makeCard = (checkbox, switcher, num, node, game, hazard) => {\n  let card = document.createElement('div');\n  let cardBody = createCard.createHazard(hazard, game.level);\n  let aside = document.createElement('aside');\n\n  card.className = 'card-holder';\n  card.id = `hazard-side-${num}`;\n  aside.id = `card${num}-aside`;\n\n  switcher.id = `switch-${num}`;\n  checkbox.id = `checkbox-${num}`;\n  aside.innerHTML += switcher.outerHTML;\n  aside.innerHTML += checkbox.outerHTML;\n  card.innerHTML += aside.outerHTML;\n  card.innerHTML += cardBody.outerHTML;\n  node.innerHTML += card.outerHTML;\n};\n\nconst setEvents = (hazards, game) => {\n  $(`#switch-1`).data('card', hazards[0]);\n  $(`#switch-1`).data('level', game.level);\n  $(`#switch-2`).data('card', hazards[1]);\n  $(`#switch-2`).data('level', game.level);\n  document.querySelector(`#switch-1`).addEventListener('click', e => {\n    flipCard(e);\n  });\n  document.querySelector(`#checkbox-1`).addEventListener('click', e => {\n    selectCard(e);\n  });\n  document.querySelector(`#switch-2`).addEventListener('click', e => {\n    flipCard(e);\n  });\n  document.querySelector(`#checkbox-2`).addEventListener('click', e => {\n    selectCard(e);\n  });\n};\nconst flipCard = e => {\n  const check = document.querySelector(\n    `#checkbox-${e.path[0].id.split('-')[1]}`\n  ).checked;\n\n  let newCard = null;\n  const hazard = $(`#switch-${e.path[0].id.split('-')[1]}`).data('card');\n  const level = $(`#switch-${e.path[0].id.split('-')[1]}`).data('level');\n\n  let card_node =\n    document.querySelector(`#hazard-side-${e.path[0].id.split('-')[1]}`) ||\n    document.querySelector(`#ability-side-${e.path[0].id.split('-')[1]}`);\n  $(`#hazard-side-${e.path[0].id.split('-')[1]} div`).remove();\n  $(`#ability-side-${e.path[0].id.split('-')[1]} div`).remove();\n  if (card_node.id.split('-')[0] === 'hazard') {\n    newCard = createCard.createAbility(hazard, level);\n    card_node.id = `ability-side-${e.path[0].id.split('-')[1]}`;\n  } else {\n    newCard = createCard.createHazard(hazard, level);\n    card_node.id = `hazard-side-${e.path[0].id.split('-')[1]}`;\n  }\n  card_node.innerHTML += newCard.outerHTML;\n  const switchx = document.querySelector(\n    `#switch-${e.path[0].id.split('-')[1]}`\n  );\n  $(`#switch-${e.path[0].id.split('-')[1]}`).data('card', hazard);\n  $(`#switch-${e.path[0].id.split('-')[1]}`).data('level', level);\n  if (check === true) {\n    document.querySelector(\n      `#checkbox-${e.path[0].id.split('-')[1]}`\n    ).checked = true;\n  }\n  document\n    .querySelector(`#switch-${e.path[0].id.split('-')[1]}`)\n    .addEventListener('click', e => {\n      flipCard(e);\n    });\n  document\n    .querySelector(`#checkbox-${e.path[0].id.split('-')[1]}`)\n    .addEventListener('click', e => {\n      selectCard(e);\n    });\n};\n\nconst selectCard = e => {\n  if (e.target.checked == true) {\n    let box = 1;\n    if (e.target.id.split('-')[1] == 1) {\n      box = 2;\n    }\n    $(`#game`).data('selected', e.target.id.split('-')[1]);\n    $(`#confirm-btn`).css('color', 'white');\n    $(`#confirm-btn`).removeClass('confirm-not');\n    $(`#confirm-btn`).addClass('confirm-yes');\n    $(`#confirm-btn`).css('cursor', 'pointer');\n    $(`#checkbox-${box}`).prop('checked', false);\n    $(`#checkbox-${e.target.id.split('-')[1]}`).prop('checked', true);\n    $(`#confirm-div`).off();\n    $(`#confirm-div`).on('click', 'div', e => {\n      chooseCard(e);\n    });\n  } else {\n    $(`#game`).data('selected', false);\n    $(`#confirm-btn`).css('color', '#c4c4c4');\n    $(`#confirm-btn`).removeClass('confirm-yes');\n    $(`#confirm-btn`).addClass('confirm-not');\n    $(`#confirm-btn`).css('cursor', 'not-allowed');\n    $(`#confirm-div`).off();\n  }\n};\n\nconst chooseCard = e => {\n  let other = 1;\n  if ($(`#game`).data('selected') == 1) {\n    other = 2;\n  }\n  const game = $(`#game`).data('game');\n  game.returnHazard($(`#switch-${other}`).data('card'));\n  game.setHazard($(`#switch-${$('#game').data('selected')}`).data('card'));\n  fightHazard.fightHazard(\n    $(`#switch-${$('#game').data('selected')}`).data('card'),\n    game\n  );\n};\n","export function setup(game) {\n  const life = document.querySelector('#life');\n  const age = document.querySelector('#age-aside');\n  const hazard_stages = document.querySelectorAll('#hazard-stage');\n  const stage = document.querySelector('#stage');\n  const game_node = document.querySelector('#main-game');\n  document.querySelector('#abilities').textContent = game.abilities.length;\n\n  if (game.level === 3) {\n    $('#stage').removeClass('yellow');\n    $('#stage').addClass('red');\n  } else if (game.level === 2) {\n    $('#stage').removeClass('green');\n    $('#stage').addClass('yellow');\n  } else {\n    $('#stage').addClass('green');\n  }\n\n  life.textContent = `Life: ${game.life}`;\n  const age_img = document.createElement('img');\n  if (game.age() === 'young') {\n    age_img.src = './assets/images/young.png';\n    age.appendChild(age_img);\n  } else {\n    age_img.src = './assets/images/old.png';\n    age.appendChild(age_img);\n  }\n}\n","const createCard = require('./createCard.js');\nconst chooseHazard = require('./chooseHazard.js');\nconst ability = require('./ability.js');\n\nexport const fightHazard = (hazard, game) => {\n  const gameNode = document.querySelector('#main-game');\n  const fightDiv = document.createElement('div');\n  fightDiv.id = 'fight-div';\n  const drawDiv = document.createElement('div');\n  drawDiv.id = 'draw-div';\n  const hazardDiv = document.createElement('div');\n  hazardDiv.id = 'hazard-div';\n  const pushDiv = document.createElement('div');\n  pushDiv.id = 'push-div';\n\n  const hazardCard = createCard.createHazard(hazard, game.level);\n  hazardDiv.innerHTML += hazardCard.outerHTML;\n\n  const powers = document.createElement('div');\n  powers.id = 'powers-disp';\n  hazardDiv.innerHTML += powers.outerHTML;\n\n  const fightDisp = document.createElement('div');\n  fightDisp.id = 'fight-disp';\n\n  const totalFight = document.createElement('div');\n  totalFight.id = 'total-fight';\n  totalFight.textContent = `Total Fight: 0`;\n  const drawCnt = document.createElement('div');\n  drawCnt.id = 'draw-cnt';\n  drawCnt.textContent = `Free draws: ${hazard.hazard.draw}`;\n  const resolve = document.createElement('div');\n  resolve.textContent = 'Resolve Fight';\n  resolve.id = 'resolve-fight';\n  fightDisp.innerHTML += totalFight.outerHTML;\n  fightDisp.innerHTML += drawCnt.outerHTML;\n  fightDisp.innerHTML += resolve.outerHTML;\n  hazardDiv.innerHTML += fightDisp.outerHTML;\n\n  game.playerFght = 0;\n  $('#game').data('drawCnt', hazard.hazard.draw);\n\n  if (game.level === 1) {\n    $('#game').data('drawFght', hazard.hazard.green);\n  } else if (game.level === 2) {\n    $('#game').data('drawFght', hazard.hazard.yellow);\n  } else {\n    $('#game').data('drawFght', hazard.hazard.red);\n  }\n\n  fightDiv.innerHTML += drawDiv.outerHTML;\n  fightDiv.innerHTML += hazardDiv.outerHTML;\n  fightDiv.innerHTML += pushDiv.outerHTML;\n  gameNode.innerHTML = fightDiv.outerHTML;\n  setEvents(game);\n};\n\nconst setEvents = game => {\n  document.querySelector(`#abilities`).addEventListener('click', e => {\n    drawCard(e);\n  });\n  document.querySelector(`#resolve-fight`).addEventListener('click', e => {\n    $('#game').data('active', game.activeAbilities.slice(0));\n    resolveFight(e);\n  });\n  $('#abilities').hover(\n    function() {\n      $(this).css('border', '2px solid #4a82db');\n    },\n    function() {\n      $(this).css('border', 'none');\n    }\n  );\n};\n\nconst drawCard = e => {\n  const game = $('#game').data('game');\n  if (\n    game.stop !== 'stop' &&\n    (game.abilities.length > 0 || game.spentAbilities.length > 0)\n  ) {\n    let targetDiv = document.querySelector('#draw-div');\n    const life = document.querySelector('#life');\n    if ($('#game').data('drawCnt') <= 0) {\n      game.changeLife(-1);\n      life.textContent = `Life: ${game.life}`;\n      targetDiv = document.querySelector('#push-div');\n    }\n    const newCard = document.createElement('div');\n    const draw = game.drawAbility();\n    document.querySelector('#abilities').textContent = game.abilities.length;\n    if (draw.ability.spec.type === 'life') {\n      game.changeLife(draw.ability.spec.value);\n      life.textContent = `Life: ${game.life}`;\n    } else if (draw.ability.spec.type === 'card') {\n      $('#game').data(\n        'drawCnt',\n        $('#game').data('drawCnt') + draw.ability.spec.value\n      );\n    } else if (draw.ability.spec.type === 'stop') {\n      if ($('#game').data('drawCnt') > 0) {\n        $('#game').data('drawCnt', 1);\n      } else {\n        game.stop = 'stop';\n      }\n    }\n\n    // &&\n    // draw.ability.spec.type !== 'draw' &&\n    // draw.ability.spec.type !== 'life'\n\n    // if (draw.ability.spec !== false) {\n    //   game.powers.push(draw);\n    //   const power_disp = document.querySelector('#powers-disp');\n    //   const powers = document.querySelectorAll('#powers-disp > *');\n    //   let test = false;\n    //   if (powers !== null) {\n    //     console.log(powers);\n    //     powers.forEach((power, i) => {\n    //       if (power.dataset.type === draw.ability.spec.type) {\n    //         test = i + 1;\n    //       }\n    //     });\n    //   }\n    //   if (test == false) {\n    //     const power = document.createElement('div');\n    //     power.id = draw.ability.spec.type + '-power';\n    //     power.dataset.type = draw.ability.spec.type;\n    //     power.dataset.positions = 1;\n    //     const title = document.createElement('div');\n    //     title.id = 'power-title';\n    //     title.textContent = draw.ability.spec.type;\n    //     power.innerHTML += title.outerHTML;\n    //     const box = document.createElement('div');\n    //     const gemBox = document.createElement('div');\n    //     gemBox.id = 'power-box-gem';\n    //     gemBox.dataset.value = draw.ability.spec.type;\n    //     gemBox.dataset.pos = 1;\n    //     gemBox.textContent = draw.ability.spec.value;\n    //     power.innerHTML += gemBox.outerHTML;\n    //     box.id = 'power-box';\n    //     box.textContent = '';\n    //     power.innerHTML += box.outerHTML;\n    //     power.innerHTML += box.outerHTML;\n    //     power_disp.innerHTML += power.outerHTML;\n    //\n    //     document\n    //       .querySelector(`#${draw.ability.spec.type + '-power'}`)\n    //       .querySelector('#power-box-gem')\n    //       .addEventListener('click', e => {\n    //         ability.activateAbility(e);\n    //       });\n    //   } else {\n    //     const power = document.querySelector(\n    //       '#' + draw.ability.spec.type + '-power'\n    //     );\n    //     console.log(power);\n    //     console.log(draw.ability.spec.type);\n    //     power.dataset.positions += 1;\n    //     const key = power.dataset.positions;\n    //     const box = power.querySelector('#power-box');\n    //     box.id = 'power-box-gem';\n    //     box.dataset.value = draw.ability.spec.type;\n    //     box.dataset.pos = key;\n    //     box.textContent = draw.ability.spec.value;\n    //\n    //     document\n    //       .querySelector(`#${draw.ability.spec.type + '-power'}`)\n    //       .querySelectorAll('#power-box-gem')\n    //       [key - 1].addEventListener('click', e => {\n    //         ability.activateAbility(e);\n    //       });\n    //   }\n    // }\n    newCard.innerHTML = createCard.createAbility(draw).outerHTML;\n    game.playerFght = game.playerFght + draw.ability.fight;\n    $('#total-fight').text(`Total Fight: ${game.playerFght}`);\n    newCard.style.margin = '-75px 0';\n    targetDiv.innerHTML += newCard.outerHTML;\n    $('#game').data('drawCnt', $('#game').data('drawCnt') - 1);\n    if ($('#game').data('drawCnt') > 0) {\n      $('#draw-cnt').text(`Free draws: ${$('#game').data('drawCnt')}`);\n    } else {\n      $('#draw-cnt').text('Free draws: 0');\n    }\n  } else {\n    document.querySelector('#abilities').style.cursor = 'not-allowed';\n  }\n};\n\nconst resolveFight = e => {\n  const game = $('#game').data('game');\n  var old_element = document.getElementById('abilities');\n  var new_element = old_element.cloneNode(true);\n  old_element.parentNode.replaceChild(new_element, old_element);\n  let playerFght = $('#game').data('playerFght');\n  if (\n    playerFght < $('#game').data('drawFght') &&\n    game.activeAbilities.length > 0\n  ) {\n    let num_cards = $('#game').data('drawFght') - playerFght;\n    if (game.activeAbilities.length < num_cards) {\n      num_cards = game.activeAbilities.length;\n    }\n    game.changeLife(-1 * num_cards);\n    game.cardsToDelete = num_cards;\n    $('#life').text(`Life: ${game.life}`);\n    const gameDiv = document.querySelector('#game');\n    const modal = createModal(game);\n    gameDiv.innerHTML += modal.outerHTML;\n    document.querySelectorAll('.card-delete #card-header').forEach(el => {\n      el.style.width = '163px';\n      el.style.marginTop = '2px';\n    });\n    document.querySelectorAll('.card-delete').forEach(el => {\n      el.addEventListener('click', e => {\n        const key = e.path[e.path.length - 11].getAttribute('key');\n        const selected = e.path[e.path.length - 11].getAttribute('selected');\n        const game = $('#game').data('game');\n        if (selected === 'true') {\n          game.cardsToDelete += 1;\n          e.path[e.path.length - 11].setAttribute('selected', 'false');\n          e.path[e.path.length - 11].style.border =\n            '2px solid rgb(0, 0, 0, 0.1)';\n          game.unmarkForDelete($('#game').data('active')[key]);\n        } else if (selected === 'false' && game.cardsToDelete > 0) {\n          game.cardsToDelete -= 1;\n          e.path[e.path.length - 11].setAttribute('selected', 'true');\n          e.path[e.path.length - 11].style.border = '2px solid #4a82db';\n          game.markForDelete($('#game').data('active')[key]);\n        }\n        if (game.cardsToDelete === 0) {\n          document\n            .querySelector('#modal-confirm')\n            .addEventListener('click', e => {\n              const game = $('#game').data('game');\n              const hazards = game.drawHazards();\n              if (game.level === 3) {\n                $('#stage').removeClass('yellow');\n                $('#stage').addClass('red');\n              } else if (game.level === 2) {\n                $('#stage').removeClass('green');\n                $('#stage').addClass('yellow');\n              }\n              game.delete();\n              const modal = document.querySelector('#modal');\n              const pn = modal.parentNode;\n              pn.removeChild(modal);\n              chooseHazard.chooseHazard(hazards, game);\n            });\n          document.querySelector('#modal-confirm').style.color = 'black';\n          document.querySelector('#modal-confirm').style.cursor = 'pointer';\n        } else {\n          var old_element = document.getElementById('modal-confirm');\n          var new_element = old_element.cloneNode(true);\n          old_element.parentNode.replaceChild(new_element, old_element);\n          document.getElementById('modal-confirm').style.color = '#4c4c4c';\n          document.getElementById('modal-confirm').style.cursor = 'not-allowed';\n        }\n      });\n    });\n    document.querySelector('#modal-confirm').addEventListener('click', e => {\n      const game = $('#game').data('game');\n      const hazards = game.drawHazards();\n      if (game.level === 3) {\n        $('#stage').removeClass('yellow');\n        $('#stage').addClass('red');\n      } else if (game.level === 2) {\n        $('#stage').removeClass('green');\n        $('#stage').addClass('yellow');\n      }\n      game.delete();\n      const modal = document.querySelector('#modal');\n      modal.parentNode.removeChild(modal);\n      chooseHazard.chooseHazard(hazards, game);\n    });\n  } else {\n    if (playerFght < $('#game').data('drawFght')) {\n      game.changeLife(playerFght - $('#game').data('drawFght'));\n    }\n    const hazards = game.drawHazards();\n    if (game.level === 3) {\n      $('#stage').removeClass('yellow');\n      $('#stage').addClass('red');\n    } else if (game.level === 2) {\n      $('#stage').removeClass('green');\n      $('#stage').addClass('yellow');\n    }\n    game.delete();\n    chooseHazard.chooseHazard(hazards, game);\n  }\n};\n\nconst createModal = game => {\n  const modal = document.createElement('div');\n  modal.id = 'modal';\n\n  const title = document.createElement('h4');\n  let dfight = $('#game').data('drawFght');\n  let pfight = $('#game').data('playerFght');\n\n  title.textContent = `Please select ${game.cardsToDelete} cards to remove`;\n  modal.innerHTML += title.outerHTML;\n\n  let cards = document.createElement('div');\n  cards.id = 'card-selection';\n  let newCard = null;\n  game.activeAbilities.forEach((el, i) => {\n    if (i % 7 === 6) {\n      modal.innerHTML += cards.outerHTML;\n      cards = document.createElement('div');\n      cards.id = 'card-selection';\n    }\n    newCard = createCard.createAbility(el, game.level);\n    newCard.className = 'card-delete';\n    newCard.setAttribute('key', i);\n    newCard.setAttribute('selected', 'false');\n    cards.innerHTML += newCard.outerHTML;\n  });\n  modal.innerHTML += cards.outerHTML;\n\n  const confirm = document.createElement('div');\n  confirm.id = 'modal-confirm';\n  confirm.textContent = 'Confirm Selection';\n  modal.innerHTML += confirm.outerHTML;\n\n  return modal;\n};\n","const start = [\n  { ability: { fight: 2, name: 'Genius', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  {\n    ability: {\n      fight: 0,\n      name: 'Eat',\n      cost: 1,\n      spec: { type: 'life', value: 2, text: 'Heal 2 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n];\n\nconst age_young = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -1, text: 'Lose 1 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  // { ability: { fight: -3, name: 'very stupid', cost: 2, spec: false } },\n  {\n    ability: {\n      fight: -1,\n      name: 'Afraid',\n      cost: 2,\n      spec: {\n        type: 'negate top card',\n        value: false,\n        text: 'Strongest cards fight is now 0',\n      },\n    },\n  },\n  {\n    ability: {\n      fight: -1,\n      name: 'Tired',\n      cost: 2,\n      spec: { type: 'stop', value: false, text: 'Stop turn' },\n    },\n  },\n];\n\nconst age_old = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Very Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -2, text: 'Lose 2 life' },\n    },\n  },\n  { ability: { fight: -5, name: 'self homicidal', cost: 2, spec: false } },\n  { ability: { fight: -4, name: 'idiot', cost: 2, spec: false } },\n];\n\nconst hazards = [\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Strategy',\n      cost: 1,\n      spec: {\n        type: 'exchange',\n        value: 1,\n        text: 'Exchange 1 card',\n      },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3, text: 'Sort 3 cards' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'Draw 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 1, text: 'Exchange 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3, text: 'Sort 3 cards' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'Draw 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: {\n        type: 'below pile',\n        value: 1,\n        text: 'Move 1 card to bottom of pile',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Mimicry',\n      cost: 1,\n      spec: {\n        type: 'copy',\n        value: 1,\n        text: 'Copy ability of another card',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'Draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'Draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Mimicry',\n      cost: 1,\n      spec: {\n        type: 'copy',\n        value: 1,\n        text: 'Copy the ability of another card',\n      },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: {\n        type: 'below pile',\n        value: 1,\n        text: 'Move 1 card to bottom of pile',\n      },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Reader',\n      cost: 1,\n      spec: { type: 'step', value: -1, text: 'Reduce hazard level by 1' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n];\n\nconst pirates = [\n  { draw: 6, fight: 20, spec: false },\n  { draw: 7, fight: 25, spec: false },\n  { draw: 8, fight: 30, spec: false },\n  { draw: 9, fight: 35, spec: false },\n  { draw: 10, fight: 40, spec: false },\n  { draw: 0, fight: 0, spec: 'hazard' },\n  { draw: 5, fight: 0, spec: 'double' },\n  { draw: 7, fight: 16, spec: 'double life' },\n  { draw: 9, fight: 22, spec: 'half' },\n  { draw: 10, fight: 52, spec: 'point' },\n];\n\nmodule.exports = {\n  start,\n  age_young,\n  age_old,\n  hazards,\n  pirates,\n};\n","var cards = require('./cards.js');\n\nclass Game {\n  constructor() {\n    this.level = 1;\n    this.life = 20;\n    this.hazards = this.shuffle(cards.hazards);\n    this.activeHazard = null;\n    this.spentHazards = [];\n    this.markDelete = [];\n    this.yage = this.shuffle(cards.age_young);\n    this.oage = this.shuffle(cards.age_old);\n    let arr = cards.pirates;\n    this.goals = [\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n    ];\n    this.abilities = this.shuffle(cards.start);\n    this.activeAbilities = [];\n    this.holdAbilities = [];\n    this.spentAbilities = [];\n    this.cardsToDelete = 0;\n    this.powers = [];\n  }\n\n  age() {\n    if (this.yage.length > 0) {\n      return 'young';\n    } else {\n      return 'old';\n    }\n  }\n\n  drawHazards() {\n    let arr = [];\n    if (this.hazards.length > 1) {\n      arr.push(this.hazards.pop());\n      arr.push(this.hazards.pop());\n      return [arr[0], arr[1]];\n    } else {\n      console.log(this.hazards);\n      this.hazards = this.shuffle(this.hazards.concat(this.spentHazards));\n      console.log(this.hazards);\n      this.level += 1;\n      arr.push(this.hazards.pop());\n      arr.push(this.hazards.pop());\n      console.log(arr);\n      return [arr[0], arr[1]];\n    }\n  }\n\n  returnHazard(hazard) {\n    this.spentHazards.push(hazard);\n  }\n\n  addToTop(abilities) {\n    abilities.concat(this.pile);\n  }\n  addToBottom(abilities) {\n    this.pile.concat(abilities);\n  }\n\n  drawAbility() {\n    if (this.abilities.length === 0) {\n      this.abilities = this.spentAbilities;\n      if (this.yage.length > 0) {\n        this.abilities.push(this.yage.pop());\n      } else {\n        this.abilities.push(this.oage.pop());\n      }\n      this.abilities = this.shuffle(this.abilities);\n    }\n    const draw = this.abilities.pop();\n    this.activeAbilities.push(draw);\n    return draw;\n  }\n\n  changeLife(num) {\n    this.life += num;\n  }\n\n  setHazard(hazard) {\n    this.activeHazard = hazard;\n  }\n\n  setHold() {\n    this.holdAbilities = this.activeAbilities;\n  }\n\n  markForDelete(hazard) {\n    let test = true;\n    this.activeAbilities.forEach((el, i) => {\n      if (el === hazard && test) {\n        this.markDelete.push(this.activeAbilities.splice(i, 1)[0]);\n        test = false;\n      }\n    });\n  }\n\n  unmarkForDelete(hazard) {\n    const arr = [];\n    let test = false;\n    arr.forEach(el => {\n      if (el !== hazard && test) {\n        arr.push(hazard);\n      } else {\n        this.activeAbilities.push(hazard);\n        test = true;\n      }\n    });\n    this.markDelete = arr;\n  }\n\n  delete() {\n    this.spentAbilities = this.spentAbilities.concat(this.activeAbilities);\n    this.markDelete = [];\n    this.activeAbilities = [];\n    this.powers = [];\n    this.stop = '';\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\nmodule.exports = Game;\n","const Game = require('./lib/game.js');\nconst createCard = require('./lib/createCard.js');\nconst chooseHazard = require('./lib/chooseHazard.js');\nconst setup = require('./lib/setup.js');\n\ndocument.addEventListener('DOMContentLoaded', function(event) {\n  const game = new Game();\n  $('#game').data('game', game);\n  setup.setup(game);\n  const hazards = game.drawHazards();\n  chooseHazard.chooseHazard(hazards, game);\n});\n","const createCard = require('./createCard.js');\n\nexport const activateAbility = e => {\n  console.log(e.path[e.path.length - 13].dataset.positions);\n  console.log(e.target.dataset.value);\n  console.log(e.target.textContent);\n  const game = $('#game').data('game');\n  const modal = document.createElement('div');\n  modal.id = 'modal';\n  if (e.target.dataset.value === 'destroy') {\n  } else if (e.target.dataset.value === 'copy') {\n  } else if (e.target.dataset.value === 'below pile') {\n  } else if (e.target.dataset.value === 'step') {\n    const temp = game.activeHazard;\n    if (game.level === 2) {\n      temp.hazard.yellow = temp.hazard.green;\n    } else if (\n      game.level === 3 &&\n      game.activeHazard.hazard.yellow !== game.activeHazard.hazard.red\n    ) {\n      temp.hazard.red = temp.hazard.yellow;\n    } else {\n      temp.hazard.red = temp.hazard.yellow;\n    }\n    game.activeHazard = temp;\n  } else if (e.target.dataset.value === 'exchange') {\n  } else if (e.target.dataset.value === 'double') {\n    const title = document.createElement('div');\n    title.textContent = `Select a card to double fighting strength`;\n    modal.innerHTML += title.outerHTML;\n    const cards = document.createElement('div');\n    cards.id = 'power-active-div';\n    let card = null;\n    game.activeAbilities.forEach(ability => {\n      card = createCard.createAbility(ability, game.level);\n      card.dataset.card = ability;\n      cards.innerHTML += card.outerHTML;\n    });\n    modal.innerHTML += cards.outerHTML;\n    const confirm = document.createElement('div');\n    confirm.id = 'confirm-btn';\n    confirm.textContent = 'confirm';\n    modal.innerHTML += confirm.outerHTML;\n  } else if (e.target.dataset.value === 'sort') {\n  }\n};\n"],"sourceRoot":""}