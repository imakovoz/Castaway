{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/cards.js","webpack:///./main.js","webpack:///./lib/createCard.js","webpack:///./lib/game.js","webpack:///./lib/chooseHazard.js","webpack:///./lib/setup.js","webpack:///./lib/fightHazard.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","start","ability","fight","cost","spec","type","text","age_young","age_old","hazards","hazard","draw","green","yellow","red","pirates","Game","chooseHazard","setup","document","addEventListener","event","game","$","data","drawHazards","createHazard","card","stage","card_node","createElement","img","title","body","id","textContent","style","textAlign","fontSize","src","height","width","margin","drawIcon","drawText","fightIcon","fightText","position","borderRadius","backgroundColor","padding","innerHTML","outerHTML","className","display","flexDirection","alignItems","createAbility","textBody","textFight","cards","[object Object]","this","level","life","activeHazard","spentHazards","markDelete","yage","oage","arr","goals","splice","Math","floor","random","length","abilities","activeAbilities","holdAbilities","spentAbilities","cardsToDelete","push","concat","num","test","forEach","el","console","log","__webpack_exports__","createCard","fightHazard","gameNode","querySelector","selectionDiv","confirmDiv","confirmBtn","switcher","checkbox","setAttribute","makeCard","setEvents","node","cardBody","aside","e","flipCard","selectCard","check","path","split","checked","newCard","remove","target","box","css","prop","off","on","chooseCard","other","returnHazard","setHazard","age","querySelectorAll","age_img","appendChild","fightDiv","drawDiv","hazardDiv","pushDiv","hazardCard","fightDisp","totalFight","resolve","drawCard","slice","resolveFight","hover","targetDiv","changeLife","drawAbility","old_element","getElementById","new_element","cloneNode","parentNode","replaceChild","num_cards","gameDiv","modal","createModal","key","getAttribute","selected","border","unmarkForDelete","markForDelete","delete","removeChild","color","cursor","confirm"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const start = [\n  { ability: { fight: 2, name: 'Genius', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  {\n    ability: {\n      fight: 0,\n      name: 'Eat',\n      cost: 1,\n      spec: { type: 'life', value: 2, text: 'Heal 2 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n];\n\nconst age_young = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -1, text: 'Lose 1 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  // { ability: { fight: -3, name: 'very stupid', cost: 2, spec: false } },\n  {\n    ability: {\n      fight: -1,\n      name: 'Afraid',\n      cost: 2,\n      spec: {\n        type: 'negate top card',\n        value: false,\n        text: 'Strongest cards fight is now 0',\n      },\n    },\n  },\n  {\n    ability: {\n      fight: -1,\n      name: 'Tired',\n      cost: 2,\n      spec: { type: 'stop', value: false, text: 'Stop turn' },\n    },\n  },\n];\n\nconst age_old = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Very Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -2, text: 'Lose 2 life' },\n    },\n  },\n  { ability: { fight: -5, name: 'self homicidal', cost: 2, spec: false } },\n  { ability: { fight: -4, name: 'idiot', cost: 2, spec: false } },\n];\n\nconst hazards = [\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Strategy',\n      cost: 1,\n      spec: {\n        type: 'exchange',\n        value: 1,\n        text: 'Exchange 1 card',\n      },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3, text: 'Sort 3 cards' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'draw 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 1, text: 'Exchange 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3 },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'draw 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: { type: 'below pile', value: 1 },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Mimicry',\n      cost: 1,\n      spec: {\n        type: 'copy',\n        value: 1,\n        text: 'Copy the ability of another card',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Mimicry',\n      cost: 1,\n      spec: {\n        type: 'copy',\n        value: 1,\n        text: 'Copy the ability of another card',\n      },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: {\n        type: 'below pile',\n        value: 1,\n        text: 'You may place 1 card at the bottom of your pile',\n      },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Reader',\n      cost: 1,\n      spec: { type: 'step', value: -1, text: 'Reduce hazard level by 1' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n];\n\nconst pirates = [\n  { draw: 6, fight: 20, spec: false },\n  { draw: 7, fight: 25, spec: false },\n  { draw: 8, fight: 30, spec: false },\n  { draw: 9, fight: 35, spec: false },\n  { draw: 10, fight: 40, spec: false },\n  { draw: 0, fight: 0, spec: 'hazard' },\n  { draw: 5, fight: 0, spec: 'double' },\n  { draw: 7, fight: 16, spec: 'double life' },\n  { draw: 9, fight: 22, spec: 'half' },\n  { draw: 10, fight: 52, spec: 'point' },\n];\n\nmodule.exports = {\n  start,\n  age_young,\n  age_old,\n  hazards,\n  pirates,\n};\n","const Game = require('./lib/game.js');\nconst createCard = require('./lib/createCard.js');\nconst chooseHazard = require('./lib/chooseHazard.js');\nconst setup = require('./lib/setup.js');\n\ndocument.addEventListener('DOMContentLoaded', function(event) {\n  const game = new Game();\n  $('#game').data('game', game);\n  setup.setup(game);\n  const hazards = game.drawHazards();\n  chooseHazard.chooseHazard(hazards, game);\n});\n","export function createHazard(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let body = document.createElement('div');\n  body.id = 'card-body';\n  title.textContent = `${card.hazard.name}`;\n  title.style.textAlign = 'center';\n  title.style.fontSize = 'smaller';\n\n  if (card.hazard.name === 'Explore The Wreck') {\n    img.src = './assets/images/wreck.jpg';\n  } else if (card.hazard.name === 'Wild Animals') {\n    img.src = './assets/images/tiger.jpg';\n  } else if (card.hazard.name === 'Cannibals') {\n    img.src = './assets/images/cannibals.jpg';\n  } else if (card.hazard.name === 'Explore Deep Into The Island') {\n    img.src = './assets/images/jungle.jpg';\n  } else if (card.hazard.name === 'Explore The Island') {\n    img.src = './assets/images/island.jpg';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  let draw = document.createElement('div');\n  let drawIcon = document.createElement('img');\n  let drawText = document.createElement('span');\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  draw.style.position = 'relative';\n  draw.style.borderRadius = '50%';\n  draw.style.backgroundColor = 'blue';\n  draw.style.padding = '7px 7px 2px 7px';\n  fight.style.position = 'relative';\n  fight.style.borderRadius = '50%';\n  fight.style.backgroundColor = 'blue';\n  fight.style.padding = '7px 7px 2px 7px';\n\n  drawIcon.src = './assets/images/card-draw-icon.png';\n  drawText.textContent = `${card.hazard['draw']}`;\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card.hazard[stage]}`;\n\n  draw.innerHTML += drawText.outerHTML;\n  fight.innerHTML += fightText.outerHTML;\n  draw.innerHTML += drawIcon.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  body.innerHTML += draw.outerHTML;\n  body.innerHTML += fight.outerHTML;\n\n  card_node.innerHTML += title.outerHTML;\n  if (card.hazard.name === 'Wild Animals' || card.hazard.name === 'Cannibals') {\n    card_node.innerHTML += document.createElement('br').outerHTML;\n  }\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.className = 'card';\n  card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n\nexport function createAbility(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let body = document.createElement('div');\n  body.id = 'card-body';\n  title.textContent = `${card.ability.name}`;\n  title.style.textAlign = 'center';\n  title.style.fontSize = 'smaller';\n\n  if (card.ability.name === 'Weapon') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Strategy') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Vision') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Experience') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Knowledge') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Repetition') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Trick') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Nutritious Food') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Reader') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Equipement') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Very Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Tired') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Afraid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Stupid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Unconcentrated') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Distracted') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Weak') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Genius') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Focused') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Mimicry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Eat') {\n    img.src = './assets/images/weapon.png';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  let textBody = document.createElement('div');\n  textBody.textContent = card.ability.spec.text;\n  let textFight = document.createElement('div');\n  textFight.textContent = `Fight: ${card.ability.fight}`;\n\n  body.innerHTML += textBody.outerHTML;\n  body.innerHTML += textFight.outerHTML;\n\n  card_node.innerHTML += title.outerHTML;\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.className = 'card';\n  card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n","var cards = require('./cards.js');\n\nclass Game {\n  constructor() {\n    this.level = 1;\n    this.life = 20;\n    this.hazards = cards.hazards;\n    this.activeHazard = null;\n    this.spentHazards = [];\n    this.markDelete = [];\n    this.yage = cards.age_young;\n    this.oage = cards.age_old;\n    let arr = cards.pirates;\n    this.goals = [\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n    ];\n    this.abilities = cards.start;\n    this.activeAbilities = [];\n    this.holdAbilities = [];\n    this.spentAbilities = [];\n    this.cardsToDelete = 0;\n  }\n\n  age() {\n    if (this.yage.length > 0) {\n      return 'young';\n    } else {\n      return 'old';\n    }\n  }\n\n  drawHazards() {\n    let arr = [];\n    if (this.hazards.length > 2) {\n      arr.push(\n        this.hazards.splice(\n          Math.floor(Math.random() * this.hazards.length),\n          1\n        )[0]\n      );\n      arr.push(\n        this.hazards.splice(\n          Math.floor(Math.random() * this.hazards.length),\n          1\n        )[0]\n      );\n      return [arr[0], arr[1]];\n    }\n  }\n\n  returnHazard(hazard) {\n    this.spentHazards.push(hazard);\n  }\n\n  addAbilities(abilities) {\n    this.abilities.concat(abilities);\n  }\n\n  drawAbility() {\n    if (this.abilities.length === 0) {\n      this.abilities = this.spentAbilities;\n      if (this.yage.length > 0) {\n        this.abilities.push(\n          this.yage.splice(Math.floor(Math.random() * this.yage.length), 1)[0]\n        );\n      } else {\n        this.abilities.push(\n          this.yage.splice(Math.floor(Math.random() * this.yage.length), 1)[0]\n        );\n      }\n    }\n    const draw = this.abilities.splice(\n      Math.floor(Math.random() * this.abilities.length),\n      1\n    )[0];\n    this.activeAbilities.push(draw);\n    return draw;\n  }\n\n  changeLife(num) {\n    this.life += num;\n  }\n\n  setHazard(hazard) {\n    this.activeHazard = hazard;\n  }\n\n  setHold() {\n    this.holdAbilities = this.activeAbilities;\n  }\n\n  markForDelete(hazard) {\n    let test = true;\n    this.activeAbilities.forEach((el, i) => {\n      if (el === hazard && test) {\n        this.markDelete.push(this.activeAbilities.splice(i, 1)[0]);\n        test = false;\n      }\n    });\n    console.log(this.markDelete);\n  }\n\n  unmarkForDelete(hazard) {\n    const arr = [];\n    let test = true;\n    arr.forEach(el => {\n      if (el !== hazard && test === false) {\n        arr.push(hazard);\n      } else {\n        this.activeAbilities.push(hazard);\n        test = false;\n      }\n    });\n    this.markDelete = arr;\n  }\n\n  delete() {\n    this.spentAbilities = this.spentAbilities.concat(this.activeAbilities);\n    this.markDelete = [];\n    this.activeAbilities = [];\n  }\n}\n\nmodule.exports = Game;\n","const createCard = require('./createCard.js');\nconst fightHazard = require('./fightHazard.js');\n\nexport const chooseHazard = (hazards, game) => {\n  const gameNode = document.querySelector('#main-game');\n  const selectionDiv = document.createElement('div');\n  selectionDiv.id = 'selection-div';\n  const confirmDiv = document.createElement('div');\n  confirmDiv.id = 'confirm-div';\n  const confirmBtn = document.createElement('div');\n  confirmBtn.id = 'confirm-btn';\n  confirmBtn.textContent = 'Confirm Selection';\n  confirmDiv.innerHTML += confirmBtn.outerHTML;\n\n  let switcher = document.createElement('img');\n  let checkbox = document.createElement('input');\n  switcher.src = './assets/images/switch.png';\n  checkbox.setAttribute('type', 'checkbox');\n  makeCard(checkbox, switcher, 1, selectionDiv, game, hazards[0]);\n  makeCard(checkbox, switcher, 2, selectionDiv, game, hazards[1]);\n\n  gameNode.innerHTML = selectionDiv.outerHTML;\n  gameNode.innerHTML += confirmDiv.outerHTML;\n  setEvents(hazards, game);\n};\n\nconst makeCard = (checkbox, switcher, num, node, game, hazard) => {\n  let card = document.createElement('div');\n  let cardBody = createCard.createHazard(hazard, game.level);\n  let aside = document.createElement('aside');\n\n  card.className = 'card-holder';\n  card.id = `hazard-side-${num}`;\n  aside.id = `card${num}-aside`;\n\n  switcher.id = `switch-${num}`;\n  checkbox.id = `checkbox-${num}`;\n  aside.innerHTML += switcher.outerHTML;\n  aside.innerHTML += checkbox.outerHTML;\n  card.innerHTML += aside.outerHTML;\n  card.innerHTML += cardBody.outerHTML;\n  node.innerHTML += card.outerHTML;\n};\n\nconst setEvents = (hazards, game) => {\n  $(`#switch-1`).data('card', hazards[0]);\n  $(`#switch-1`).data('level', game.level);\n  $(`#switch-2`).data('card', hazards[1]);\n  $(`#switch-2`).data('level', game.level);\n  document.querySelector(`#switch-1`).addEventListener('click', e => {\n    flipCard(e);\n  });\n  document.querySelector(`#checkbox-1`).addEventListener('click', e => {\n    selectCard(e);\n  });\n  document.querySelector(`#switch-2`).addEventListener('click', e => {\n    flipCard(e);\n  });\n  document.querySelector(`#checkbox-2`).addEventListener('click', e => {\n    selectCard(e);\n  });\n};\nconst flipCard = e => {\n  const check = document.querySelector(\n    `#checkbox-${e.path[0].id.split('-')[1]}`\n  ).checked;\n\n  let newCard = null;\n  const hazard = $(`#switch-${e.path[0].id.split('-')[1]}`).data('card');\n  const level = $(`#switch-${e.path[0].id.split('-')[1]}`).data('level');\n\n  let card_node =\n    document.querySelector(`#hazard-side-${e.path[0].id.split('-')[1]}`) ||\n    document.querySelector(`#ability-side-${e.path[0].id.split('-')[1]}`);\n  $(`#hazard-side-${e.path[0].id.split('-')[1]} div`).remove();\n  $(`#ability-side-${e.path[0].id.split('-')[1]} div`).remove();\n  if (card_node.id.split('-')[0] === 'hazard') {\n    newCard = createCard.createAbility(hazard, level);\n    card_node.id = `ability-side-${e.path[0].id.split('-')[1]}`;\n  } else {\n    newCard = createCard.createHazard(hazard, level);\n    card_node.id = `hazard-side-${e.path[0].id.split('-')[1]}`;\n  }\n  card_node.innerHTML += newCard.outerHTML;\n  const switchx = document.querySelector(\n    `#switch-${e.path[0].id.split('-')[1]}`\n  );\n  $(`#switch-${e.path[0].id.split('-')[1]}`).data('card', hazard);\n  $(`#switch-${e.path[0].id.split('-')[1]}`).data('level', level);\n  if (check === true) {\n    document.querySelector(\n      `#checkbox-${e.path[0].id.split('-')[1]}`\n    ).checked = true;\n  }\n  document\n    .querySelector(`#switch-${e.path[0].id.split('-')[1]}`)\n    .addEventListener('click', e => {\n      flipCard(e);\n    });\n  document\n    .querySelector(`#checkbox-${e.path[0].id.split('-')[1]}`)\n    .addEventListener('click', e => {\n      selectCard(e);\n    });\n};\n\nconst selectCard = e => {\n  if (e.target.checked == true) {\n    let box = 1;\n    if (e.target.id.split('-')[1] == 1) {\n      box = 2;\n    }\n    $(`#game`).data('selected', e.target.id.split('-')[1]);\n    $(`#confirm-btn`).css('color', 'black');\n    $(`#confirm-btn`).css('cursor', 'pointer');\n    $(`#checkbox-${box}`).prop('checked', false);\n    $(`#checkbox-${e.target.id.split('-')[1]}`).prop('checked', true);\n    $(`#confirm-div`).off();\n    $(`#confirm-div`).on('click', 'div', e => {\n      chooseCard(e);\n    });\n  } else {\n    $(`#game`).data('selected', false);\n    $(`#confirm-btn`).css('color', '#4c4c4c');\n    $(`#confirm-btn`).css('cursor', 'not-allowed');\n    $(`#confirm-div`).off();\n  }\n};\n\nconst chooseCard = e => {\n  let other = 1;\n  if ($(`#game`).data('selected') == 1) {\n    other = 2;\n  }\n  const game = $(`#game`).data('game');\n  game.returnHazard($(`#switch-${other}`).data('card'));\n  game.setHazard($(`#switch-${$('#game').data('selected')}`).data('card'));\n  fightHazard.fightHazard(\n    $(`#switch-${$('#game').data('selected')}`).data('card'),\n    game\n  );\n};\n","export function setup(game) {\n  const life = document.querySelector('#life');\n  const age = document.querySelector('#age-aside');\n  const hazard_stages = document.querySelectorAll('#hazard-stage');\n  const stage = document.querySelector('#stage');\n  const game_node = document.querySelector('#main-game');\n\n  if (game.level === 3) {\n    stage.style.backgroundColor = 'red';\n  } else if (game.level === 2) {\n    stage.style.backgroundColor = 'yellow';\n  } else {\n    stage.style.backgroundColor = 'green';\n  }\n\n  life.textContent = `Life: ${game.life}`;\n  const age_img = document.createElement('img');\n  if (game.age() === 'young') {\n    age_img.src = './assets/images/young.png';\n    age.appendChild(age_img);\n  } else {\n    age_img.src = './assets/images/old.png';\n    age.appendChild(age_img);\n  }\n}\n","const createCard = require('./createCard.js');\nconst chooseHazard = require('./chooseHazard.js');\n\nexport const fightHazard = (hazard, game) => {\n  const gameNode = document.querySelector('#main-game');\n  const fightDiv = document.createElement('div');\n  fightDiv.id = 'fight-div';\n  const drawDiv = document.createElement('div');\n  drawDiv.id = 'draw-div';\n  const hazardDiv = document.createElement('div');\n  hazardDiv.id = 'hazard-div';\n  const pushDiv = document.createElement('div');\n  pushDiv.id = 'push-div';\n\n  const hazardCard = createCard.createHazard(hazard, game.level);\n  hazardDiv.innerHTML += hazardCard.outerHTML;\n\n  const fightDisp = document.createElement('div');\n  fightDisp.id = 'fight-disp';\n  const totalFight = document.createElement('div');\n  totalFight.id = 'total-fight';\n  totalFight.textContent = 'Total Fight: 0';\n  const resolve = document.createElement('div');\n  resolve.textContent = 'Resolve Fight';\n  resolve.id = 'resolve-fight';\n  fightDisp.innerHTML += totalFight.outerHTML;\n  fightDisp.innerHTML += resolve.outerHTML;\n  hazardDiv.innerHTML += fightDisp.outerHTML;\n\n  $('#game').data('playerFght', 0);\n  $('#game').data('drawCnt', hazard.hazard.draw);\n\n  if (game.level === 1) {\n    $('#game').data('drawFght', hazard.hazard.green);\n  } else if (game.level === 2) {\n    $('#game').data('drawFght', hazard.hazard.yellow);\n  } else {\n    $('#game').data('drawFght', hazard.hazard.red);\n  }\n\n  fightDiv.innerHTML += drawDiv.outerHTML;\n  fightDiv.innerHTML += hazardDiv.outerHTML;\n  fightDiv.innerHTML += pushDiv.outerHTML;\n  gameNode.innerHTML = fightDiv.outerHTML;\n  setEvents(game);\n};\n\nconst setEvents = game => {\n  document.querySelector(`#abilities`).addEventListener('click', e => {\n    drawCard(e);\n  });\n  document.querySelector(`#resolve-fight`).addEventListener('click', e => {\n    $('#game').data('active', game.activeAbilities.slice(0));\n    resolveFight(e);\n  });\n  $('#abilities').hover(\n    function() {\n      $(this).css('border', '2px solid blue');\n    },\n    function() {\n      $(this).css('border', 'none');\n    }\n  );\n};\n\nconst drawCard = e => {\n  const game = $('#game').data('game');\n  let targetDiv = document.querySelector('#draw-div');\n  if ($('#game').data('drawCnt') <= 0) {\n    game.changeLife(-1);\n    const life = document.querySelector('#life');\n    life.textContent = `Life: ${game.life}`;\n    targetDiv = document.querySelector('#push-div');\n  }\n  const newCard = document.createElement('div');\n  const draw = game.drawAbility();\n  newCard.innerHTML = createCard.createAbility(draw).outerHTML;\n  $('#game').data(\n    'playerFght',\n    $('#game').data('playerFght') + draw.ability.fight\n  );\n  $('#total-fight').text(`Total Fight: ${$('#game').data('playerFght')}`);\n  newCard.style.margin = '-45px 0';\n  targetDiv.innerHTML += newCard.outerHTML;\n  $('#game').data('drawCnt', $('#game').data('drawCnt') - 1);\n};\n\nconst resolveFight = e => {\n  const game = $('#game').data('game');\n  var old_element = document.getElementById('abilities');\n  var new_element = old_element.cloneNode(true);\n  old_element.parentNode.replaceChild(new_element, old_element);\n  if (\n    $('#game').data('playerFght') < $('#game').data('drawFght') &&\n    game.activeAbilities.length > 0\n  ) {\n    game.changeLife(\n      $('#game').data('playerFght') - $('#game').data('drawFght')\n    );\n    let num_cards = $('#game').data('drawFght') - $('#game').data('playerFght');\n    if (game.activeAbilities.length < num_cards) {\n      num_cards = game.activeAbilities.length;\n    }\n    game.cardsToDelete = num_cards;\n    $('#life').text(`Life: ${game.life}`);\n    const gameDiv = document.querySelector('#game');\n    const modal = createModal(game);\n    gameDiv.innerHTML += modal.outerHTML;\n    document.querySelectorAll('.card-delete').forEach(el => {\n      el.addEventListener('click', e => {\n        const key = e.path[e.path.length - 10].getAttribute('key');\n        const selected = e.path[e.path.length - 10].getAttribute('selected');\n        const game = $('#game').data('game');\n        if (selected === 'true') {\n          game.cardsToDelete += 1;\n          e.path[e.path.length - 10].setAttribute('selected', 'false');\n          e.path[e.path.length - 10].style.border = '2px solid transparent';\n          game.unmarkForDelete($('#game').data('active')[key]);\n        } else if (selected === 'false' && game.cardsToDelete > 0) {\n          game.cardsToDelete -= 1;\n          e.path[e.path.length - 10].setAttribute('selected', 'true');\n          e.path[e.path.length - 10].style.border = '2px solid blue';\n          game.markForDelete($('#game').data('active')[key]);\n        }\n        if (game.cardsToDelete == 0) {\n          document\n            .querySelector('#modal-confirm')\n            .addEventListener('click', e => {\n              const game = $('#game').data('game');\n              const hazards = game.drawHazards();\n              game.delete();\n              const modal = document.querySelector('#modal');\n              modal.parentNode.removeChild(modal);\n              chooseHazard.chooseHazard(hazards, game);\n            });\n          document.querySelector('#modal-confirm').style.color = 'black';\n          document.querySelector('#modal-confirm').style.cursor = 'pointer';\n        } else {\n          var old_element = document.getElementById('modal-confirm');\n          var new_element = old_element.cloneNode(true);\n          old_element.parentNode.replaceChild(new_element, old_element);\n          document.getElementById('modal-confirm').style.color = '#4c4c4c';\n          document.getElementById('modal-confirm').style.cursor = 'not-allowed';\n        }\n      });\n    });\n    document.querySelector('#modal-confirm').addEventListener('click', e => {\n      const game = $('#game').data('game');\n      const hazards = game.drawHazards();\n      game.delete();\n      const modal = document.querySelector('#modal');\n      modal.parentNode.removeChild(modal);\n      chooseHazard.chooseHazard(hazards, game);\n    });\n  } else {\n    const hazards = game.drawHazards();\n    game.delete();\n    chooseHazard.chooseHazard(hazards, game);\n  }\n};\n\nconst createModal = game => {\n  const modal = document.createElement('div');\n  modal.id = 'modal';\n\n  const title = document.createElement('h4');\n  let dfight = $('#game').data('drawFght');\n  let pfight = $('#game').data('playerFght');\n  let num_cards = dfight - pfight;\n  if (game.activeAbilities.length < num_cards) {\n    num_cards = game.activeAbilities.length;\n  }\n  title.textContent = `Please select ${num_cards} cards to remove`;\n  modal.innerHTML += title.outerHTML;\n\n  const cards = document.createElement('div');\n  cards.id = 'card-selection';\n  let newCard = null;\n  game.activeAbilities.forEach((el, i) => {\n    newCard = createCard.createAbility(el, game.level);\n    newCard.className = 'card-delete';\n    newCard.setAttribute('key', i);\n    newCard.setAttribute('selected', 'false');\n    cards.innerHTML += newCard.outerHTML;\n  });\n  modal.innerHTML += cards.outerHTML;\n\n  const confirm = document.createElement('div');\n  confirm.id = 'modal-confirm';\n  confirm.textContent = 'Confirm Selection';\n  modal.innerHTML += confirm.outerHTML;\n\n  return modal;\n};\n"],"sourceRoot":""}