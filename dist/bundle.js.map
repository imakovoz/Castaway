{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/createCard.js","webpack:///./lib/chooseHazard.js","webpack:///./lib/setup.js","webpack:///./lib/fightHazard.js","webpack:///./lib/cards.js","webpack:///./lib/game.js","webpack:///./main.js","webpack:///./lib/ability.js","webpack:///./lib/helpModal.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","createHazard","card","stage","card_node","document","createElement","img","title","body","id","textContent","hazard","style","textAlign","src","height","width","margin","draw","drawIcon","drawText","fight","fightIcon","fightText","position","borderRadius","backgroundColor","padding","innerHTML","outerHTML","className","display","flexDirection","alignItems","createAbility","header","ability","borderBottomRightRadius","borderTopLeftRadius","cost","costIcon","costText","borderBottomLeftRadius","borderTopRightRadius","text","spec","length","createPirate","console","log","pirate","__webpack_exports__","chooseHazard","createCard","fightHazard","hazards","game","querySelector","gameNode","selectionDiv","confirmDiv","confirmBtn","switcher","checkbox","setAttribute","makeCard","setEvents","num","node","cardBody","level","aside","$","data","addEventListener","e","flipCard","selectCard","check","path","split","checked","newCard","remove","target","box","css","removeClass","addClass","prop","off","on","chooseCard","other","returnHazard","setHazard","setup","life","age","querySelectorAll","abilities","age_img","appendChild","fightDiv","drawDiv","hazardDiv","pushDiv","hazardCard","powers","fightDisp","totalFight","drawCnt","resolve","playerFght","green","yellow","red","drawCard","activeAbilities","slice","resolveFight","hover","this","stop","spentAbilities","targetDiv","changeLife","drawAbility","type","push","power_disp","test","forEach","power","dataset","positions","gemBox","pos","activateAbility","key","cursor","old_element","getElementById","new_element","cloneNode","parentNode","replaceChild","num_cards","cardsToDelete","gameDiv","modal","createModal","el","marginTop","getAttribute","selected","border","unmarkForDelete","markForDelete","drawHazards","delete","removeChild","color","cards","confirm","start","age_young","age_old","pirates","[object Object]","shuffle","activeHazard","spentHazards","markDelete","yage","oage","arr","goals","splice","Math","floor","random","holdAbilities","pop","concat","pile","a","j","Game","helpModal","event","muted","mainGame","startGame","setupModalAll","temp","holder","divEl","returnActiveAbilities","place","selector","introModal","intro","navigation","basic","returnDiv","basicModal","powersModal"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","export function createHazard(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let body = document.createElement('div');\n  body.id = 'card-body';\n  title.textContent = `${card.hazard.name}`;\n  title.style.textAlign = 'center';\n\n  if (card.hazard.name === 'Explore The Wreck') {\n    img.src = './assets/images/wreck.jpg';\n  } else if (card.hazard.name === 'Wild Animals') {\n    img.src = './assets/images/tiger.jpg';\n  } else if (card.hazard.name === 'Cannibals') {\n    img.src = './assets/images/cannibals.jpg';\n  } else if (card.hazard.name === 'Explore Deep Into The Island') {\n    img.src = './assets/images/jungle.jpg';\n  } else if (card.hazard.name === 'Explore The Island') {\n    img.src = './assets/images/island.jpg';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  let draw = document.createElement('div');\n  let drawIcon = document.createElement('img');\n  let drawText = document.createElement('span');\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  draw.style.position = 'relative';\n  draw.style.borderRadius = '50%';\n  draw.style.backgroundColor = '#602403';\n  draw.style.padding = '7px 7px 2px 7px';\n  fight.style.position = 'relative';\n  fight.style.borderRadius = '50%';\n  fight.style.backgroundColor = '#602403';\n  fight.style.padding = '7px 7px 2px 7px';\n\n  drawIcon.src = './assets/images/card-draw-icon.png';\n  drawText.textContent = `${card.hazard['draw']}`;\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card.hazard[stage]}`;\n\n  draw.innerHTML += drawText.outerHTML;\n  fight.innerHTML += fightText.outerHTML;\n  draw.innerHTML += drawIcon.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  body.innerHTML += draw.outerHTML;\n  body.innerHTML += fight.outerHTML;\n\n  card_node.innerHTML += title.outerHTML;\n  if (card.hazard.name === 'Wild Animals' || card.hazard.name === 'Cannibals') {\n    card_node.innerHTML += document.createElement('br').outerHTML;\n  }\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.id = 'hazard-card';\n  card_node.className = 'card';\n  // card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n\nexport function createAbility(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let header = document.createElement('div');\n  let body = document.createElement('div');\n  header.id = 'card-header';\n  body.id = 'card-body';\n  title.textContent = `${card.ability.name}`;\n  title.style.textAlign = 'center';\n\n  if (card.ability.name === 'Weapon') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Strategy') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Vision') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Experience') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Knowledge') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Repetition') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Trick') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Nutritious Food') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Reader') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Equipement') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Very Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Tired') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Afraid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Stupid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Unconcentrated') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Distracted') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Weak') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Genius') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Focused') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Mimicry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Eat') {\n    img.src = './assets/images/weapon.png';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  // let textBody = document.createElement('div');\n  // textBody.textContent = card.ability.spec.text;\n  // let textFight = document.createElement('div');\n  // textFight.textContent = `Fight: ${card.ability.fight}`;\n  //\n  // header.innerHTML += textBody.outerHTML;\n  // header.innerHTML += textFight.outerHTML;\n\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  fight.style.position = 'relative';\n  fight.style.borderBottomRightRadius = '50%';\n  fight.style.borderTopLeftRadius = '5px';\n  fight.style.backgroundColor = '#15afb2';\n  fight.style.padding = '2px 4px 0px 0px';\n  fight.style.margin = '-2px 0 0 -2px';\n\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card.ability['fight']}`;\n  fight.innerHTML += fightText.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  header.innerHTML += fight.outerHTML;\n\n  let cost = document.createElement('div');\n  let costIcon = document.createElement('img');\n  let costText = document.createElement('span');\n\n  cost.style.position = 'relative';\n  cost.style.borderBottomLeftRadius = '50%';\n  cost.style.borderTopRightRadius = '5px';\n  cost.style.backgroundColor = '#15afb2';\n  cost.style.padding = '2px 4px 0px 0px';\n  cost.style.margin = '-2px -2px 0 0';\n\n  costIcon.src = './assets/images/cost-icon.png';\n  costText.textContent = `${card.ability['cost']}`;\n  cost.innerHTML += costText.outerHTML;\n  cost.innerHTML += costIcon.outerHTML;\n  header.innerHTML += cost.outerHTML;\n  const text = card.ability.spec.text || '...';\n  body.textContent = `${text}`;\n\n  card_node.innerHTML += title.outerHTML;\n  if (card.ability.name.length < 11) {\n    card_node.innerHTML += document.createElement('br').outerHTML;\n  }\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.innerHTML += header.outerHTML;\n\n  card_node.className = 'card';\n  card_node.id = 'ability-card';\n  // card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n\nexport function createPirate(card) {\n  console.log(card);\n  const pirate = document.createElement('div');\n  pirate.className = 'pirate';\n  let draw = document.createElement('div');\n  let drawIcon = document.createElement('img');\n  let drawText = document.createElement('span');\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  draw.style.position = 'relative';\n  draw.style.borderRadius = '50%';\n  draw.style.backgroundColor = '#602403';\n  fight.style.position = 'relative';\n  fight.style.borderRadius = '50%';\n  fight.style.backgroundColor = '#602403';\n\n  drawIcon.src = './assets/images/card-draw-icon.png';\n  drawText.textContent = `${card[0].draw}`;\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card[0].fight}`;\n\n  draw.innerHTML += drawText.outerHTML;\n  fight.innerHTML += fightText.outerHTML;\n  draw.innerHTML += drawIcon.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  pirate.innerHTML += draw.outerHTML;\n  pirate.innerHTML += fight.outerHTML;\n  return pirate;\n}\n","const createCard = require('./createCard.js');\nconst fightHazard = require('./fightHazard.js');\n\nexport const chooseHazard = (hazards, game) => {\n  document.querySelector('#hazard').textContent = game.hazards.length;\n  const gameNode = document.querySelector('#main-game');\n  const selectionDiv = document.createElement('div');\n  selectionDiv.id = 'selection-div';\n  const confirmDiv = document.createElement('div');\n  confirmDiv.id = 'confirm-div';\n  const confirmBtn = document.createElement('div');\n  confirmBtn.id = 'confirm-btn';\n  confirmBtn.className = 'confirm-not';\n  confirmBtn.textContent = 'Confirm Selection';\n  confirmDiv.innerHTML += confirmBtn.outerHTML;\n\n  let switcher = document.createElement('img');\n  let checkbox = document.createElement('input');\n  switcher.src = './assets/images/switch.png';\n  checkbox.setAttribute('type', 'checkbox');\n  makeCard(checkbox, switcher, 1, selectionDiv, game, hazards[0]);\n  makeCard(checkbox, switcher, 2, selectionDiv, game, hazards[1]);\n\n  gameNode.innerHTML = selectionDiv.outerHTML;\n  gameNode.innerHTML += confirmDiv.outerHTML;\n  setEvents(hazards, game);\n};\n\nconst makeCard = (checkbox, switcher, num, node, game, hazard) => {\n  let card = document.createElement('div');\n  let cardBody = createCard.createHazard(hazard, game.level);\n  let aside = document.createElement('aside');\n\n  card.className = 'card-holder';\n  card.id = `hazard-side-${num}`;\n  aside.id = `card${num}-aside`;\n\n  switcher.id = `switch-${num}`;\n  checkbox.id = `checkbox-${num}`;\n  aside.innerHTML += switcher.outerHTML;\n  aside.innerHTML += checkbox.outerHTML;\n  card.innerHTML += aside.outerHTML;\n  card.innerHTML += cardBody.outerHTML;\n  node.innerHTML += card.outerHTML;\n};\n\nconst setEvents = (hazards, game) => {\n  $(`#switch-1`).data('card', hazards[0]);\n  $(`#switch-1`).data('level', game.level);\n  $(`#switch-2`).data('card', hazards[1]);\n  $(`#switch-2`).data('level', game.level);\n  document.querySelector(`#switch-1`).addEventListener('click', e => {\n    flipCard(e);\n  });\n  document.querySelector(`#checkbox-1`).addEventListener('click', e => {\n    selectCard(e);\n  });\n  document.querySelector(`#switch-2`).addEventListener('click', e => {\n    flipCard(e);\n  });\n  document.querySelector(`#checkbox-2`).addEventListener('click', e => {\n    selectCard(e);\n  });\n};\nconst flipCard = e => {\n  const check = document.querySelector(\n    `#checkbox-${e.path[0].id.split('-')[1]}`\n  ).checked;\n\n  let newCard = null;\n  const hazard = $(`#switch-${e.path[0].id.split('-')[1]}`).data('card');\n  const level = $(`#switch-${e.path[0].id.split('-')[1]}`).data('level');\n\n  let card_node =\n    document.querySelector(`#hazard-side-${e.path[0].id.split('-')[1]}`) ||\n    document.querySelector(`#ability-side-${e.path[0].id.split('-')[1]}`);\n  $(`#hazard-side-${e.path[0].id.split('-')[1]} div`).remove();\n  $(`#ability-side-${e.path[0].id.split('-')[1]} div`).remove();\n  if (card_node.id.split('-')[0] === 'hazard') {\n    newCard = createCard.createAbility(hazard, level);\n    card_node.id = `ability-side-${e.path[0].id.split('-')[1]}`;\n  } else {\n    newCard = createCard.createHazard(hazard, level);\n    card_node.id = `hazard-side-${e.path[0].id.split('-')[1]}`;\n  }\n  card_node.innerHTML += newCard.outerHTML;\n  const switchx = document.querySelector(\n    `#switch-${e.path[0].id.split('-')[1]}`\n  );\n  $(`#switch-${e.path[0].id.split('-')[1]}`).data('card', hazard);\n  $(`#switch-${e.path[0].id.split('-')[1]}`).data('level', level);\n  if (check === true) {\n    document.querySelector(\n      `#checkbox-${e.path[0].id.split('-')[1]}`\n    ).checked = true;\n  }\n  document\n    .querySelector(`#switch-${e.path[0].id.split('-')[1]}`)\n    .addEventListener('click', e => {\n      flipCard(e);\n    });\n  document\n    .querySelector(`#checkbox-${e.path[0].id.split('-')[1]}`)\n    .addEventListener('click', e => {\n      selectCard(e);\n    });\n};\n\nconst selectCard = e => {\n  if (e.target.checked == true) {\n    let box = 1;\n    if (e.target.id.split('-')[1] == 1) {\n      box = 2;\n    }\n    $(`#game`).data('selected', e.target.id.split('-')[1]);\n    $(`#confirm-btn`).css('color', 'white');\n    $(`#confirm-btn`).removeClass('confirm-not');\n    $(`#confirm-btn`).addClass('confirm-yes');\n    $(`#confirm-btn`).css('cursor', 'pointer');\n    $(`#checkbox-${box}`).prop('checked', false);\n    $(`#checkbox-${e.target.id.split('-')[1]}`).prop('checked', true);\n    $(`#confirm-div`).off();\n    $(`#confirm-div`).on('click', 'div', e => {\n      chooseCard(e);\n    });\n  } else {\n    $(`#game`).data('selected', false);\n    $(`#confirm-btn`).css('color', '#c4c4c4');\n    $(`#confirm-btn`).removeClass('confirm-yes');\n    $(`#confirm-btn`).addClass('confirm-not');\n    $(`#confirm-btn`).css('cursor', 'not-allowed');\n    $(`#confirm-div`).off();\n  }\n};\n\nconst chooseCard = e => {\n  let other = 1;\n  if ($(`#game`).data('selected') == 1) {\n    other = 2;\n  }\n  const game = $(`#game`).data('game');\n  game.returnHazard($(`#switch-${other}`).data('card'));\n  game.setHazard($(`#switch-${$('#game').data('selected')}`).data('card'));\n  fightHazard.fightHazard(\n    $(`#switch-${$('#game').data('selected')}`).data('card'),\n    game\n  );\n};\n","export function setup(game) {\n  const life = document.querySelector('#life');\n  const age = document.querySelector('#age-aside');\n  const hazard_stages = document.querySelectorAll('#hazard-stage');\n  const stage = document.querySelector('#stage');\n  const game_node = document.querySelector('#main-game');\n\n  document.querySelector('#abilities').textContent = game.abilities.length;\n\n  if (game.level === 3) {\n    $('#stage').removeClass('yellow');\n    $('#stage').addClass('red');\n  } else if (game.level === 2) {\n    $('#stage').removeClass('green');\n    $('#stage').addClass('yellow');\n  } else {\n    $('#stage').addClass('green');\n  }\n\n  life.textContent = `Life: ${game.life}`;\n  const age_img = document.createElement('img');\n  if (game.age() === 'young') {\n    age_img.src = './assets/images/young.png';\n    age.appendChild(age_img);\n  } else {\n    age_img.src = './assets/images/old.png';\n    age.appendChild(age_img);\n  }\n}\n","const createCard = require('./createCard.js');\nconst chooseHazard = require('./chooseHazard.js');\nconst ability = require('./ability.js');\n\nexport const fightHazard = (hazard, game) => {\n  const gameNode = document.querySelector('#main-game');\n  const fightDiv = document.createElement('div');\n  fightDiv.id = 'fight-div';\n  const drawDiv = document.createElement('div');\n  drawDiv.id = 'draw-div';\n  const hazardDiv = document.createElement('div');\n  hazardDiv.id = 'hazard-div';\n  const pushDiv = document.createElement('div');\n  pushDiv.id = 'push-div';\n\n  const hazardCard = createCard.createHazard(hazard, game.level);\n  hazardDiv.innerHTML += hazardCard.outerHTML;\n\n  const powers = document.createElement('div');\n  powers.id = 'powers-disp';\n  hazardDiv.innerHTML += powers.outerHTML;\n\n  const fightDisp = document.createElement('div');\n  fightDisp.id = 'fight-disp';\n\n  const totalFight = document.createElement('div');\n  totalFight.id = 'total-fight';\n  totalFight.textContent = `Total Fight: 0`;\n  const drawCnt = document.createElement('div');\n  drawCnt.id = 'draw-cnt';\n  drawCnt.textContent = `Free draws: ${hazard.hazard.draw}`;\n  const resolve = document.createElement('div');\n  resolve.textContent = 'Resolve Fight';\n  resolve.id = 'resolve-fight';\n  fightDisp.innerHTML += totalFight.outerHTML;\n  fightDisp.innerHTML += drawCnt.outerHTML;\n  fightDisp.innerHTML += resolve.outerHTML;\n  hazardDiv.innerHTML += fightDisp.outerHTML;\n\n  game.playerFght = 0;\n  $('#game').data('drawCnt', hazard.hazard.draw);\n\n  if (game.level === 1) {\n    $('#game').data('drawFght', hazard.hazard.green);\n  } else if (game.level === 2) {\n    $('#game').data('drawFght', hazard.hazard.yellow);\n  } else {\n    $('#game').data('drawFght', hazard.hazard.red);\n  }\n\n  fightDiv.innerHTML += drawDiv.outerHTML;\n  fightDiv.innerHTML += hazardDiv.outerHTML;\n  fightDiv.innerHTML += pushDiv.outerHTML;\n  gameNode.innerHTML = fightDiv.outerHTML;\n  setEvents(game);\n};\n\nconst setEvents = game => {\n  document.querySelector(`#abilities`).addEventListener('click', e => {\n    drawCard(e);\n  });\n  document.querySelector(`#resolve-fight`).addEventListener('click', e => {\n    $('#game').data('active', game.activeAbilities.slice(0));\n    resolveFight(e);\n  });\n  $('#abilities').hover(\n    function() {\n      $(this).css('border', '2px solid #4a82db');\n    },\n    function() {\n      $(this).css('border', 'none');\n    }\n  );\n};\n\nconst drawCard = e => {\n  const game = $('#game').data('game');\n  if (\n    game.stop !== 'stop' &&\n    (game.abilities.length > 0 || game.spentAbilities.length > 0)\n  ) {\n    let targetDiv = document.querySelector('#draw-div');\n    const life = document.querySelector('#life');\n    if ($('#game').data('drawCnt') <= 0) {\n      game.changeLife(-1);\n      life.textContent = `Life: ${game.life}`;\n      targetDiv = document.querySelector('#push-div');\n    }\n    const newCard = document.createElement('div');\n    const draw = game.drawAbility();\n    document.querySelector('#abilities').textContent = game.abilities.length;\n    if (draw.ability.spec.type === 'life') {\n      game.changeLife(draw.ability.spec.value);\n      life.textContent = `Life: ${game.life}`;\n    } else if (draw.ability.spec.type === 'card') {\n      $('#game').data(\n        'drawCnt',\n        $('#game').data('drawCnt') + draw.ability.spec.value\n      );\n    } else if (draw.ability.spec.type === 'stop') {\n      if ($('#game').data('drawCnt') > 0) {\n        $('#game').data('drawCnt', 1);\n      } else {\n        game.stop = 'stop';\n      }\n    }\n\n    if (\n      draw.ability.spec !== false &&\n      draw.ability.spec.type !== 'draw' &&\n      draw.ability.spec.type !== 'life'\n    ) {\n      game.powers.push(draw);\n      const power_disp = document.querySelector('#powers-disp');\n      const powers = document.querySelectorAll('#powers-disp > *');\n      let test = false;\n      if (powers !== null) {\n        powers.forEach((power, i) => {\n          if (power.dataset.type === draw.ability.spec.type) {\n            test = i + 1;\n          }\n        });\n      }\n      if (test == false) {\n        const power = document.createElement('div');\n        power.id = draw.ability.spec.type + '-power';\n        power.dataset.type = draw.ability.spec.type;\n        power.dataset.positions = 1;\n        const title = document.createElement('div');\n        title.id = 'power-title';\n        title.textContent = draw.ability.spec.type;\n        power.innerHTML += title.outerHTML;\n        const box = document.createElement('div');\n        const gemBox = document.createElement('div');\n        gemBox.id = 'power-box-gem';\n        gemBox.dataset.value = draw.ability.spec.type;\n        gemBox.dataset.pos = 1;\n        gemBox.textContent = draw.ability.spec.value;\n        power.innerHTML += gemBox.outerHTML;\n        box.id = 'power-box';\n        box.textContent = '';\n        power.innerHTML += box.outerHTML;\n        power.innerHTML += box.outerHTML;\n        power_disp.innerHTML += power.outerHTML;\n\n        document.querySelectorAll('#power-box-gem').forEach(box => {\n          box.addEventListener('click', e => {\n            ability.activateAbility(e);\n          });\n        });\n      } else {\n        const power = document.querySelector(\n          '#' + draw.ability.spec.type + '-power'\n        );\n        console.log(power);\n        console.log(draw.ability.spec.type);\n        power.dataset.positions += 1;\n        const key = power.dataset.positions;\n        const box = power.querySelector('#power-box');\n        box.id = 'power-box-gem';\n        box.dataset.value = draw.ability.spec.type;\n        box.dataset.pos = key;\n        box.textContent = draw.ability.spec.value;\n\n        document\n          .querySelector(`#${draw.ability.spec.type + '-power'}`)\n          .querySelectorAll('#power-box-gem')\n          [key - 1].addEventListener('click', e => {\n            ability.activateAbility(e);\n          });\n      }\n    }\n    newCard.innerHTML = createCard.createAbility(draw).outerHTML;\n    game.playerFght = game.playerFght + draw.ability.fight;\n    $('#total-fight').text(`Total Fight: ${game.playerFght}`);\n    newCard.style.margin = '-75px 0';\n    targetDiv.innerHTML += newCard.outerHTML;\n    $('#game').data('drawCnt', $('#game').data('drawCnt') - 1);\n    if ($('#game').data('drawCnt') > 0) {\n      $('#draw-cnt').text(`Free draws: ${$('#game').data('drawCnt')}`);\n    } else {\n      $('#draw-cnt').text('Free draws: 0');\n    }\n  } else {\n    document.querySelector('#abilities').style.cursor = 'not-allowed';\n  }\n};\n\nconst resolveFight = e => {\n  const game = $('#game').data('game');\n  var old_element = document.getElementById('abilities');\n  var new_element = old_element.cloneNode(true);\n  old_element.parentNode.replaceChild(new_element, old_element);\n  let playerFght = $('#game').data('playerFght');\n  if (\n    playerFght < $('#game').data('drawFght') &&\n    game.activeAbilities.length > 0\n  ) {\n    let num_cards = $('#game').data('drawFght') - playerFght;\n    if (game.activeAbilities.length < num_cards) {\n      num_cards = game.activeAbilities.length;\n    }\n    game.changeLife(-1 * num_cards);\n    game.cardsToDelete = num_cards;\n    $('#life').text(`Life: ${game.life}`);\n    const gameDiv = document.querySelector('#game');\n    const modal = createModal(game);\n    gameDiv.innerHTML += modal.outerHTML;\n    document.querySelectorAll('.card-delete #card-header').forEach(el => {\n      el.style.width = '163px';\n      el.style.marginTop = '2px';\n    });\n    document.querySelectorAll('.card-delete').forEach(el => {\n      el.addEventListener('click', e => {\n        const key = e.path[e.path.length - 11].getAttribute('key');\n        const selected = e.path[e.path.length - 11].getAttribute('selected');\n        const game = $('#game').data('game');\n        if (selected === 'true') {\n          game.cardsToDelete += 1;\n          e.path[e.path.length - 11].setAttribute('selected', 'false');\n          e.path[e.path.length - 11].style.border =\n            '2px solid rgb(0, 0, 0, 0.1)';\n          game.unmarkForDelete($('#game').data('active')[key]);\n        } else if (selected === 'false' && game.cardsToDelete > 0) {\n          game.cardsToDelete -= 1;\n          e.path[e.path.length - 11].setAttribute('selected', 'true');\n          e.path[e.path.length - 11].style.border = '2px solid #4a82db';\n          game.markForDelete($('#game').data('active')[key]);\n        }\n        if (game.cardsToDelete === 0) {\n          document\n            .querySelector('#modal-confirm')\n            .addEventListener('click', e => {\n              const game = $('#game').data('game');\n              const hazards = game.drawHazards();\n              if (game.level === 3) {\n                $('#stage').removeClass('yellow');\n                $('#stage').addClass('red');\n              } else if (game.level === 2) {\n                $('#stage').removeClass('green');\n                $('#stage').addClass('yellow');\n              }\n              game.delete();\n              const modal = document.querySelector('#modal');\n              const pn = modal.parentNode;\n              pn.removeChild(modal);\n              chooseHazard.chooseHazard(hazards, game);\n            });\n          document.querySelector('#modal-confirm').style.color = 'black';\n          document.querySelector('#modal-confirm').style.cursor = 'pointer';\n        } else {\n          var old_element = document.getElementById('modal-confirm');\n          var new_element = old_element.cloneNode(true);\n          old_element.parentNode.replaceChild(new_element, old_element);\n          document.getElementById('modal-confirm').style.color = '#4c4c4c';\n          document.getElementById('modal-confirm').style.cursor = 'not-allowed';\n        }\n      });\n    });\n    document.querySelector('#modal-confirm').addEventListener('click', e => {\n      const game = $('#game').data('game');\n      const hazards = game.drawHazards();\n      if (game.level === 3) {\n        $('#stage').removeClass('yellow');\n        $('#stage').addClass('red');\n      } else if (game.level === 2) {\n        $('#stage').removeClass('green');\n        $('#stage').addClass('yellow');\n      }\n      game.delete();\n      const modal = document.querySelector('#modal');\n      modal.parentNode.removeChild(modal);\n      chooseHazard.chooseHazard(hazards, game);\n    });\n  } else {\n    if (playerFght < $('#game').data('drawFght')) {\n      game.changeLife(playerFght - $('#game').data('drawFght'));\n    }\n    const hazards = game.drawHazards();\n    if (game.level === 3) {\n      $('#stage').removeClass('yellow');\n      $('#stage').addClass('red');\n    } else if (game.level === 2) {\n      $('#stage').removeClass('green');\n      $('#stage').addClass('yellow');\n    }\n    game.delete();\n    chooseHazard.chooseHazard(hazards, game);\n  }\n};\n\nconst createModal = game => {\n  const modal = document.createElement('div');\n  modal.id = 'modal';\n\n  const title = document.createElement('h4');\n  let dfight = $('#game').data('drawFght');\n  let pfight = $('#game').data('playerFght');\n\n  title.textContent = `Please select ${game.cardsToDelete} cards to remove`;\n  modal.innerHTML += title.outerHTML;\n\n  let cards = document.createElement('div');\n  cards.id = 'card-selection';\n  let newCard = null;\n  game.activeAbilities.forEach((el, i) => {\n    if (i % 7 === 6) {\n      modal.innerHTML += cards.outerHTML;\n      cards = document.createElement('div');\n      cards.id = 'card-selection';\n    }\n    newCard = createCard.createAbility(el, game.level);\n    newCard.className = 'card-delete';\n    newCard.setAttribute('key', i);\n    newCard.setAttribute('selected', 'false');\n    cards.innerHTML += newCard.outerHTML;\n  });\n  modal.innerHTML += cards.outerHTML;\n\n  const confirm = document.createElement('div');\n  confirm.id = 'modal-confirm';\n  confirm.textContent = 'Confirm Selection';\n  modal.innerHTML += confirm.outerHTML;\n\n  return modal;\n};\n","const start = [\n  {\n    ability: {\n      fight: 2,\n      name: 'Genius',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n  },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  {\n    ability: {\n      fight: 0,\n      name: 'Eat',\n      cost: 1,\n      spec: { type: 'life', value: 2, text: 'Heal 2 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n];\n\nconst age_young = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -1, text: 'Lose 1 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  // { ability: { fight: -3, name: 'very stupid', cost: 2, spec: false } },\n  {\n    ability: {\n      fight: -1,\n      name: 'Afraid',\n      cost: 2,\n      spec: {\n        type: 'negate top card',\n        value: false,\n        text: 'Strongest cards fight is now 0',\n      },\n    },\n  },\n  {\n    ability: {\n      fight: -1,\n      name: 'Tired',\n      cost: 2,\n      spec: { type: 'stop', value: false, text: 'Stop turn' },\n    },\n  },\n];\n\nconst age_old = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Very Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -2, text: 'Lose 2 life' },\n    },\n  },\n  { ability: { fight: -5, name: 'self homicidal', cost: 2, spec: false } },\n  { ability: { fight: -4, name: 'idiot', cost: 2, spec: false } },\n];\n\nconst hazards = [\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Strategy',\n      cost: 1,\n      spec: {\n        type: 'exchange',\n        value: 1,\n        text: 'Exchange 1 card',\n      },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3, text: 'Sort 3 cards' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'Draw 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 1, text: 'Exchange 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3, text: 'Sort 3 cards' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'Draw 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: {\n        type: 'below pile',\n        value: 1,\n        text: 'Move 1 card to bottom of pile',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Mimicry',\n      cost: 1,\n      spec: {\n        type: 'copy',\n        value: 1,\n        text: 'Copy ability of another card',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'Draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'Draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Mimicry',\n      cost: 1,\n      spec: {\n        type: 'copy',\n        value: 1,\n        text: 'Copy the ability of another card',\n      },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: {\n        type: 'below pile',\n        value: 1,\n        text: 'Move 1 card to bottom of pile',\n      },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Reader',\n      cost: 1,\n      spec: { type: 'step', value: -1, text: 'Reduce hazard level by 1' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n];\n\nconst pirates = [\n  { draw: 6, fight: 20, spec: false },\n  { draw: 7, fight: 25, spec: false },\n  { draw: 8, fight: 30, spec: false },\n  { draw: 9, fight: 35, spec: false },\n  { draw: 10, fight: 40, spec: false },\n  // { draw: 0, fight: 0, spec: 'hazard' },\n  // { draw: 5, fight: 0, spec: 'double' },\n  // { draw: 7, fight: 16, spec: 'double life' },\n  // { draw: 9, fight: 22, spec: 'half' },\n  // { draw: 10, fight: 52, spec: 'point' },\n];\n\nmodule.exports = {\n  start,\n  age_young,\n  age_old,\n  hazards,\n  pirates,\n};\n","var cards = require('./cards.js');\n\nclass Game {\n  constructor() {\n    this.level = 1;\n    this.life = 20;\n    this.hazards = this.shuffle(cards.hazards);\n    this.activeHazard = null;\n    this.spentHazards = [];\n    this.markDelete = [];\n    this.yage = this.shuffle(cards.age_young);\n    this.oage = this.shuffle(cards.age_old);\n    let arr = cards.pirates;\n    this.goals = [\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n    ];\n    this.abilities = this.shuffle(cards.start);\n    this.activeAbilities = [];\n    this.holdAbilities = [];\n    this.spentAbilities = [];\n    this.cardsToDelete = 0;\n    this.powers = [];\n    this.selected = [];\n  }\n\n  returnActiveAbilities() {\n    return this.activeAbilities;\n  }\n\n  age() {\n    if (this.yage.length > 0) {\n      return 'young';\n    } else {\n      return 'old';\n    }\n  }\n\n  drawHazards() {\n    let arr = [];\n    if (this.hazards.length > 1) {\n      arr.push(this.hazards.pop());\n      arr.push(this.hazards.pop());\n      return [arr[0], arr[1]];\n    } else {\n      console.log(this.hazards);\n      this.hazards = this.shuffle(this.hazards.concat(this.spentHazards));\n      console.log(this.hazards);\n      this.level += 1;\n      arr.push(this.hazards.pop());\n      arr.push(this.hazards.pop());\n      console.log(arr);\n      return [arr[0], arr[1]];\n    }\n  }\n\n  returnHazard(hazard) {\n    this.spentHazards.push(hazard);\n  }\n\n  addToTop(abilities) {\n    abilities.concat(this.pile);\n  }\n  addToBottom(abilities) {\n    this.pile.concat(abilities);\n  }\n\n  drawAbility() {\n    if (this.abilities.length === 0) {\n      this.abilities = this.spentAbilities;\n      if (this.yage.length > 0) {\n        this.abilities.push(this.yage.pop());\n      } else {\n        this.abilities.push(this.oage.pop());\n      }\n      this.abilities = this.shuffle(this.abilities);\n    }\n    const draw = this.abilities.pop();\n    this.activeAbilities.push(draw);\n    return draw;\n  }\n\n  changeLife(num) {\n    this.life += num;\n  }\n\n  setHazard(hazard) {\n    this.activeHazard = hazard;\n  }\n\n  setHold() {\n    this.holdAbilities = this.activeAbilities;\n  }\n\n  markForDelete(hazard) {\n    let test = true;\n    this.activeAbilities.forEach((el, i) => {\n      if (el === hazard && test) {\n        this.markDelete.push(this.activeAbilities.splice(i, 1)[0]);\n        test = false;\n      }\n    });\n  }\n\n  unmarkForDelete(hazard) {\n    const arr = [];\n    let test = false;\n    arr.forEach(el => {\n      if (el !== hazard && test) {\n        arr.push(hazard);\n      } else {\n        this.activeAbilities.push(hazard);\n        test = true;\n      }\n    });\n    this.markDelete = arr;\n  }\n\n  delete() {\n    this.spentAbilities = this.spentAbilities.concat(this.activeAbilities);\n    this.markDelete = [];\n    this.activeAbilities = [];\n    this.powers = [];\n    this.stop = '';\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\nmodule.exports = Game;\n","const Game = require('./lib/game.js');\nconst createCard = require('./lib/createCard.js');\nconst chooseHazard = require('./lib/chooseHazard.js');\nconst setup = require('./lib/setup.js');\nconst helpModal = require('./lib/helpModal.js');\n\ndocument.addEventListener('DOMContentLoaded', function(event) {\n  document.querySelector('audio').muted = true;\n  helpModal.helpModal();\n  const mainGame = document.querySelector('#main-game');\n  let startGame = document.createElement('h2');\n  startGame.id = 'startGame';\n  startGame.textContent = 'Start Game?';\n  mainGame.innerHTML += startGame.outerHTML;\n  document.querySelector('#help').addEventListener('click', e => {\n    helpModal.helpModal();\n  });\n  document.querySelector('#music').addEventListener('click', e => {\n    if (document.querySelector('audio').muted) {\n      document.querySelector('audio').muted = false;\n      document.querySelector('#music').className = 'musicOn';\n    } else {\n      document.querySelector('audio').muted = true;\n      document.querySelector('#music').className = 'musicOff';\n    }\n  });\n  document.querySelector('#startGame').addEventListener('click', e => {\n    const game = new Game();\n    $('#game').data('game', game);\n    setup.setup(game);\n    let pirate = createCard.createPirate(game.goals[0]);\n    document.querySelector('#goal').innerHTML = pirate.outerHTML;\n    pirate = createCard.createPirate(game.goals[1]);\n    document.querySelector('#goal').innerHTML += pirate.outerHTML;\n    const hazards = game.drawHazards();\n    chooseHazard.chooseHazard(hazards, game);\n  });\n});\n","const createCard = require('./createCard.js');\n\nexport const activateAbility = e => {\n  // console.log(e.path[e.path.length - 13].dataset.positions);\n  // console.log(e.target.dataset.value);\n  // console.log(e.target.textContent);\n  // document.querySelector('#game').dataset.selected = [];\n  // document.querySelector('#game').dataset.select_num = e.target.textContent;\n\n  const game = $('#game').data('game');\n  if (e.target.dataset.value === 'destroy') {\n    setupModalAll(`Select a card to remove from the game`, e, game);\n  } else if (e.target.dataset.value === 'copy') {\n  } else if (e.target.dataset.value === 'below pile') {\n    setupModalAll(`Select a card to move to bottom of abilities pile`, e, game);\n  } else if (e.target.dataset.value === 'step') {\n    const temp = game.activeHazard;\n    if (game.level === 2) {\n      temp.hazard.yellow = temp.hazard.green;\n    } else if (\n      game.level === 3 &&\n      game.activeHazard.hazard.yellow !== game.activeHazard.hazard.red\n    ) {\n      temp.hazard.red = temp.hazard.yellow;\n    } else {\n      temp.hazard.red = temp.hazard.yellow;\n    }\n    game.activeHazard = temp;\n  } else if (e.target.dataset.value === 'exchange') {\n    if (e.target.textContent === '1') {\n      setupModalAll(\n        `Select a card to discard and exchange for another`,\n        e,\n        game\n      );\n    } else {\n      setupModalAll(`Select up to 2 cards to discard and exchange`, e, game);\n    }\n  } else if (e.target.dataset.value === 'double') {\n    setupModalAll(`Select a card to double fighting strength`, e, game);\n  } else if (e.target.dataset.value === 'sort') {\n  }\n  document.querySelector('#confirm-btn').style.cursor = 'pointer';\n  document.querySelector('#confirm-btn').addEventListener('click', e => {\n    confirm(e);\n  });\n  const holder = e.path[e.path.length - 13].querySelectorAll('#power-box-gem');\n  if (holder.length > 1) {\n    for (let i = e.target.dataset.pos; i < holder.length; i++) {\n      if (i === holder.length - 1) {\n        holder[i].textContent = '';\n        holder[i].id = 'power-box';\n      } else {\n        holder[i].outerHTML = holder[i + 1].outerHTML;\n        holder[i].dataset.value = holder[i + 1].dataset.value;\n        holder[i].dataset.pos = holder[i + 1].dataset.pos - 1;\n      }\n    }\n  } else {\n    const divEl = document.querySelector('#' + e.path[e.path.length - 13].id);\n    divEl.parentNode.removeChild(divEl);\n  }\n};\n\nconst setupModalAll = (text, e, game) => {\n  const modal = document.createElement('div');\n  modal.id = 'modal';\n  const title = document.createElement('h4');\n  title.textContent = text;\n  modal.innerHTML += title.outerHTML;\n  const cards = document.createElement('div');\n  cards.id = 'card-selection';\n  let card = null;\n  $('#game').data('active', game.returnActiveAbilities());\n  $('#game').data('selected', []);\n  $('#game').data('total', e.target.textContent);\n  $('#game').data('type', e.target.dataset.value);\n  game.activeAbilities.forEach((ability, i) => {\n    card = createCard.createAbility(ability, game.level);\n    card.dataset.place = i;\n    cards.innerHTML += card.outerHTML;\n  });\n  modal.innerHTML += cards.outerHTML;\n  const confirm = document.createElement('div');\n  confirm.id = 'confirm-btn';\n  confirm.textContent = 'confirm';\n  modal.innerHTML += confirm.outerHTML;\n  document.querySelector('#game').innerHTML += modal.outerHTML;\n\n  document\n    .querySelector('#card-selection')\n    .querySelectorAll('.card')\n    .forEach(card => {\n      card.addEventListener('click', e => {\n        selector(e);\n      });\n    });\n};\n\nconst selector = e => {\n  const game = $('#game').data('game');\n  const position = e.path[e.path.length - 11].dataset.place;\n\n  let test = true;\n  $('#game')\n    .data('selected')\n    .forEach((el, i) => {\n      if (el === $('#game').data('active')[position] && test) {\n        test = false;\n        $('#game')\n          .data('selected')\n          .splice(i, 1);\n        e.path[e.path.length - 11].style.border = '2px solid transparent';\n        $('#game').data('total', $('#game').data('total') + 1);\n      }\n    });\n  if (test && $('#game').data('total') > 0) {\n    $('#game')\n      .data('selected')\n      .push($('#game').data('active')[position]);\n    e.path[e.path.length - 11].style.border = '2px solid blue';\n    $('#game').data('total', $('#game').data('total') - 1);\n  }\n  // console.log($('#card-selection > .card'));\n};\n\nconst confirm = e => {\n  const game = $('#game').data('game');\n  if ($('#game').data('type') === 'double') {\n    $('#game')\n      .data('selected')\n      .forEach(ability => {\n        game.playerFght += ability.ability.fight;\n      });\n    $('#total-fight').text(`Total Fight: ${game.playerFght}`);\n  } else if ($('#game').data('type') === 'destroy') {\n  }\n  const modal = document.querySelector('#modal');\n  modal.parentNode.removeChild(modal);\n  console.log($('#game').data('selected'));\n  console.log($('#game').data('type'));\n  console.log(e);\n};\n","export const helpModal = () => {\n  const gameDiv = document.querySelector('#game');\n  const modal = document.createElement('div');\n  modal.id = 'modal';\n  const helpModal = document.createElement('div');\n  helpModal.id = 'helpModal';\n  modal.innerHTML += helpModal.outerHTML;\n  gameDiv.innerHTML += modal.outerHTML;\n  introModal();\n};\n\nconst introModal = () => {\n  const helpModal = document.querySelector('#helpModal');\n  const title = document.createElement('h1');\n  title.textContent = 'Castaway';\n  helpModal.innerHTML = title.outerHTML;\n  const intro = document.createElement('div');\n  intro.innerHTML =\n    'Thanks for playing Castaway, my version of the card game Friday by Friedemann Friese!' +\n    '<br>' +\n    '<br>' +\n    ' You are Friday and spend your time on a deserted Island. After Robinson suddenly capsizes with his ship and runs ashore at your beach, your peaceful times are disturbed. To give Robinson a chance to leave the Island again, you start to teach him to improve his survival abilities against the hazards of the Island. If Robinson beats two Pirates at the end of the game, he successfully leaves the island and you will have your beloved peace back';\n  helpModal.innerHTML += intro.outerHTML;\n  const navigation = document.createElement('div');\n  navigation.id = 'helpModal-nav';\n  const basic = document.createElement('div');\n  basic.id = 'helpModal-basic';\n  basic.textContent = 'Basic Instructions';\n  const powers = document.createElement('div');\n  powers.id = 'helpModal-powers';\n  powers.textContent = 'Power Details';\n  navigation.innerHTML += basic.outerHTML;\n  navigation.innerHTML += powers.outerHTML;\n  helpModal.innerHTML += navigation.outerHTML;\n\n  const returnDiv = document.createElement('div');\n  returnDiv.id = 'helpModal-returnDiv';\n  helpModal.innerHTML += returnDiv.outerHTML;\n  document\n    .querySelector('#helpModal-returnDiv')\n    .addEventListener('click', e => {\n      const modal = document.querySelector('#modal');\n      modal.parentNode.removeChild(modal);\n    });\n\n  document.querySelector('#helpModal-basic').addEventListener('click', e => {\n    basicModal();\n  });\n\n  document.querySelector('#helpModal-powers').addEventListener('click', e => {\n    powersModal();\n  });\n};\n\nconst basicModal = () => {\n  const helpModal = document.querySelector('#helpModal');\n  const title = document.createElement('h1');\n  title.textContent = 'Basic Instructions';\n  helpModal.innerHTML = title.outerHTML;\n  const basic = document.createElement('div');\n  basic.innerHTML =\n    'While playing you are trying to guide Robinson through the game. He must win against two pirates without dying to finally leave the island again. <br><br> At the start of the game Robinson is not very cunning. In this game the pile of fighting cards (represented on the bottom right corner of the screen by the card pile) represents his abilities. By comparison Robinson‘s health is in good shape and he starts with many life points. You have two possibilities to help Robinson. You can either cleverly beat the hazards of the island (represented on the bottom left corner of the screen by the card pile) and receive additional cards to improve Robinson‘s fighting abilities, or you deliberately lose against certain hazards and pay with Robinson‘s life points to remove unwanted fighting cards from play. <br><br> During the game you will improve the quality and quantity of your fighting cards thanks to both possibilities and help Robinson with his newly gained abilities and knowledge to win against even more difficult hazards. However, life on the island is energy-sapping for Robinson so he is forced to always add aging cards (represented on the top left corner of the screen by the card pile) to his fighting cards pile. These cards are all cumbersome, so you‘d better remember to keep them in mind when planning your next steps. <br><br> It is up to you. Use Robinson‘s life points cleverly and choose the correct hazards to keep Robinson healthy and strong for the final fights against both pirates.';\n  helpModal.innerHTML += basic.outerHTML;\n  const returnDiv = document.createElement('div');\n  returnDiv.id = 'helpModal-returnDiv';\n  helpModal.innerHTML += returnDiv.outerHTML;\n  document\n    .querySelector('#helpModal-returnDiv')\n    .addEventListener('click', e => {\n      introModal();\n    });\n};\n\nconst powersModal = () => {\n  const helpModal = document.querySelector('#helpModal');\n  const title = document.createElement('h1');\n  title.textContent = 'Special Card Powers';\n  helpModal.innerHTML = title.outerHTML;\n  const basic = document.createElement('div');\n  basic.innerHTML =\n    '<strong>1x destroy:</strong> Not all fighting cards in the Robinson stack are helpful for you. With this special ability you can destroy one fighting card and remove it from the game.<br><br> <strong>1x double:</strong> You can double the fighting value of 1 of your drawn fighting cards. This ability is not cumulative!<br><br><strong>1x copy:</strong> You can copy the special ability of 1 of the other drawn fighting cards, to use it again. You can copy the same ability with several »copy« abilities. <br><br> <strong>step -1:</strong> If you fight against a hazard in the »yellow Step« or the »red Step«, you can reduce the hazard value by one Step. This special ability is useless against »green Step« hazards and pirates. <br><br> <strong>sort 3 cards:</strong> You can draw up to 3 cards one after the other from the Robinson stack and look at them. Afterwards you can discard up to 1 of these cards on the Robinson discard pile and place the remaining cards face-down back on the Robinson stack in the order you choose. <br><br> <strong>1x exchange:</strong> You place 1 of the other drawn face-up fighting cards on the Robinson discard pile (you can choose one card you already used for the special ability) and draw a new card as replacement. If the new card has a special ability, you can use it now or later during the fight.<br><br> <strong>1x below the stack:</strong> You place 1 of the other drawn drawn fighting cards back below the Robinson stack. If you choose one of the free cards from the left side of the hazard card, you can draw an exchange card.';\n  helpModal.innerHTML += basic.outerHTML;\n  const returnDiv = document.createElement('div');\n  returnDiv.id = 'helpModal-returnDiv';\n  helpModal.innerHTML += returnDiv.outerHTML;\n  document\n    .querySelector('#helpModal-returnDiv')\n    .addEventListener('click', e => {\n      introModal();\n    });\n};\n"],"sourceRoot":""}