{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/cards.js","webpack:///./main.js","webpack:///./lib/createCard.js","webpack:///./lib/game.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","start","ability","fight","cost","spec","type","text","age_young","age_old","hazards","hazard","draw","green","yellow","red","pirates","Game","createCard","document","addEventListener","event","game","hazard_aside","querySelector","hazard_stage","createElement","style","backgroundColor","id","innerHTML","outerHTML","life","age","hazard_stages","querySelectorAll","stage","game_node","level","textContent","age_img","src","appendChild","border","drawHazards","switcher","checkbox","setAttribute","card1","card1body","createHazard","aside1","className","card2","card2body","aside2","$","data","e","flip_card","newCard","path","split","console","log","card_node","remove","createAbility","card","img","title","body","textAlign","fontSize","height","width","margin","drawIcon","drawText","fightIcon","fightText","position","borderRadius","padding","display","flexDirection","alignItems","textBody","textFight","cards","[object Object]","this","spent_hazards","yage","oage","arr","goals","splice","Math","floor","random","length","abilities","spent_abilities","push"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const start = [\n  { ability: { fight: 2, name: 'Genius', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 1, name: 'Focused', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  { ability: { fight: 0, name: 'Weak', cost: 1, spec: false } },\n  {\n    ability: {\n      fight: 0,\n      name: 'eat',\n      cost: 1,\n      spec: { type: 'life', value: 2, text: 'Heal 2 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n  { ability: { fight: -1, name: 'Distracted', cost: 1, spec: false } },\n];\n\nconst age_young = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -1, text: 'Lose 1 life' },\n    },\n  },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -1, name: 'Unconcentrated', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  { ability: { fight: -2, name: 'Stupid', cost: 2, spec: false } },\n  // { ability: { fight: -3, name: 'very stupid', cost: 2, spec: false } },\n  {\n    ability: {\n      fight: -1,\n      name: 'Afraid',\n      cost: 2,\n      spec: {\n        type: 'negate top card',\n        value: false,\n        text: 'Strongest cards fight is now 0',\n      },\n    },\n  },\n  {\n    ability: {\n      fight: -1,\n      name: 'Tired',\n      cost: 2,\n      spec: { type: 'stop', value: false, text: 'Stop turn' },\n    },\n  },\n];\n\nconst age_old = [\n  {\n    ability: {\n      fight: 0,\n      name: 'Very Hungry',\n      cost: 2,\n      spec: { type: 'life', value: -2, text: 'Lose 2 life' },\n    },\n  },\n  { ability: { fight: -5, name: 'self homicidal', cost: 2, spec: false } },\n  { ability: { fight: -4, name: 'idiot', cost: 2, spec: false } },\n];\n\nconst hazards = [\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: { fight: 4, name: 'Weapon', cost: 1, spec: false },\n    hazard: { draw: 5, green: 5, yellow: 9, red: 14, name: 'Cannibals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Strategy',\n      cost: 1,\n      spec: {\n        type: 'exchange',\n        value: 1,\n        text: 'Exchange 1 card',\n      },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3, text: 'Sort 3 cards' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'draw 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 3,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 4, green: 4, yellow: 7, red: 11, name: 'Wild Animals' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 1, text: 'Exchange 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Vision',\n      cost: 1,\n      spec: { type: 'sort', value: 3 },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Experience',\n      cost: 1,\n      spec: { type: 'card', value: 1, text: 'draw 1 card' },\n    },\n    hazard: {\n      draw: 3,\n      green: 2,\n      yellow: 5,\n      red: 8,\n      name: 'Explore Deep Into The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: { fight: 2, name: 'Weapon', cost: 1, spec: false },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: { type: 'below pile', value: 1 },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Repetition',\n      cost: 1,\n      spec: {\n        type: 'double',\n        value: 1,\n        text: 'Double fighting power of 1 card',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Mimicry',\n      cost: 1,\n      spec: {\n        type: 'copy',\n        value: 1,\n        text: 'Copy the ability of another card',\n      },\n    },\n    hazard: {\n      draw: 2,\n      green: 1,\n      yellow: 3,\n      red: 6,\n      name: 'Explore The Island',\n    },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Strategy',\n      cost: 1,\n      spec: { type: 'exchange', value: 2, text: 'Exchange 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Equipement',\n      cost: 1,\n      spec: { type: 'card', value: 2, text: 'draw 2 cards' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Nutritious Food',\n      cost: 1,\n      spec: { type: 'life', value: 1, text: 'Heal 1 life' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Mimicry',\n      cost: 1,\n      spec: {\n        type: 'copy',\n        value: 1,\n        text: 'Copy the ability of another card',\n      },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Knowledge',\n      cost: 1,\n      spec: { type: 'destroy', value: 1, text: 'Destroy 1 card' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Trick',\n      cost: 1,\n      spec: {\n        type: 'below pile',\n        value: 1,\n        text: 'You may place 1 card at the bottom of your pile',\n      },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n  {\n    ability: {\n      fight: 2,\n      name: 'Reader',\n      cost: 1,\n      spec: { type: 'step', value: -1, text: 'Reduce hazard level by 1' },\n    },\n    hazard: { draw: 1, green: 0, yellow: 1, red: 3, name: 'Explore The Wreck' },\n  },\n];\n\nconst pirates = [\n  { draw: 6, fight: 20, spec: false },\n  { draw: 7, fight: 25, spec: false },\n  { draw: 8, fight: 30, spec: false },\n  { draw: 9, fight: 35, spec: false },\n  { draw: 10, fight: 40, spec: false },\n  { draw: 0, fight: 0, spec: 'hazard' },\n  { draw: 5, fight: 0, spec: 'double' },\n  { draw: 7, fight: 16, spec: 'double life' },\n  { draw: 9, fight: 22, spec: 'half' },\n  { draw: 10, fight: 52, spec: 'point' },\n];\n\nmodule.exports = {\n  start,\n  age_young,\n  age_old,\n  hazards,\n  pirates,\n};\n","const Game = require('./lib/game.js');\nconst createCard = require('./lib/createCard.js');\n\ndocument.addEventListener('DOMContentLoaded', function(event) {\n  const game = new Game();\n  const hazard_aside = document.querySelector('#hazard-aside');\n  let hazard_stage = document.createElement('span');\n  hazard_stage.style.backgroundColor = 'green';\n  hazard_stage.id = 'hazard-stage';\n  hazard_aside.innerHTML += hazard_stage.outerHTML;\n  hazard_stage.style.backgroundColor = 'yellow';\n  hazard_stage.id = 'hazard-stage';\n  hazard_aside.innerHTML += hazard_stage.outerHTML;\n  hazard_stage.style.backgroundColor = 'red';\n  hazard_stage.id = 'hazard-stage';\n  hazard_aside.innerHTML += hazard_stage.outerHTML;\n\n  const life = document.querySelector('#life');\n  const age = document.querySelector('#age-aside');\n  const hazard_stages = document.querySelectorAll('#hazard-stage');\n  const stage = document.querySelector('#stage');\n  const game_node = document.querySelector('#main-game');\n\n  if (game.level === 3) {\n    stage.style.backgroundColor = 'red';\n  } else if (game.level === 2) {\n    stage.style.backgroundColor = 'yellow';\n  } else {\n    stage.style.backgroundColor = 'green';\n  }\n\n  life.textContent = `Life: ${game.life}`;\n  const age_img = document.createElement('img');\n  if (game.age() === 'young') {\n    age_img.src = './assets/images/young.png';\n    age.appendChild(age_img);\n  } else {\n    age_img.src = './assets/images/old.png';\n    age.appendChild(age_img);\n  }\n\n  hazard_stages[game.level - 1].style.border = '1px solid white';\n\n  const hazards = game.drawHazards();\n  let switcher = document.createElement('img');\n  let checkbox = document.createElement('input');\n  switcher.src = './assets/images/switch.png';\n  checkbox.setAttribute('type', 'checkbox');\n\n  let card1 = document.createElement('div');\n  let card1body = createCard.createHazard(hazards[0], game.level);\n  let aside1 = document.createElement('aside');\n\n  card1.className = 'card-holder';\n  card1.id = 'hazard-side-1';\n  aside1.id = 'card1-aside';\n\n  switcher.id = 'switch-1';\n  aside1.innerHTML += switcher.outerHTML;\n  aside1.innerHTML += checkbox.outerHTML;\n  card1.innerHTML += aside1.outerHTML;\n  card1.innerHTML += card1body.outerHTML;\n  game_node.innerHTML += card1.outerHTML;\n\n  let card2 = document.createElement('div');\n  let card2body = createCard.createHazard(hazards[1], game.level);\n  let aside2 = document.createElement('aside');\n\n  card2.className = 'card-holder';\n  card2.id = 'hazard-side-2';\n  aside2.id = 'card2-aside';\n\n  switcher.id = 'switch-2';\n  aside2.innerHTML += switcher.outerHTML;\n  aside2.innerHTML += checkbox.outerHTML;\n  card2.innerHTML += aside2.outerHTML;\n  card2.innerHTML += card2body.outerHTML;\n  game_node.innerHTML += card2.outerHTML;\n\n  $('#switch-1').data('card', hazards[0]);\n  $('#switch-1').data('level', game.level);\n  $('#switch-2').data('card', hazards[1]);\n  $('#switch-2').data('level', game.level);\n\n  document.querySelector('#switch-1').addEventListener('click', e => {\n    flip_card(e);\n  });\n  document.querySelector('#switch-2').addEventListener('click', e => {\n    flip_card(e);\n  });\n});\nconst flip_card = e => {\n  let newCard = null;\n  const hazard = $(`#switch-${e.path[0].id.split('-')[1]}`).data('card');\n  const level = $(`#switch-${e.path[0].id.split('-')[1]}`).data('level');\n  console.log(hazard);\n  let card_node =\n    document.querySelector(`#hazard-side-${e.path[0].id.split('-')[1]}`) ||\n    document.querySelector(`#ability-side-${e.path[0].id.split('-')[1]}`);\n  $(`#hazard-side-${e.path[0].id.split('-')[1]} div`).remove();\n  $(`#ability-side-${e.path[0].id.split('-')[1]} div`).remove();\n  if (card_node.id.split('-')[0] === 'hazard') {\n    newCard = createCard.createAbility(hazard, level);\n    card_node.id = `ability-side-${e.path[0].id.split('-')[1]}`;\n  } else {\n    newCard = createCard.createHazard(hazard, level);\n    card_node.id = `hazard-side-${e.path[0].id.split('-')[1]}`;\n  }\n  card_node.innerHTML += newCard.outerHTML;\n  const switchx = document.querySelector(\n    `#switch-${e.path[0].id.split('-')[1]}`\n  );\n  $(`#switch-${e.path[0].id.split('-')[1]}`).data('card', hazard);\n  $(`#switch-${e.path[0].id.split('-')[1]}`).data('level', level);\n  document\n    .querySelector(`#switch-${e.path[0].id.split('-')[1]}`)\n    .addEventListener('click', e => {\n      flip_card(e);\n    });\n};\n","export function createHazard(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let body = document.createElement('div');\n  body.id = 'card-body';\n  title.textContent = `${card.hazard.name}`;\n  title.style.textAlign = 'center';\n  title.style.fontSize = 'smaller';\n\n  if (card.hazard.name === 'Explore The Wreck') {\n    img.src = './assets/images/wreck.jpg';\n  } else if (card.hazard.name === 'Wild Animals') {\n    img.src = './assets/images/tiger.jpg';\n  } else if (card.hazard.name === 'Cannibals') {\n    img.src = './assets/images/cannibals.jpg';\n  } else if (card.hazard.name === 'Explore Deep Into The Island') {\n    img.src = './assets/images/jungle.jpg';\n  } else if (card.hazard.name === 'Explore The Island') {\n    img.src = './assets/images/island.jpg';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  let draw = document.createElement('div');\n  let drawIcon = document.createElement('img');\n  let drawText = document.createElement('span');\n  let fight = document.createElement('div');\n  let fightIcon = document.createElement('img');\n  let fightText = document.createElement('span');\n\n  draw.style.position = 'relative';\n  draw.style.borderRadius = '50%';\n  draw.style.backgroundColor = 'blue';\n  draw.style.padding = '7px 7px 2px 7px';\n  fight.style.position = 'relative';\n  fight.style.borderRadius = '50%';\n  fight.style.backgroundColor = 'blue';\n  fight.style.padding = '7px 7px 2px 7px';\n\n  drawIcon.src = './assets/images/card-draw-icon.png';\n  drawText.textContent = `${card.hazard['draw']}`;\n  fightIcon.src = './assets/images/fight-icon.png';\n  fightText.textContent = `${card.hazard[stage]}`;\n\n  draw.innerHTML += drawText.outerHTML;\n  fight.innerHTML += fightText.outerHTML;\n  draw.innerHTML += drawIcon.outerHTML;\n  fight.innerHTML += fightIcon.outerHTML;\n  body.innerHTML += draw.outerHTML;\n  body.innerHTML += fight.outerHTML;\n\n  card_node.innerHTML += title.outerHTML;\n  if (card.hazard.name === 'Wild Animals' || card.hazard.name === 'Cannibals') {\n    card_node.innerHTML += document.createElement('br').outerHTML;\n  }\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.className = 'card';\n  card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n\nexport function createAbility(card, stage) {\n  if (stage === 1) {\n    stage = 'green';\n  } else if (stage === 2) {\n    stage = 'yellow';\n  } else {\n    stage = 'red';\n  }\n  let card_node = document.createElement('div');\n  let img = document.createElement('img');\n  let title = document.createElement('h4');\n  let body = document.createElement('div');\n  body.id = 'card-body';\n  title.textContent = `${card.ability.name}`;\n  title.style.textAlign = 'center';\n  title.style.fontSize = 'smaller';\n\n  if (card.ability.name === 'Weapon') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Strategy') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Vision') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Experience') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Knowledge') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Repetition') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Trick') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Nutritious Food') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Reader') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Equipement') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Very Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Tired') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Afraid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Stupid') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Unconcentrated') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Hungry') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Distracted') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Weak') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Genius') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Focused') {\n    img.src = './assets/images/weapon.png';\n  } else if (card.ability.name === 'Mimicry') {\n    img.src = './assets/images/weapon.png';\n  }\n  img.style.height = '30%';\n  img.style.width = '80%';\n  img.style.margin = '5px 0';\n\n  let textBody = document.createElement('div');\n  textBody.textContent = card.ability.spec.text;\n  let textFight = document.createElement('div');\n  textFight.textContent = `Fight: ${card.ability.fight}`;\n\n  body.innerHTML += textBody.outerHTML;\n  body.innerHTML += textFight.outerHTML;\n\n  card_node.innerHTML += title.outerHTML;\n  card_node.innerHTML += img.outerHTML;\n  card_node.innerHTML += body.outerHTML;\n  card_node.className = 'card';\n  card_node.style.backgroundColor = 'brown';\n  card_node.style.display = 'flex';\n  card_node.style.flexDirection = 'column';\n  card_node.style.alignItems = 'center';\n\n  return card_node;\n}\n","var cards = require('./cards.js');\n\nclass Game {\n  constructor() {\n    this.level = 1;\n    this.life = 20;\n    this.hazards = cards.hazards;\n    this.spent_hazards = [];\n    this.yage = cards.age_young;\n    this.oage = cards.age_old;\n    let arr = cards.pirates;\n    this.goals = [\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n      arr.splice(Math.floor(Math.random() * arr.length), 1),\n    ];\n    this.abilities = cards.start;\n    this.spent_abilities = [];\n  }\n\n  age() {\n    if (this.yage.length > 0) {\n      return 'young';\n    } else {\n      return 'old';\n    }\n  }\n\n  drawHazards() {\n    if (this.hazards.length > 2) {\n      this.spent_hazards.push(\n        this.hazards.splice(\n          Math.floor(Math.random() * this.hazards.length),\n          1\n        )[0]\n      );\n      this.spent_hazards.push(\n        this.hazards.splice(\n          Math.floor(Math.random() * this.hazards.length),\n          1\n        )[0]\n      );\n      return [\n        this.spent_hazards[this.spent_hazards.length - 2],\n        this.spent_hazards[this.spent_hazards.length - 1],\n      ];\n    }\n  }\n}\n\nmodule.exports = Game;\n"],"sourceRoot":""}